{"version":3,"sources":["app/Routes.ts","app/Header.tsx","app/Main.tsx","tools/guid-generator/GuidGeneratorUtils.ts","tools/guid-generator/GuidGenerator.tsx","tools/url-encode-decode/UrlEncodeDecode.tsx","tools/html-encode-decode/HtmlEncodeDecodeUtils.ts","tools/html-encode-decode/HtmlEncodeDecode.tsx","tools/base64-encode-decode/Base64EncodeDecodeUtils.ts","tools/base64-encode-decode/Base64EncodeDecode.tsx","tools/sha256-generator/Sha256GeneratorUtils.ts","tools/sha256-generator/Sha256Generator.tsx","app/Router.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GuidGeneratorRoute","url","name","UrlEncodeDecodeRoute","HtmlEncodeDecodeRoute","Base64EncodeDecodeRoute","Sha256GeneratorRoute","AllRoutes","Header","useState","showBasic","setShowBasic","expand","dark","bgColor","fluid","href","onClick","icon","fas","navbar","show","right","fullWidth","className","tag","map","x","Main","md","GuidGeneratorUtils","props","guids","i","count","push","newGuid","guid","replace","c","r","Math","random","toString","uppercase","toUpperCase","braces","hypens","GuidGenerator","value","formValue","setFormValue","onChangeBoolean","e","target","currentTarget","checked","id","label","onChange","defaultChecked","textarea","rows","join","UrlEncodeDecode","decoded","encoded","encodeURIComponent","decodeURIComponent","HtmlEncodeDecodeUtils","encodeHtml","decodeEntity","decodeHtml","code","charAt","HTML_ENTITIES","n","substring","length","parseInt","isNaN","String","fromCharCode","HtmlEncodeDecode","Base64EncodeDecodeUtils","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","utf8Encode","base64Keys","encodeBase64","indexOf","c1","c2","utf8Decode","decodeBase64","Base64EncodeDecode","Sha256GeneratorUtils","binarray","hex_tab","str","binb2hex","array","a","b","d","f","g","h","T1","T2","K","HASH","W","Array","j","safeAdd","Gamma1256","Gamma0256","Sigma1256","Ch","Sigma0256","Maj","coreSha256","bin","mask","str2binb","utftext","encodeSha256","y","lsw","S","X","R","z","Sha256Generator","readonly","Router","path","exact","component","ToolsRouter","to","match","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2bd6f68.chunk.js","sourcesContent":["export interface Route {\r\n    url: string,\r\n    name: string,\r\n}\r\n\r\nexport const GuidGeneratorRoute: Route = { \r\n    url: \"guid-generator\", \r\n    name: \"Guid Generator\", \r\n}\r\n\r\nexport const UrlEncodeDecodeRoute: Route = { \r\n    url: \"url-encode-decode\", \r\n    name: \"Url Encode/Decode\", \r\n}\r\n\r\nexport const HtmlEncodeDecodeRoute: Route = { \r\n    url: \"html-encode-decode\", \r\n    name: \"Html Encode/Decode\", \r\n}\r\n\r\nexport const Base64EncodeDecodeRoute: Route = { \r\n    url: \"base64-encode-decode\", \r\n    name: \"Base64 Encode/Decode\", \r\n}\r\n\r\nexport const Sha256GeneratorRoute: Route = { \r\n    url: \"sha256-generator\", \r\n    name: \"SHA256 Generator\", \r\n}\r\n\r\nexport const AllRoutes: Route[] = [\r\n    GuidGeneratorRoute,\r\n    UrlEncodeDecodeRoute,\r\n    HtmlEncodeDecodeRoute,\r\n    Base64EncodeDecodeRoute,\r\n    Sha256GeneratorRoute,\r\n]","import { useState } from \"react\";\r\nimport { AllRoutes } from \"./Routes\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarToggler,\r\n    MDBNavbarBrand,\r\n    MDBCollapse,\r\n    MDBDropdown,\r\n    MDBDropdownToggle,\r\n    MDBDropdownMenu,\r\n    MDBDropdownItem,\r\n    MDBDropdownLink\r\n  } from \"mdb-react-ui-kit\";\r\n\r\nexport const Header: React.FC = () => {\r\n    const [showBasic, setShowBasic] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <MDBNavbar expand=\"lg\" dark bgColor=\"primary\">\r\n                <MDBContainer fluid>\r\n                    <MDBNavbarBrand href=\"/\">Olrix Tools</MDBNavbarBrand>\r\n\r\n                    <MDBNavbarToggler\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                        onClick={() => setShowBasic(!showBasic)}\r\n                    >\r\n                        <MDBIcon icon=\"bars\" fas />\r\n                    </MDBNavbarToggler>\r\n\r\n                    <MDBCollapse navbar show={showBasic}>\r\n                        <MDBNavbarNav right fullWidth={false} className=\"mb-2 mb-lg-0\">\r\n                            <MDBNavbarItem>\r\n                                <MDBDropdown>\r\n                                    <MDBDropdownToggle tag=\"a\" className=\"nav-link\">\r\n                                        Choose tools\r\n                                    </MDBDropdownToggle>\r\n                                    <MDBDropdownMenu>\r\n                                        {AllRoutes.map(x => (\r\n                                            <MDBDropdownItem>\r\n                                                <MDBDropdownLink href={`/tools/${x.url}/`}>{x.name}</MDBDropdownLink>\r\n                                            </MDBDropdownItem>\r\n                                        ))}\r\n                                    </MDBDropdownMenu>\r\n                                </MDBDropdown>\r\n                            </MDBNavbarItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </>\r\n    )\r\n}","import { MDBBtn, MDBCol, MDBRow } from \"mdb-react-ui-kit\"\r\nimport { AllRoutes } from \"./Routes\"\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <MDBRow>\r\n            {AllRoutes.map(x => (\r\n                <MDBCol md=\"3\" className=\"text-center my-2\">\r\n                    <MDBBtn href={`/tools/${x.url}/`} tag=\"a\">{x.name}</MDBBtn>\r\n                </MDBCol>\r\n            ))}\r\n        </MDBRow>\r\n    )\r\n}","interface Props {\r\n    count: number,\r\n    uppercase: boolean,\r\n    braces: boolean,\r\n    hypens: boolean,\r\n}\r\n\r\nexport const GuidGeneratorUtils = {\r\n    generate: (props: Props): string[] => {\r\n        const guids: string[] = [];\r\n        for(let i = 0; i < props.count; i++) {\r\n            guids.push(newGuid(props));\r\n        }\r\n        return guids;\r\n    }\r\n}\r\n\r\nfunction newGuid(props: Props): string {\r\n    let guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n        const r = Math.random() * 16 | 0;\r\n        const v = c === \"x\" ? r : (r && 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n\r\n    if (props.uppercase) {\r\n        guid = guid.toUpperCase();\r\n    }\r\n\r\n    if (props.braces) {\r\n        guid = `{${guid}}`;\r\n    }\r\n\r\n    if (!props.hypens) {\r\n        guid = guid.replace(/-/g, \"\");\r\n    }\r\n\r\n    return guid;\r\n}","import { MDBBtn, MDBCheckbox, MDBCol, MDBInput } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { GuidGeneratorUtils } from \"./GuidGeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    count: number,\r\n    uppercase: boolean,\r\n    braces: boolean,\r\n    hypens: boolean,\r\n    value: string[],\r\n}\r\n\r\nexport const GuidGenerator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        count: 1,\r\n        uppercase: false,\r\n        braces: false,\r\n        hypens: true,\r\n        value: [],\r\n    });\r\n\r\n    const onChange = (e: any) => {\r\n        setFormValue({ ...formValue, [e.target.name]: e.currentTarget.value });\r\n    };\r\n\r\n    const onChangeBoolean = (e: any) => {\r\n        setFormValue({ ...formValue, [e.target.name]: e.currentTarget.checked });\r\n    };\r\n\r\n    const onGenerate = () => {\r\n        setFormValue({ ...formValue, value: GuidGeneratorUtils.generate(formValue) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Guid Generator</h1>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBInput\r\n                    value={formValue.count.toString()}\r\n                    name=\"count\"\r\n                    id=\"count\"\r\n                    label=\"How many?\"\r\n                    onChange={onChange}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"uppercase\" \r\n                    id=\"uppercase\" \r\n                    label=\"Uppercase\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.uppercase}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"braces\" \r\n                    id=\"braces\" \r\n                    label=\"Braces\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.braces}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"hypens\"\r\n                    id=\"hypens\" \r\n                    label=\"Hypens\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.hypens}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBBtn onClick={onGenerate}>Generate</MDBBtn>\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBInput label=\"Generated Guids\" textarea rows={10} value={formValue.value.join(\"\\n\")} />\r\n            </MDBCol>\r\n        </>\r\n    )\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const UrlEncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: encodeURIComponent(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: decodeURIComponent(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Url Encode/Decode</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Url\" \r\n                        textarea \r\n                        rows={10} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Url\" \r\n                        textarea \r\n                        rows={10} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const HtmlEncodeDecodeUtils = {\r\n    encode: (value: string): string => encodeHtml(value),\r\n\r\n    decode: (value: string): string => decodeHtml(value),\r\n}\r\n\r\nfunction encodeHtml(value: string): string {\r\n    return value\r\n        .replace(/&/g, \"&amp;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/'/g, \"&apos;\")\r\n        .replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\");\r\n}\r\n\r\nfunction decodeHtml(value: string): string {\r\n    return value.replace(/&#?\\w+;/g, decodeEntity);\r\n}\r\n\r\nfunction decodeEntity(code: string) {\r\n  // name type\r\n  if (code.charAt(1) !== \"#\") {\r\n    return HTML_ENTITIES[code] || code;\r\n  }\r\n\r\n  var n, c = code.charAt(2);\r\n  // hex number\r\n  if (c === \"x\" || c === \"X\") {\r\n    c = code.substring(3, code.length - 1);\r\n    n = parseInt(c, 16);\r\n  } else {\r\n    c = code.substring(2, code.length - 1);\r\n    n = parseInt(c);\r\n  }\r\n  return isNaN(n) ? code : String.fromCharCode(n);\r\n}\r\n\r\nconst HTML_ENTITIES: any = {\r\n  \"&nbsp;\" : \"\\u00A0\",\r\n  \"&iexcl;\" : \"\\u00A1\",\r\n  \"&cent;\" : \"\\u00A2\",\r\n  \"&pound;\" : \"\\u00A3\",\r\n  \"&curren;\" : \"\\u00A4\",\r\n  \"&yen;\" : \"\\u00A5\",\r\n  \"&brvbar;\" : \"\\u00A6\",\r\n  \"&sect;\" : \"\\u00A7\",\r\n  \"&uml;\" : \"\\u00A8\",\r\n  \"&copy;\" : \"\\u00A9\",\r\n  \"&ordf;\" : \"\\u00AA\",\r\n  \"&laquo;\" : \"\\u00AB\",\r\n  \"&not;\" : \"\\u00AC\",\r\n  \"&shy;\" : \"\\u00AD\",\r\n  \"&reg;\" : \"\\u00AE\",\r\n  \"&macr;\" : \"\\u00AF\",\r\n  \"&deg;\" : \"\\u00B0\",\r\n  \"&plusmn;\" : \"\\u00B1\",\r\n  \"&sup2;\" : \"\\u00B2\",\r\n  \"&sup3;\" : \"\\u00B3\",\r\n  \"&acute;\" : \"\\u00B4\",\r\n  \"&micro;\" : \"\\u00B5\",\r\n  \"&para;\" : \"\\u00B6\",\r\n  \"&middot;\" : \"\\u00B7\",\r\n  \"&cedil;\" : \"\\u00B8\",\r\n  \"&sup1;\" : \"\\u00B9\",\r\n  \"&ordm;\" : \"\\u00BA\",\r\n  \"&raquo;\" : \"\\u00BB\",\r\n  \"&frac14;\" : \"\\u00BC\",\r\n  \"&frac12;\" : \"\\u00BD\",\r\n  \"&frac34;\" : \"\\u00BE\",\r\n  \"&iquest;\" : \"\\u00BF\",\r\n  \"&Agrave;\" : \"\\u00C0\",\r\n  \"&Aacute;\" : \"\\u00C1\",\r\n  \"&Acirc;\" : \"\\u00C2\",\r\n  \"&Atilde;\" : \"\\u00C3\",\r\n  \"&Auml;\" : \"\\u00C4\",\r\n  \"&Aring;\" : \"\\u00C5\",\r\n  \"&AElig;\" : \"\\u00C6\",\r\n  \"&Ccedil;\" : \"\\u00C7\",\r\n  \"&Egrave;\" : \"\\u00C8\",\r\n  \"&Eacute;\" : \"\\u00C9\",\r\n  \"&Ecirc;\" : \"\\u00CA\",\r\n  \"&Euml;\" : \"\\u00CB\",\r\n  \"&Igrave;\" : \"\\u00CC\",\r\n  \"&Iacute;\" : \"\\u00CD\",\r\n  \"&Icirc;\" : \"\\u00CE\",\r\n  \"&Iuml;\" : \"\\u00CF\",\r\n  \"&ETH;\" : \"\\u00D0\",\r\n  \"&Ntilde;\" : \"\\u00D1\",\r\n  \"&Ograve;\" : \"\\u00D2\",\r\n  \"&Oacute;\" : \"\\u00D3\",\r\n  \"&Ocirc;\" : \"\\u00D4\",\r\n  \"&Otilde;\" : \"\\u00D5\",\r\n  \"&Ouml;\" : \"\\u00D6\",\r\n  \"&times;\" : \"\\u00D7\",\r\n  \"&Oslash;\" : \"\\u00D8\",\r\n  \"&Ugrave;\" : \"\\u00D9\",\r\n  \"&Uacute;\" : \"\\u00DA\",\r\n  \"&Ucirc;\" : \"\\u00DB\",\r\n  \"&Uuml;\" : \"\\u00DC\",\r\n  \"&Yacute;\" : \"\\u00DD\",\r\n  \"&THORN;\" : \"\\u00DE\",\r\n  \"&szlig;\" : \"\\u00DF\",\r\n  \"&agrave;\" : \"\\u00E0\",\r\n  \"&aacute;\" : \"\\u00E1\",\r\n  \"&acirc;\" : \"\\u00E2\",\r\n  \"&atilde;\" : \"\\u00E3\",\r\n  \"&auml;\" : \"\\u00E4\",\r\n  \"&aring;\" : \"\\u00E5\",\r\n  \"&aelig;\" : \"\\u00E6\",\r\n  \"&ccedil;\" : \"\\u00E7\",\r\n  \"&egrave;\" : \"\\u00E8\",\r\n  \"&eacute;\" : \"\\u00E9\",\r\n  \"&ecirc;\" : \"\\u00EA\",\r\n  \"&euml;\" : \"\\u00EB\",\r\n  \"&igrave;\" : \"\\u00EC\",\r\n  \"&iacute;\" : \"\\u00ED\",\r\n  \"&icirc;\" : \"\\u00EE\",\r\n  \"&iuml;\" : \"\\u00EF\",\r\n  \"&eth;\" : \"\\u00F0\",\r\n  \"&ntilde;\" : \"\\u00F1\",\r\n  \"&ograve;\" : \"\\u00F2\",\r\n  \"&oacute;\" : \"\\u00F3\",\r\n  \"&ocirc;\" : \"\\u00F4\",\r\n  \"&otilde;\" : \"\\u00F5\",\r\n  \"&ouml;\" : \"\\u00F6\",\r\n  \"&divide;\" : \"\\u00F7\",\r\n  \"&oslash;\" : \"\\u00F8\",\r\n  \"&ugrave;\" : \"\\u00F9\",\r\n  \"&uacute;\" : \"\\u00FA\",\r\n  \"&ucirc;\" : \"\\u00FB\",\r\n  \"&uuml;\" : \"\\u00FC\",\r\n  \"&yacute;\" : \"\\u00FD\",\r\n  \"&thorn;\" : \"\\u00FE\",\r\n  \"&yuml;\" : \"\\u00FF\",\r\n  \"&quot;\" : \"\\u0022\",\r\n  \"&amp;\" : \"\\u0026\",\r\n  \"&lt;\" : \"\\u003C\",\r\n  \"&gt;\" : \"\\u003E\",\r\n  \"&apos;\" : \"\\u0027\",\r\n  \"&OElig;\" : \"\\u0152\",\r\n  \"&oelig;\" : \"\\u0153\",\r\n  \"&Scaron;\" : \"\\u0160\",\r\n  \"&scaron;\" : \"\\u0161\",\r\n  \"&Yuml;\" : \"\\u0178\",\r\n  \"&circ;\" : \"\\u02C6\",\r\n  \"&tilde;\" : \"\\u02DC\",\r\n  \"&ensp;\" : \"\\u2002\",\r\n  \"&emsp;\" : \"\\u2003\",\r\n  \"&thinsp;\" : \"\\u2009\",\r\n  \"&zwnj;\" : \"\\u200C\",\r\n  \"&zwj;\" : \"\\u200D\",\r\n  \"&lrm;\" : \"\\u200E\",\r\n  \"&rlm;\" : \"\\u200F\",\r\n  \"&ndash;\" : \"\\u2013\",\r\n  \"&mdash;\" : \"\\u2014\",\r\n  \"&lsquo;\" : \"\\u2018\",\r\n  \"&rsquo;\" : \"\\u2019\",\r\n  \"&sbquo;\" : \"\\u201A\",\r\n  \"&ldquo;\" : \"\\u201C\",\r\n  \"&rdquo;\" : \"\\u201D\",\r\n  \"&bdquo;\" : \"\\u201E\",\r\n  \"&dagger;\" : \"\\u2020\",\r\n  \"&Dagger;\" : \"\\u2021\",\r\n  \"&permil;\" : \"\\u2030\",\r\n  \"&lsaquo;\" : \"\\u2039\",\r\n  \"&rsaquo;\" : \"\\u203A\",\r\n  \"&euro;\" : \"\\u20AC\",\r\n  \"&fnof;\" : \"\\u0192\",\r\n  \"&Alpha;\" : \"\\u0391\",\r\n  \"&Beta;\" : \"\\u0392\",\r\n  \"&Gamma;\" : \"\\u0393\",\r\n  \"&Delta;\" : \"\\u0394\",\r\n  \"&Epsilon;\" : \"\\u0395\",\r\n  \"&Zeta;\" : \"\\u0396\",\r\n  \"&Eta;\" : \"\\u0397\",\r\n  \"&Theta;\" : \"\\u0398\",\r\n  \"&Iota;\" : \"\\u0399\",\r\n  \"&Kappa;\" : \"\\u039A\",\r\n  \"&Lambda;\" : \"\\u039B\",\r\n  \"&Mu;\" : \"\\u039C\",\r\n  \"&Nu;\" : \"\\u039D\",\r\n  \"&Xi;\" : \"\\u039E\",\r\n  \"&Omicron;\" : \"\\u039F\",\r\n  \"&Pi;\" : \"\\u03A0\",\r\n  \"&Rho;\" : \"\\u03A1\",\r\n  \"&Sigma;\" : \"\\u03A3\",\r\n  \"&Tau;\" : \"\\u03A4\",\r\n  \"&Upsilon;\" : \"\\u03A5\",\r\n  \"&Phi;\" : \"\\u03A6\",\r\n  \"&Chi;\" : \"\\u03A7\",\r\n  \"&Psi;\" : \"\\u03A8\",\r\n  \"&Omega;\" : \"\\u03A9\",\r\n  \"&alpha;\" : \"\\u03B1\",\r\n  \"&beta;\" : \"\\u03B2\",\r\n  \"&gamma;\" : \"\\u03B3\",\r\n  \"&delta;\" : \"\\u03B4\",\r\n  \"&epsilon;\" : \"\\u03B5\",\r\n  \"&zeta;\" : \"\\u03B6\",\r\n  \"&eta;\" : \"\\u03B7\",\r\n  \"&theta;\" : \"\\u03B8\",\r\n  \"&iota;\" : \"\\u03B9\",\r\n  \"&kappa;\" : \"\\u03BA\",\r\n  \"&lambda;\" : \"\\u03BB\",\r\n  \"&mu;\" : \"\\u03BC\",\r\n  \"&nu;\" : \"\\u03BD\",\r\n  \"&xi;\" : \"\\u03BE\",\r\n  \"&omicron;\" : \"\\u03BF\",\r\n  \"&pi;\" : \"\\u03C0\",\r\n  \"&rho;\" : \"\\u03C1\",\r\n  \"&sigmaf;\" : \"\\u03C2\",\r\n  \"&sigma;\" : \"\\u03C3\",\r\n  \"&tau;\" : \"\\u03C4\",\r\n  \"&upsilon;\" : \"\\u03C5\",\r\n  \"&phi;\" : \"\\u03C6\",\r\n  \"&chi;\" : \"\\u03C7\",\r\n  \"&psi;\" : \"\\u03C8\",\r\n  \"&omega;\" : \"\\u03C9\",\r\n  \"&thetasym;\" : \"\\u03D1\",\r\n  \"&upsih;\" : \"\\u03D2\",\r\n  \"&piv;\" : \"\\u03D6\",\r\n  \"&bull;\" : \"\\u2022\",\r\n  \"&hellip;\" : \"\\u2026\",\r\n  \"&prime;\" : \"\\u2032\",\r\n  \"&Prime;\" : \"\\u2033\",\r\n  \"&oline;\" : \"\\u203E\",\r\n  \"&frasl;\" : \"\\u2044\",\r\n  \"&weierp;\" : \"\\u2118\",\r\n  \"&image;\" : \"\\u2111\",\r\n  \"&real;\" : \"\\u211C\",\r\n  \"&trade;\" : \"\\u2122\",\r\n  \"&alefsym;\" : \"\\u2135\",\r\n  \"&larr;\" : \"\\u2190\",\r\n  \"&uarr;\" : \"\\u2191\",\r\n  \"&rarr;\" : \"\\u2192\",\r\n  \"&darr;\" : \"\\u2193\",\r\n  \"&harr;\" : \"\\u2194\",\r\n  \"&crarr;\" : \"\\u21B5\",\r\n  \"&lArr;\" : \"\\u21D0\",\r\n  \"&uArr;\" : \"\\u21D1\",\r\n  \"&rArr;\" : \"\\u21D2\",\r\n  \"&dArr;\" : \"\\u21D3\",\r\n  \"&hArr;\" : \"\\u21D4\",\r\n  \"&forall;\" : \"\\u2200\",\r\n  \"&part;\" : \"\\u2202\",\r\n  \"&exist;\" : \"\\u2203\",\r\n  \"&empty;\" : \"\\u2205\",\r\n  \"&nabla;\" : \"\\u2207\",\r\n  \"&isin;\" : \"\\u2208\",\r\n  \"&notin;\" : \"\\u2209\",\r\n  \"&ni;\" : \"\\u220B\",\r\n  \"&prod;\" : \"\\u220F\",\r\n  \"&sum;\" : \"\\u2211\",\r\n  \"&minus;\" : \"\\u2212\",\r\n  \"&lowast;\" : \"\\u2217\",\r\n  \"&radic;\" : \"\\u221A\",\r\n  \"&prop;\" : \"\\u221D\",\r\n  \"&infin;\" : \"\\u221E\",\r\n  \"&ang;\" : \"\\u2220\",\r\n  \"&and;\" : \"\\u2227\",\r\n  \"&or;\" : \"\\u2228\",\r\n  \"&cap;\" : \"\\u2229\",\r\n  \"&cup;\" : \"\\u222A\",\r\n  \"&int;\" : \"\\u222B\",\r\n  \"&there4;\" : \"\\u2234\",\r\n  \"&sim;\" : \"\\u223C\",\r\n  \"&cong;\" : \"\\u2245\",\r\n  \"&asymp;\" : \"\\u2248\",\r\n  \"&ne;\" : \"\\u2260\",\r\n  \"&equiv;\" : \"\\u2261\",\r\n  \"&le;\" : \"\\u2264\",\r\n  \"&ge;\" : \"\\u2265\",\r\n  \"&sub;\" : \"\\u2282\",\r\n  \"&sup;\" : \"\\u2283\",\r\n  \"&nsub;\" : \"\\u2284\",\r\n  \"&sube;\" : \"\\u2286\",\r\n  \"&supe;\" : \"\\u2287\",\r\n  \"&oplus;\" : \"\\u2295\",\r\n  \"&otimes;\" : \"\\u2297\",\r\n  \"&perp;\" : \"\\u22A5\",\r\n  \"&sdot;\" : \"\\u22C5\",\r\n  \"&lceil;\" : \"\\u2308\",\r\n  \"&rceil;\" : \"\\u2309\",\r\n  \"&lfloor;\" : \"\\u230A\",\r\n  \"&rfloor;\" : \"\\u230B\",\r\n  \"&lang;\" : \"\\u2329\",\r\n  \"&rang;\" : \"\\u232A\",\r\n  \"&loz;\" : \"\\u25CA\",\r\n  \"&spades;\" : \"\\u2660\",\r\n  \"&clubs;\" : \"\\u2663\",\r\n  \"&hearts;\" : \"\\u2665\",\r\n  \"&diams;\" : \"\\u2666\"\r\n};","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { HtmlEncodeDecodeUtils } from \"./HtmlEncodeDecodeUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const HtmlEncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: HtmlEncodeDecodeUtils.encode(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: HtmlEncodeDecodeUtils.decode(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Html Encode/Decode</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Html\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Html\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const Base64EncodeDecodeUtils = {\r\n    encode: (value: string): string => encodeBase64(value),\r\n\r\n    decode: (value: string): string => decodeBase64(value),\r\n}\r\n\r\nconst base64Keys = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n \r\nfunction encodeBase64(value: string) {\r\n  let output = \"\";\r\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n  let i = 0;\r\n\r\n  value = utf8Encode(value);\r\n\r\n  while (i < value.length) {\r\n\r\n    chr1 = value.charCodeAt(i++);\r\n    chr2 = value.charCodeAt(i++);\r\n    chr3 = value.charCodeAt(i++);\r\n\r\n    enc1 = chr1 >> 2;\r\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n    enc4 = chr3 & 63;\r\n\r\n    if (isNaN(chr2)) {\r\n      enc3 = enc4 = 64;\r\n    } else if (isNaN(chr3)) {\r\n      enc4 = 64;\r\n    }\r\n\r\n    output = output +\r\n    base64Keys.charAt(enc1) + base64Keys.charAt(enc2) +\r\n    base64Keys.charAt(enc3) + base64Keys.charAt(enc4);\r\n\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction decodeBase64(value: string): string {\r\n  let output = \"\";\r\n  let chr1, chr2, chr3;\r\n  let enc1, enc2, enc3, enc4;\r\n  let i = 0;\r\n\r\n  value = value.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); //eslint-disable-line\r\n\r\n  while (i < value.length) {\r\n\r\n    enc1 = base64Keys.indexOf(value.charAt(i++));\r\n    enc2 = base64Keys.indexOf(value.charAt(i++));\r\n    enc3 = base64Keys.indexOf(value.charAt(i++));\r\n    enc4 = base64Keys.indexOf(value.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  }\r\n\r\n  output = utf8Decode(output);\r\n  return output;\r\n}\r\n\r\n// private method for UTF-8 encoding\r\nfunction utf8Encode(value: string): string {\r\n    value = value.replace(/\\r\\n/g,\"\\n\");\r\n    var output = \"\";\r\n\r\n    for (var n = 0; n < value.length; n++) {\r\n\r\n      var c = value.charCodeAt(n);\r\n\r\n      if (c < 128) {\r\n        output += String.fromCharCode(c);\r\n      }\r\n      else if((c > 127) && (c < 2048)) {\r\n        output += String.fromCharCode((c >> 6) | 192);\r\n        output += String.fromCharCode((c & 63) | 128);\r\n      }\r\n      else {\r\n        output += String.fromCharCode((c >> 12) | 224);\r\n        output += String.fromCharCode(((c >> 6) & 63) | 128);\r\n        output += String.fromCharCode((c & 63) | 128);\r\n      }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nfunction utf8Decode(value: string): string {\r\n    let output = \"\";\r\n    let i = 0;\r\n    let c = 0, c1 = 0, c2 = 0;\r\n\r\n    while (i < value.length) {\r\n      c = value.charCodeAt(i);\r\n\r\n      if (c < 128) {\r\n        output += String.fromCharCode(c);\r\n        i++;\r\n      }\r\n      else if((c > 191) && (c < 224)) {\r\n        c1 = value.charCodeAt(i+1);\r\n        output += String.fromCharCode(((c & 31) << 6) | (c1 & 63));\r\n        i += 2;\r\n      }\r\n      else {\r\n        c1 = value.charCodeAt(i+1);\r\n        c2 = value.charCodeAt(i+2);\r\n        output += String.fromCharCode(((c & 15) << 12) | ((c1 & 63) << 6) | (c2 & 63));\r\n        i += 3;\r\n      }\r\n    }\r\n\r\n    return output;\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Base64EncodeDecodeUtils } from \"./Base64EncodeDecodeUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Base64EncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Base64EncodeDecodeUtils.encode(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: Base64EncodeDecodeUtils.decode(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Base64 Encode/Decode</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Base64\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Base64\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const Sha256GeneratorUtils = {\r\n    encode: (value: string): string => encodeSha256(value),\r\n}\r\n\r\nconst hexcase = 0;\r\nconst charSize   = 8;\r\n \r\nfunction encodeSha256(value: string): string {\r\n\tvalue = utf8Encode(value);\r\n\treturn binb2hex(coreSha256(str2binb(value), value.length * charSize));\r\n}\r\n \r\nfunction safeAdd (x: number, y: number): number {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n\r\nfunction S (X: number, n: number): number { return ( X >>> n ) | (X << (32 - n)); }\r\nfunction R (X: number, n: number): number { return ( X >>> n ); }\r\nfunction Ch(x: number, y: number, z: number): number { return ((x & y) ^ ((~x) & z)); }\r\nfunction Maj(x: number, y: number, z: number): number { return ((x & y) ^ (x & z) ^ (y & z)); }\r\nfunction Sigma0256(x: number): number { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }\r\nfunction Sigma1256(x: number): number { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }\r\nfunction Gamma0256(x: number): number { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }\r\nfunction Gamma1256(x: number): number { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }\r\n\r\nfunction coreSha256 (array: number[], length: number): number[] {\r\n    let K: number[] = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];\r\n    let HASH: number[] = [0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19];\r\n    let W: number[] = new Array(64);\r\n    let a, b, c, d, e, f, g, h;\r\n    let T1, T2;\r\n\r\n    array[length >> 5] |= 0x80 << (24 - length % 32);\r\n    array[((length + 64 >> 9) << 4) + 15] = length;\r\n\r\n    for (let i = 0; i<array.length; i+=16) {\r\n      a = HASH[0];\r\n      b = HASH[1];\r\n      c = HASH[2];\r\n      d = HASH[3];\r\n      e = HASH[4];\r\n      f = HASH[5];\r\n      g = HASH[6];\r\n      h = HASH[7];\r\n\r\n      for (let j = 0; j<64; j++) {\r\n        if (j < 16) W[j] = array[j + i];\r\n        else W[j] = safeAdd(safeAdd(safeAdd(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\r\n\r\n        T1 = safeAdd(safeAdd(safeAdd(safeAdd(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\r\n        T2 = safeAdd(Sigma0256(a), Maj(a, b, c));\r\n\r\n        h = g;\r\n        g = f;\r\n        f = e;\r\n        e = safeAdd(d, T1);\r\n        d = c;\r\n        c = b;\r\n        b = a;\r\n        a = safeAdd(T1, T2);\r\n      }\r\n\r\n      HASH[0] = safeAdd(a, HASH[0]);\r\n      HASH[1] = safeAdd(b, HASH[1]);\r\n      HASH[2] = safeAdd(c, HASH[2]);\r\n      HASH[3] = safeAdd(d, HASH[3]);\r\n      HASH[4] = safeAdd(e, HASH[4]);\r\n      HASH[5] = safeAdd(f, HASH[5]);\r\n      HASH[6] = safeAdd(g, HASH[6]);\r\n      HASH[7] = safeAdd(h, HASH[7]);\r\n    }\r\n    return HASH;\r\n}\r\n\r\nfunction str2binb(value: string): number[] {\r\n    const bin: number[] = [];\r\n    const mask = (1 << charSize) - 1;\r\n    for(let i = 0; i < value.length * charSize; i += charSize) {\r\n      bin[i>>5] |= (value.charCodeAt(i / charSize) & mask) << (24 - i%32);\r\n    }\r\n    return bin;\r\n}\r\n\r\nfunction utf8Encode(value: string): string {\r\n    value = value.replace(/\\r\\n/g,\"\\n\");\r\n    let utftext = \"\";\r\n\r\n    for (let n = 0; n < value.length; n++) {\r\n\r\n      const c = value.charCodeAt(n);\r\n\r\n      if (c < 128) {\r\n        utftext += String.fromCharCode(c);\r\n      }\r\n      else if((c > 127) && (c < 2048)) {\r\n        utftext += String.fromCharCode((c >> 6) | 192);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n      else {\r\n        utftext += String.fromCharCode((c >> 12) | 224);\r\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n\r\n    }\r\n\r\n    return utftext;\r\n}\r\n\r\nfunction binb2hex(binarray: number[]): string {\r\n    const hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n    let str = \"\";\r\n    for(var i = 0; i < binarray.length * 4; i++) {\r\n      str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\r\n      hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\r\n    }\r\n    return str;\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Sha256GeneratorUtils } from \"./Sha256GeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Sha256Generator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Sha256GeneratorUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online SHA256 Generator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"SHA256\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","import { Switch, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Main } from \"./Main\";\r\nimport { \r\n    Base64EncodeDecodeRoute, \r\n    GuidGeneratorRoute, \r\n    HtmlEncodeDecodeRoute, \r\n    Sha256GeneratorRoute, \r\n    UrlEncodeDecodeRoute \r\n} from \"./Routes\";\r\nimport { GuidGenerator } from \"../tools/guid-generator/GuidGenerator\";\r\nimport { UrlEncodeDecode } from \"../tools/url-encode-decode/UrlEncodeDecode\";\r\nimport { HtmlEncodeDecode } from \"../tools/html-encode-decode/HtmlEncodeDecode\";\r\nimport { Base64EncodeDecode } from \"../tools/base64-encode-decode/Base64EncodeDecode\";\r\nimport { Sha256Generator } from \"../tools/sha256-generator/Sha256Generator\";\r\n\r\nexport const Router: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Main} />\r\n            <Route path=\"/tools\" component={ToolsRouter} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst ToolsRouter: React.FC<RouteComponentProps> = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route path={`${props.match.url}/${GuidGeneratorRoute.url}`} component={GuidGenerator} />\r\n            <Route path={`${props.match.url}/${UrlEncodeDecodeRoute.url}`} component={UrlEncodeDecode} />\r\n            <Route path={`${props.match.url}/${HtmlEncodeDecodeRoute.url}`} component={HtmlEncodeDecode} />\r\n            <Route path={`${props.match.url}/${Base64EncodeDecodeRoute.url}`} component={Base64EncodeDecode} />\r\n            <Route path={`${props.match.url}/${Sha256GeneratorRoute.url}`} component={Sha256Generator} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Header } from \"./Header\";\r\nimport { Router } from \"./Router\";\r\nimport { MDBContainer } from \"mdb-react-ui-kit\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <MDBContainer fluid className=\"mt-3\">\r\n        <Router />\r\n      </MDBContainer>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}