{"version":3,"sources":["tools/base64-encode-file-or-image/Base64EncodeFileOrImage.tsx","tools/guid-generator/GuidGeneratorUtils.ts","tools/guid-generator/GuidGenerator.tsx","tools/html-encode-decode/HtmlEncodeDecodeUtils.ts","tools/javascript-online-editor/JavaScriptOnlineEditor.tsx","tools/json-formatter/JsonFormatterUtils.ts","tools/json-formatter/JsonFormatter.tsx","tools/json-viewer/JsonViewerUtils.ts","tools/json-viewer/JsonViewer.tsx","tools/loan-calculator/LoanCalculatorUtils.ts","tools/loan-calculator/LoanCalculator.tsx","tools/sha1-generator/Sha1GeneratorUtils.ts","tools/sha1-generator/Sha1Generator.tsx","tools/text-differences/TextDifferencesUtils.ts","tools/translit-from-russian-to-english/TranslitFromRussianToEnglishUtils.ts","tools/unit-converter/UnitConverterUtils.ts","tools/unit-converter/UnitConverter.tsx","tools/word-counter/WordCounterStopWordsUtils.ts","tools/word-counter/WordCounterUtils.ts","tools/word-counter/WordCounter.tsx","app/Routes.ts","tools/base64-encode-decode/Base64EncodeDecode.tsx","tools/html-encode-decode/HtmlEncodeDecode.tsx","tools/md5-generator/Md5Generator.tsx","tools/sha256-generator/Sha256Generator.tsx","tools/text-differences/TextDifferences.tsx","tools/translit-from-russian-to-english/TranslitFromRussianToEnglish.tsx","tools/unicode-to-utf8-converter/UnicodeToUtf8Converter.tsx","tools/url-encode-decode/UrlEncodeDecode.tsx","app/Header.tsx","app/Main.tsx","app/Router.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Base64EncodeFileOrImageEncoded","props","className","style","height","dangerouslySetInnerHTML","__html","value","Base64EncodeFileOrImageEncodedMemo","memo","GuidGeneratorUtils","guids","i","count","push","newGuid","guid","replace","c","r","Math","random","toString","uppercase","toUpperCase","braces","hypens","HtmlEncodeDecodeUtils","encodeHtml","decodeEntity","decodeHtml","code","charAt","HTML_ENTITIES","n","substring","length","parseInt","isNaN","String","fromCharCode","JavaScriptOnlineEditorResultTab","messages","values","timeout","JavaScriptOnlineEditorTabs","useState","items","defaultItem","name","activeTab","setActiveTab","justify","map","x","onClick","active","title","show","onChange","JavaScriptOnlineEditorInput","textarea","rows","e","target","currentTarget","JavaScriptOnlineEditorResultTabs","preview","tab","console","reload","html","javaScript","css","onLog","JavaScriptOnlineEditorHtml","iframeRef","createRef","useEffect","oldConsole","newConsole","current","contentWindow","log","message","info","warn","error","htmlTemplate","ref","srcDoc","frameBorder","JavaScriptOnlineEditorEmptyHtml","JavaScriptOnlineEditorConsole","consoleText","reduce","defaultHtml","defaultJavaScript","defaultCss","JsonFormatterUtils","formatValue","JSON","stringify","parse","parseJson","parseFloat","formatNumber","formatString","formatBoolean","_","formatNull","formatJson","JsonViewerUtils","getObject","parseJsonObject","getProperties","Object","keys","key","getValue","jsonValue","Array","isArray","type","expanded","LoanCalculatorUtils","amount","term","rate","monthlyRate","monthlyPayment","pow","months","month","balance","now","Date","date","setMonth","getMonth","interest","principal","payment","index","calculateMonths","total","next","calculateTotal","calculate","LoanCalculatorFrom","md","htmlFor","LoanCalculatorFromTerm","termPeriod","formValue","setFormValue","newFormValue","calculateAndSendChange","LoanCalculatorFromDropDown","tag","LoanCalculatorTable","maxCount","window","setTimeout","result","small","hover","scope","slice","LoanCalculatorTableRowMemo","LoanCalculatorTableRow","LoanCalculatorSummary","NumberView","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","format","DateView","parts","DateTimeFormat","dateStyle","formatToParts","find","year","NumberEdit","id","Sha1GeneratorUtils","blockstart","j","A","B","C","D","E","temp","W","H0","H1","H2","H3","H4","valueLength","utftext","charCodeAt","utf8Encode","words","rotateLeft","convertHex","encodeSha1","s","str","TextDifferencesUtils","before","after","TextDifferencer","findDifferencesBetweenStrings","insertElementAt","array","element","splice","insertElementsAt","elements","string0","string1","lengthOfShorterString","passagePairsMatchingAtExtremes","lengthOfMatchingSubstring","offsetForString0","offsetForString1","matchingSubstringAtExtreme","substr","passagePairMatchingAtExtreme","TextPassagePair","TextPassage","passagePairsAll","passagePairsMatching","this","findPassagePairsMatchingBetweenStrings","insertPassagePairsDifferentBetweenMatching","TextDifferences","positionOffsets","longestCommonPassagePair","findLongestCommonPassagePair","lengthOfCommonPassage","passages","text","passage0","passage1","passagePairSetsMatchingBeforeAndAfter","position","returnValue","lengthOfString0","lengthOfString1","substringLengthsForRow","substringLengthsForRowPrev","lengthOfLongestCommonSubstringSoFar","cellValue","startIndex","longestCommonSubstringSoFar","passagePairsToInsertBetween","pMax","p","passagePairToInsertAfter","passagePairToInsertBefore","buildAndInsertPassagePairBetweenExisting","indexOfPassagePairFinal","passagePairFinal","doPassagesMatch","lengthOfPassageToInsertAfter","positionsForPassagePairDifferent","passageToInsert0","passageToInsert1","passagePairToInsert","passagePairs","escapeStringForHTML","stringToEscape","TranslitFromRussianToEnglishUtils","char","translitChar","translitChars","translit","Unit","UnitType","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","UnitConverterUtils","from","to","UnitValues","convertUnit","UnitGroups","DataStorage","bit","b","KB","MB","GB","TB","PB","EB","Time","tick","ms","m","h","d","M","y","UnitTypes","UnitConverterRow","params","units","onConvert","onChangeUnit","label","readonly","UnitConverterUnitsDropDown","group","WordCounterStopWordsUtils","stopWords","size","addStopWords","split","english","russian","get","isStopWord","forEach","set","trim","filter","Map","WordCounterUtils","statistics","calculateStatistics","oneKeywords","calculateOneKeywords","twoKeywords","calculateTwoKeywords","threeKeywords","calculateThreeKeywords","calculateKeyword","getWords","chars","charsNoSpaces","sentences","match","paragraphs","statistic","calculateKeywords","twoWords","threeWords","keywords","hasNotStopWord","word","a","percent","sort","toKeywordsArray","toLocaleLowerCase","WordCounterStatistics","wordCount","WordCounterKeywords","render","WordCounterKeywordsItems","WordCounterTabs","WordCounterTools","WordCounterToolsOneLine","line","WordCounterToolsHtml","AllRoutes","url","h1","component","decoded","encoded","Base64","encodeText","decodeToText","uploadFileRef","click","color","disabled","navigator","clipboard","writeText","display","files","file","fileSizeMB","toFixed","reader","FileReader","readAsArrayBuffer","Blob","onload","arrayBuffer","bytes","Uint8Array","encodeByteArray","generate","onChangeBoolean","checked","defaultChecked","join","consoleValue","setConsoleValue","reloadValue","setReloadValue","action","clearTimeout","concat","formatValueHtml","jsonObject","MD5","SHA256","differences","findDifferences","UTF8","encode","utf8Text","symbols","toLocaleUpperCase","formatView","border","background","encodeURIComponent","decodeURIComponent","setWordCount","Header","showBasic","setShowBasic","expand","dark","bgColor","fluid","href","icon","fas","navbar","right","fullWidth","Main","search","routes","value1","value2","includes","Router","path","exact","ToolsRouter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec70b58e.chunk.js","sourcesContent":["import { MDBBtn, MDBIcon } from \"mdb-react-ui-kit\";\nimport { createRef, memo, useState } from \"react\";\nimport { Base64 } from \"base64-js-tools\";\n\ninterface FormValue {\n    encoded: string;\n}\n\nconst maxSizeMB = 5;\n\nexport const Base64EncodeFileOrImage: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        encoded: \"\",\n    });\n\n    const uploadFileRef: any = createRef();\n\n    const onUpload = (e: any) => {\n        if (e.target.files.length > 0) {\n            setFormValue({ encoded: \"Loading...\" });\n\n            const file = e.target.files[0] as File;\n            const fileSizeMB = file.size / 1024 / 1024;\n            if (fileSizeMB > maxSizeMB) {\n                setFormValue({\n                    encoded: `File too large. Max file size ${maxSizeMB} MB. File size ${fileSizeMB.toFixed(\n                        1,\n                    )} MB`,\n                });\n                return;\n            }\n\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(new Blob([file]));\n            reader.onload = function () {\n                var arrayBuffer = reader.result;\n                var bytes = new Uint8Array(arrayBuffer as any);\n                setFormValue({ encoded: Base64.encodeByteArray(bytes as any) });\n            };\n        }\n    };\n\n    const onChooseFile = () => {\n        uploadFileRef.current && uploadFileRef.current.click();\n    };\n\n    const onCopyToClipboard = () => {\n        navigator.clipboard.writeText(formValue.encoded);\n    };\n\n    return (\n        <>\n            <div className=\"mb-3\">\n                <MDBBtn onClick={onChooseFile}>Choose file</MDBBtn>\n                <MDBBtn\n                    className=\"mx-3\"\n                    color=\"success\"\n                    disabled={!formValue.encoded}\n                    onClick={onCopyToClipboard}\n                >\n                    Copy to clipboard\n                </MDBBtn>\n                <input\n                    type=\"file\"\n                    style={{ display: \"none\" }}\n                    onChange={onUpload}\n                    ref={uploadFileRef}\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Base64EncodeFileOrImageEncodedMemo value={formValue.encoded} />\n            </div>\n        </>\n    );\n};\n\ninterface Base64EncodeFileOrImageEncodedProps {\n    value: string;\n}\n\nconst Base64EncodeFileOrImageEncoded: React.FC<Base64EncodeFileOrImageEncodedProps> = (\n    props: Base64EncodeFileOrImageEncodedProps,\n) => {\n    return (\n        <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{ height: 430 }}>\n            <div dangerouslySetInnerHTML={{ __html: props.value }} />\n        </div>\n    );\n};\n\nconst Base64EncodeFileOrImageEncodedMemo = memo(Base64EncodeFileOrImageEncoded);\n","interface Props {\n    count: number;\n    uppercase: boolean;\n    braces: boolean;\n    hypens: boolean;\n}\n\nexport const GuidGeneratorUtils = {\n    generate: (props: Props): string[] => {\n        const guids: string[] = [];\n        for (let i = 0; i < props.count; i++) {\n            guids.push(newGuid(props));\n        }\n        return guids;\n    },\n};\n\nfunction newGuid(props: Props): string {\n    let guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0;\n        const v = c === \"x\" ? r : r && 0x3 | 0x8;\n        return v.toString(16);\n    });\n\n    if (props.uppercase) {\n        guid = guid.toUpperCase();\n    }\n\n    if (props.braces) {\n        guid = `{${guid}}`;\n    }\n\n    if (!props.hypens) {\n        guid = guid.replace(/-/g, \"\");\n    }\n\n    return guid;\n}\n","import { MDBBtn, MDBCheckbox, MDBCol, MDBInput } from \"mdb-react-ui-kit\";\nimport { useEffect, useState } from \"react\";\nimport { GuidGeneratorUtils } from \"./GuidGeneratorUtils\";\n\ninterface FormValue {\n    count: number;\n    uppercase: boolean;\n    braces: boolean;\n    hypens: boolean;\n    value: string[];\n}\n\nexport const GuidGenerator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        count: 1,\n        uppercase: false,\n        braces: false,\n        hypens: true,\n        value: [],\n    });\n\n    const generate = (props: FormValue) => {\n        setFormValue({ ...props, value: GuidGeneratorUtils.generate(props) });\n    };\n\n    const onChange = (e: any) => {\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.value };\n        setFormValue(newFormValue);\n        generate(newFormValue);\n    };\n\n    const onChangeBoolean = (e: any) => {\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.checked };\n        setFormValue(newFormValue);\n        generate(newFormValue);\n    };\n\n    const onGenerate = () => {\n        generate(formValue);\n    };\n\n    // eslint-disable-next-line\n    useEffect(() => generate(formValue), []);\n\n    return (\n        <>\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBInput\n                    value={formValue.count.toString()}\n                    name=\"count\"\n                    id=\"count\"\n                    label=\"How many?\"\n                    onChange={onChange}\n                />\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBCheckbox\n                    name=\"uppercase\"\n                    id=\"uppercase\"\n                    label=\"Uppercase\"\n                    onClick={onChangeBoolean}\n                    defaultChecked={formValue.uppercase}\n                />\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBCheckbox\n                    name=\"braces\"\n                    id=\"braces\"\n                    label=\"Braces\"\n                    onClick={onChangeBoolean}\n                    defaultChecked={formValue.braces}\n                />\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBCheckbox\n                    name=\"hypens\"\n                    id=\"hypens\"\n                    label=\"Hypens\"\n                    onClick={onChangeBoolean}\n                    defaultChecked={formValue.hypens}\n                />\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBBtn onClick={onGenerate}>Generate</MDBBtn>\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBInput\n                    label=\"Generated Guids\"\n                    textarea\n                    rows={10}\n                    value={formValue.value.join(\"\\n\")}\n                />\n            </MDBCol>\n        </>\n    );\n};\n","export const HtmlEncodeDecodeUtils = {\n    encode: (value: string): string => encodeHtml(value),\n\n    decode: (value: string): string => decodeHtml(value),\n};\n\nfunction encodeHtml(value: string): string {\n    return value\n        .replace(/&/g, \"&amp;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&apos;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\");\n}\n\nfunction decodeHtml(value: string): string {\n    return value.replace(/&#?\\w+;/g, decodeEntity);\n}\n\nfunction decodeEntity(code: string) {\n    // name type\n    if (code.charAt(1) !== \"#\") {\n        return HTML_ENTITIES[code] || code;\n    }\n\n    var n,\n        c = code.charAt(2);\n    // hex number\n    if (c === \"x\" || c === \"X\") {\n        c = code.substring(3, code.length - 1);\n        n = parseInt(c, 16);\n    } else {\n        c = code.substring(2, code.length - 1);\n        n = parseInt(c);\n    }\n    return isNaN(n) ? code : String.fromCharCode(n);\n}\n\nconst HTML_ENTITIES: any = {\n    \"&nbsp;\": \"\\u00A0\",\n    \"&iexcl;\": \"\\u00A1\",\n    \"&cent;\": \"\\u00A2\",\n    \"&pound;\": \"\\u00A3\",\n    \"&curren;\": \"\\u00A4\",\n    \"&yen;\": \"\\u00A5\",\n    \"&brvbar;\": \"\\u00A6\",\n    \"&sect;\": \"\\u00A7\",\n    \"&uml;\": \"\\u00A8\",\n    \"&copy;\": \"\\u00A9\",\n    \"&ordf;\": \"\\u00AA\",\n    \"&laquo;\": \"\\u00AB\",\n    \"&not;\": \"\\u00AC\",\n    \"&shy;\": \"\\u00AD\",\n    \"&reg;\": \"\\u00AE\",\n    \"&macr;\": \"\\u00AF\",\n    \"&deg;\": \"\\u00B0\",\n    \"&plusmn;\": \"\\u00B1\",\n    \"&sup2;\": \"\\u00B2\",\n    \"&sup3;\": \"\\u00B3\",\n    \"&acute;\": \"\\u00B4\",\n    \"&micro;\": \"\\u00B5\",\n    \"&para;\": \"\\u00B6\",\n    \"&middot;\": \"\\u00B7\",\n    \"&cedil;\": \"\\u00B8\",\n    \"&sup1;\": \"\\u00B9\",\n    \"&ordm;\": \"\\u00BA\",\n    \"&raquo;\": \"\\u00BB\",\n    \"&frac14;\": \"\\u00BC\",\n    \"&frac12;\": \"\\u00BD\",\n    \"&frac34;\": \"\\u00BE\",\n    \"&iquest;\": \"\\u00BF\",\n    \"&Agrave;\": \"\\u00C0\",\n    \"&Aacute;\": \"\\u00C1\",\n    \"&Acirc;\": \"\\u00C2\",\n    \"&Atilde;\": \"\\u00C3\",\n    \"&Auml;\": \"\\u00C4\",\n    \"&Aring;\": \"\\u00C5\",\n    \"&AElig;\": \"\\u00C6\",\n    \"&Ccedil;\": \"\\u00C7\",\n    \"&Egrave;\": \"\\u00C8\",\n    \"&Eacute;\": \"\\u00C9\",\n    \"&Ecirc;\": \"\\u00CA\",\n    \"&Euml;\": \"\\u00CB\",\n    \"&Igrave;\": \"\\u00CC\",\n    \"&Iacute;\": \"\\u00CD\",\n    \"&Icirc;\": \"\\u00CE\",\n    \"&Iuml;\": \"\\u00CF\",\n    \"&ETH;\": \"\\u00D0\",\n    \"&Ntilde;\": \"\\u00D1\",\n    \"&Ograve;\": \"\\u00D2\",\n    \"&Oacute;\": \"\\u00D3\",\n    \"&Ocirc;\": \"\\u00D4\",\n    \"&Otilde;\": \"\\u00D5\",\n    \"&Ouml;\": \"\\u00D6\",\n    \"&times;\": \"\\u00D7\",\n    \"&Oslash;\": \"\\u00D8\",\n    \"&Ugrave;\": \"\\u00D9\",\n    \"&Uacute;\": \"\\u00DA\",\n    \"&Ucirc;\": \"\\u00DB\",\n    \"&Uuml;\": \"\\u00DC\",\n    \"&Yacute;\": \"\\u00DD\",\n    \"&THORN;\": \"\\u00DE\",\n    \"&szlig;\": \"\\u00DF\",\n    \"&agrave;\": \"\\u00E0\",\n    \"&aacute;\": \"\\u00E1\",\n    \"&acirc;\": \"\\u00E2\",\n    \"&atilde;\": \"\\u00E3\",\n    \"&auml;\": \"\\u00E4\",\n    \"&aring;\": \"\\u00E5\",\n    \"&aelig;\": \"\\u00E6\",\n    \"&ccedil;\": \"\\u00E7\",\n    \"&egrave;\": \"\\u00E8\",\n    \"&eacute;\": \"\\u00E9\",\n    \"&ecirc;\": \"\\u00EA\",\n    \"&euml;\": \"\\u00EB\",\n    \"&igrave;\": \"\\u00EC\",\n    \"&iacute;\": \"\\u00ED\",\n    \"&icirc;\": \"\\u00EE\",\n    \"&iuml;\": \"\\u00EF\",\n    \"&eth;\": \"\\u00F0\",\n    \"&ntilde;\": \"\\u00F1\",\n    \"&ograve;\": \"\\u00F2\",\n    \"&oacute;\": \"\\u00F3\",\n    \"&ocirc;\": \"\\u00F4\",\n    \"&otilde;\": \"\\u00F5\",\n    \"&ouml;\": \"\\u00F6\",\n    \"&divide;\": \"\\u00F7\",\n    \"&oslash;\": \"\\u00F8\",\n    \"&ugrave;\": \"\\u00F9\",\n    \"&uacute;\": \"\\u00FA\",\n    \"&ucirc;\": \"\\u00FB\",\n    \"&uuml;\": \"\\u00FC\",\n    \"&yacute;\": \"\\u00FD\",\n    \"&thorn;\": \"\\u00FE\",\n    \"&yuml;\": \"\\u00FF\",\n    \"&quot;\": \"\\u0022\",\n    \"&amp;\": \"\\u0026\",\n    \"&lt;\": \"\\u003C\",\n    \"&gt;\": \"\\u003E\",\n    \"&apos;\": \"\\u0027\",\n    \"&OElig;\": \"\\u0152\",\n    \"&oelig;\": \"\\u0153\",\n    \"&Scaron;\": \"\\u0160\",\n    \"&scaron;\": \"\\u0161\",\n    \"&Yuml;\": \"\\u0178\",\n    \"&circ;\": \"\\u02C6\",\n    \"&tilde;\": \"\\u02DC\",\n    \"&ensp;\": \"\\u2002\",\n    \"&emsp;\": \"\\u2003\",\n    \"&thinsp;\": \"\\u2009\",\n    \"&zwnj;\": \"\\u200C\",\n    \"&zwj;\": \"\\u200D\",\n    \"&lrm;\": \"\\u200E\",\n    \"&rlm;\": \"\\u200F\",\n    \"&ndash;\": \"\\u2013\",\n    \"&mdash;\": \"\\u2014\",\n    \"&lsquo;\": \"\\u2018\",\n    \"&rsquo;\": \"\\u2019\",\n    \"&sbquo;\": \"\\u201A\",\n    \"&ldquo;\": \"\\u201C\",\n    \"&rdquo;\": \"\\u201D\",\n    \"&bdquo;\": \"\\u201E\",\n    \"&dagger;\": \"\\u2020\",\n    \"&Dagger;\": \"\\u2021\",\n    \"&permil;\": \"\\u2030\",\n    \"&lsaquo;\": \"\\u2039\",\n    \"&rsaquo;\": \"\\u203A\",\n    \"&euro;\": \"\\u20AC\",\n    \"&fnof;\": \"\\u0192\",\n    \"&Alpha;\": \"\\u0391\",\n    \"&Beta;\": \"\\u0392\",\n    \"&Gamma;\": \"\\u0393\",\n    \"&Delta;\": \"\\u0394\",\n    \"&Epsilon;\": \"\\u0395\",\n    \"&Zeta;\": \"\\u0396\",\n    \"&Eta;\": \"\\u0397\",\n    \"&Theta;\": \"\\u0398\",\n    \"&Iota;\": \"\\u0399\",\n    \"&Kappa;\": \"\\u039A\",\n    \"&Lambda;\": \"\\u039B\",\n    \"&Mu;\": \"\\u039C\",\n    \"&Nu;\": \"\\u039D\",\n    \"&Xi;\": \"\\u039E\",\n    \"&Omicron;\": \"\\u039F\",\n    \"&Pi;\": \"\\u03A0\",\n    \"&Rho;\": \"\\u03A1\",\n    \"&Sigma;\": \"\\u03A3\",\n    \"&Tau;\": \"\\u03A4\",\n    \"&Upsilon;\": \"\\u03A5\",\n    \"&Phi;\": \"\\u03A6\",\n    \"&Chi;\": \"\\u03A7\",\n    \"&Psi;\": \"\\u03A8\",\n    \"&Omega;\": \"\\u03A9\",\n    \"&alpha;\": \"\\u03B1\",\n    \"&beta;\": \"\\u03B2\",\n    \"&gamma;\": \"\\u03B3\",\n    \"&delta;\": \"\\u03B4\",\n    \"&epsilon;\": \"\\u03B5\",\n    \"&zeta;\": \"\\u03B6\",\n    \"&eta;\": \"\\u03B7\",\n    \"&theta;\": \"\\u03B8\",\n    \"&iota;\": \"\\u03B9\",\n    \"&kappa;\": \"\\u03BA\",\n    \"&lambda;\": \"\\u03BB\",\n    \"&mu;\": \"\\u03BC\",\n    \"&nu;\": \"\\u03BD\",\n    \"&xi;\": \"\\u03BE\",\n    \"&omicron;\": \"\\u03BF\",\n    \"&pi;\": \"\\u03C0\",\n    \"&rho;\": \"\\u03C1\",\n    \"&sigmaf;\": \"\\u03C2\",\n    \"&sigma;\": \"\\u03C3\",\n    \"&tau;\": \"\\u03C4\",\n    \"&upsilon;\": \"\\u03C5\",\n    \"&phi;\": \"\\u03C6\",\n    \"&chi;\": \"\\u03C7\",\n    \"&psi;\": \"\\u03C8\",\n    \"&omega;\": \"\\u03C9\",\n    \"&thetasym;\": \"\\u03D1\",\n    \"&upsih;\": \"\\u03D2\",\n    \"&piv;\": \"\\u03D6\",\n    \"&bull;\": \"\\u2022\",\n    \"&hellip;\": \"\\u2026\",\n    \"&prime;\": \"\\u2032\",\n    \"&Prime;\": \"\\u2033\",\n    \"&oline;\": \"\\u203E\",\n    \"&frasl;\": \"\\u2044\",\n    \"&weierp;\": \"\\u2118\",\n    \"&image;\": \"\\u2111\",\n    \"&real;\": \"\\u211C\",\n    \"&trade;\": \"\\u2122\",\n    \"&alefsym;\": \"\\u2135\",\n    \"&larr;\": \"\\u2190\",\n    \"&uarr;\": \"\\u2191\",\n    \"&rarr;\": \"\\u2192\",\n    \"&darr;\": \"\\u2193\",\n    \"&harr;\": \"\\u2194\",\n    \"&crarr;\": \"\\u21B5\",\n    \"&lArr;\": \"\\u21D0\",\n    \"&uArr;\": \"\\u21D1\",\n    \"&rArr;\": \"\\u21D2\",\n    \"&dArr;\": \"\\u21D3\",\n    \"&hArr;\": \"\\u21D4\",\n    \"&forall;\": \"\\u2200\",\n    \"&part;\": \"\\u2202\",\n    \"&exist;\": \"\\u2203\",\n    \"&empty;\": \"\\u2205\",\n    \"&nabla;\": \"\\u2207\",\n    \"&isin;\": \"\\u2208\",\n    \"&notin;\": \"\\u2209\",\n    \"&ni;\": \"\\u220B\",\n    \"&prod;\": \"\\u220F\",\n    \"&sum;\": \"\\u2211\",\n    \"&minus;\": \"\\u2212\",\n    \"&lowast;\": \"\\u2217\",\n    \"&radic;\": \"\\u221A\",\n    \"&prop;\": \"\\u221D\",\n    \"&infin;\": \"\\u221E\",\n    \"&ang;\": \"\\u2220\",\n    \"&and;\": \"\\u2227\",\n    \"&or;\": \"\\u2228\",\n    \"&cap;\": \"\\u2229\",\n    \"&cup;\": \"\\u222A\",\n    \"&int;\": \"\\u222B\",\n    \"&there4;\": \"\\u2234\",\n    \"&sim;\": \"\\u223C\",\n    \"&cong;\": \"\\u2245\",\n    \"&asymp;\": \"\\u2248\",\n    \"&ne;\": \"\\u2260\",\n    \"&equiv;\": \"\\u2261\",\n    \"&le;\": \"\\u2264\",\n    \"&ge;\": \"\\u2265\",\n    \"&sub;\": \"\\u2282\",\n    \"&sup;\": \"\\u2283\",\n    \"&nsub;\": \"\\u2284\",\n    \"&sube;\": \"\\u2286\",\n    \"&supe;\": \"\\u2287\",\n    \"&oplus;\": \"\\u2295\",\n    \"&otimes;\": \"\\u2297\",\n    \"&perp;\": \"\\u22A5\",\n    \"&sdot;\": \"\\u22C5\",\n    \"&lceil;\": \"\\u2308\",\n    \"&rceil;\": \"\\u2309\",\n    \"&lfloor;\": \"\\u230A\",\n    \"&rfloor;\": \"\\u230B\",\n    \"&lang;\": \"\\u2329\",\n    \"&rang;\": \"\\u232A\",\n    \"&loz;\": \"\\u25CA\",\n    \"&spades;\": \"\\u2660\",\n    \"&clubs;\": \"\\u2663\",\n    \"&hearts;\": \"\\u2665\",\n    \"&diams;\": \"\\u2666\",\n};\n","import {\n    MDBCol,\n    MDBInput,\n    MDBRow,\n    MDBTabs,\n    MDBTabsContent,\n    MDBTabsItem,\n    MDBTabsLink,\n    MDBTabsPane,\n} from \"mdb-react-ui-kit\";\nimport { createRef, useEffect, useState } from \"react\";\n\ninterface FormValue {\n    html: string;\n    javaScript: string;\n    css: string;\n}\n\ninterface ConsoleValue {\n    messages: string[];\n}\n\ninterface ReloadValue {\n    reload: boolean;\n}\n\ninterface IMessages {\n    values: string[];\n}\n\nconst messages: IMessages = {\n    values: [],\n};\n\nlet timeout = 0;\n\nexport const JavaScriptOnlineEditor: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        html: defaultHtml,\n        javaScript: defaultJavaScript,\n        css: defaultCss,\n    });\n\n    const [consoleValue, setConsoleValue] = useState<ConsoleValue>({\n        messages: [],\n    });\n\n    const [reloadValue, setReloadValue] = useState<ReloadValue>({\n        reload: false,\n    });\n\n    const executeAsync = (action: () => void) => {\n        if (timeout) {\n            window.clearTimeout(timeout);\n        }\n        timeout = window.setTimeout(action, 1000);\n    };\n\n    const onChange = (name: string, value: string) => {\n        setReloadValue({ reload: true });\n\n        messages.values = [];\n        setConsoleValue({ messages: [...messages.values] });\n        setFormValue({ ...formValue, [name]: value });\n\n        executeAsync(() => setReloadValue({ reload: false }));\n    };\n\n    const onLog = (message: string) => {\n        messages.values = [message].concat(...messages.values).slice(0, 10);\n        setConsoleValue({ messages: [...messages.values] });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <JavaScriptOnlineEditorTabs\n                        items={[\n                            {\n                                title: \"Html\",\n                                name: \"html\",\n                                value: formValue.html,\n                            },\n                            {\n                                title: \"JavaScript\",\n                                name: \"javaScript\",\n                                value: formValue.javaScript,\n                            },\n                            {\n                                title: \"Css\",\n                                name: \"css\",\n                                value: formValue.css,\n                            },\n                        ]}\n                        defaultItem={1}\n                        onChange={onChange}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <JavaScriptOnlineEditorResultTabs\n                        html={formValue.html}\n                        javaScript={formValue.javaScript}\n                        css={formValue.css}\n                        reload={reloadValue.reload}\n                        messages={consoleValue.messages}\n                        onLog={onLog}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n\ninterface JavaScriptOnlineEditorTabsProps {\n    items: JavaScriptOnlineEditorTabsItem[];\n    defaultItem: number;\n    onChange: (name: string, value: string) => void;\n}\n\ninterface JavaScriptOnlineEditorTabsItem {\n    title: string;\n    name: string;\n    value: string;\n}\n\nconst JavaScriptOnlineEditorTabs: React.FC<JavaScriptOnlineEditorTabsProps> = (\n    props: JavaScriptOnlineEditorTabsProps,\n) => {\n    const [activeTab, setActiveTab] = useState(props.items[props.defaultItem].name);\n\n    const onClick = (name: string) => {\n        if (name === activeTab) {\n            return;\n        }\n\n        setActiveTab(name);\n    };\n\n    return (\n        <>\n            <MDBTabs justify className=\"mb-3\">\n                {props.items.map((x) => (\n                    <MDBTabsItem>\n                        <MDBTabsLink onClick={() => onClick(x.name)} active={activeTab === x.name}>\n                            {x.title}\n                        </MDBTabsLink>\n                    </MDBTabsItem>\n                ))}\n            </MDBTabs>\n\n            <MDBTabsContent>\n                {props.items.map((x) => (\n                    <MDBTabsPane show={activeTab === x.name}>\n                        <JavaScriptOnlineEditorInput\n                            name={x.name}\n                            value={x.value}\n                            onChange={props.onChange}\n                        />\n                    </MDBTabsPane>\n                ))}\n            </MDBTabsContent>\n        </>\n    );\n};\n\ninterface JavaScriptOnlineEditorInputProps {\n    name: string;\n    value: string;\n    onChange: (name: string, value: string) => void;\n}\n\nconst JavaScriptOnlineEditorInput: React.FC<JavaScriptOnlineEditorInputProps> = (\n    props: JavaScriptOnlineEditorInputProps,\n) => {\n    return (\n        <MDBInput\n            name={props.name}\n            textarea\n            rows={16}\n            value={props.value}\n            onChange={(e: any) => props.onChange(e.target.name, e.currentTarget.value)}\n        />\n    );\n};\n\ninterface JavaScriptOnlineEditorResultTabsProps {\n    html: string;\n    javaScript: string;\n    css: string;\n    reload: boolean;\n    messages: string[];\n    onLog: (message: string) => void;\n}\n\nenum JavaScriptOnlineEditorResultTab {\n    preview,\n    console,\n}\n\nconst JavaScriptOnlineEditorResultTabs: React.FC<JavaScriptOnlineEditorResultTabsProps> = (\n    props: JavaScriptOnlineEditorResultTabsProps,\n) => {\n    const [activeTab, setActiveTab] = useState(JavaScriptOnlineEditorResultTab.preview);\n\n    const onClick = (tab: JavaScriptOnlineEditorResultTab) => {\n        if (tab === activeTab) {\n            return;\n        }\n\n        setActiveTab(tab);\n    };\n\n    return (\n        <>\n            <MDBTabs justify className=\"mb-3\">\n                <MDBTabsItem>\n                    <MDBTabsLink\n                        onClick={() => onClick(JavaScriptOnlineEditorResultTab.preview)}\n                        active={activeTab === JavaScriptOnlineEditorResultTab.preview}\n                    >\n                        Preview\n                    </MDBTabsLink>\n                </MDBTabsItem>\n\n                <MDBTabsItem>\n                    <MDBTabsLink\n                        onClick={() => onClick(JavaScriptOnlineEditorResultTab.console)}\n                        active={activeTab === JavaScriptOnlineEditorResultTab.console}\n                    >\n                        Console\n                    </MDBTabsLink>\n                </MDBTabsItem>\n            </MDBTabs>\n\n            <MDBTabsContent>\n                <MDBTabsPane show={activeTab === JavaScriptOnlineEditorResultTab.preview}>\n                    {!props.reload && (\n                        <JavaScriptOnlineEditorHtml\n                            html={props.html}\n                            javaScript={props.javaScript}\n                            css={props.css}\n                            onLog={props.onLog}\n                        />\n                    )}\n                    {props.reload && <JavaScriptOnlineEditorEmptyHtml />}\n                </MDBTabsPane>\n\n                <MDBTabsPane show={activeTab === JavaScriptOnlineEditorResultTab.console}>\n                    <JavaScriptOnlineEditorConsole messages={props.messages} />\n                </MDBTabsPane>\n            </MDBTabsContent>\n        </>\n    );\n};\n\ninterface JavaScriptOnlineEditorHtmlProps {\n    html: string;\n    javaScript: string;\n    css: string;\n    onLog: (message: string) => void;\n}\n\nconst JavaScriptOnlineEditorHtml: React.FC<JavaScriptOnlineEditorHtmlProps> = (\n    props: JavaScriptOnlineEditorHtmlProps,\n) => {\n    const iframeRef: any = createRef();\n\n    useEffect(() => {\n        const newConsole = ((oldConsole: any) => {\n            return {\n                log: function (message: string) {\n                    oldConsole.log(message);\n                    props.onLog(message);\n                },\n                info: function (message: string) {\n                    oldConsole.info(message);\n                    props.onLog(message);\n                },\n                warn: function (message: string) {\n                    oldConsole.warn(message);\n                    props.onLog(message);\n                },\n                error: function (message: string) {\n                    oldConsole.error(message);\n                    props.onLog(message);\n                },\n            };\n        })(iframeRef.current.contentWindow.console);\n\n        iframeRef.current.contentWindow.console = newConsole;\n        // eslint-disable-next-line\n    }, []);\n\n    const html = htmlTemplate\n        .replace(\"<!-- Edited Html -->\", props.html)\n        .replace(\"<!-- Edited JavaScript -->\", props.javaScript)\n        .replace(\"<!-- Edited Css -->\", props.css);\n\n    return (\n        <iframe\n            title=\"html view\"\n            ref={iframeRef}\n            srcDoc={html}\n            className=\"w-100 square border-gray rounded\"\n            style={{ height: 410 }}\n            frameBorder=\"0\"\n        ></iframe>\n    );\n};\n\nconst JavaScriptOnlineEditorEmptyHtml: React.FC = () => {\n    return <div className=\"w-100 square border-gray rounded mb-2\" style={{ height: 410 }}></div>;\n};\n\ninterface JavaScriptOnlineEditorConsoleProps {\n    messages: string[];\n}\n\nconst JavaScriptOnlineEditorConsole: React.FC<JavaScriptOnlineEditorConsoleProps> = (\n    props: JavaScriptOnlineEditorConsoleProps,\n) => {\n    const consoleText = !props.messages.length ? \"\" : props.messages.reduce((r, x) => `${r}\\n${x}`);\n\n    return (\n        <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{ height: 410 }}>\n            <div dangerouslySetInnerHTML={{ __html: consoleText }} />\n        </div>\n    );\n};\n\nconst htmlTemplate: string = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>JavaScript Editor</title>\n\n    <style><!-- Edited Css --></style>\n  </head>\n  <body>\n    <!-- Edited Html -->\n\n    <script><!-- Edited JavaScript --></script>\n  </body>\n</html>`;\n\nconst defaultHtml: string = `<input type=\"button\" value=\"Click Me\" onclick=\"onClick()\" />`;\n\nconst defaultJavaScript: string = `function onClick() {\n    console.log(\"Hello World!!!\");\n}\n\nconsole.log(\"Application started\");`;\n\nconst defaultCss: string = `body {\n    text-align: center;\n    padding: 50px;\n}`;\n","export const JsonFormatterUtils = {\n    format: (\n        value: string,\n        formatValue: (value: string | number | boolean | null) => string,\n    ): string => formatJson(value, formatValue),\n};\n\nfunction formatJson(\n    value: string,\n    formatValue: (value: string | number | boolean | null) => string,\n) {\n    if (!value) {\n        return \"\";\n    }\n\n    try {\n        return JSON.stringify(parseJson(value), null, 4)\n            .replace(/\": [\\d.]+[,\\n]/g, (x) => formatNumber(x, formatValue))\n            .replace(/\": \".+\\n/g, (x) => formatString(x, formatValue))\n            .replace(/\": true/g, (x) => formatBoolean(x, formatValue))\n            .replace(/\": false/g, (x) => formatBoolean(x, formatValue))\n            .replace(/\": null/g, (x) => formatNull(x, formatValue));\n    } catch (e: any) {\n        return (e as Error).message;\n    }\n}\n\nfunction parseJson(value: string): any {\n    return JSON.parse(value.replace(/\\n/g, \"\"));\n}\n\nfunction formatNumber(value: string, formatValue: (value: number) => string): string {\n    return value.replace(/[\\d.]+/, (x) => formatValue(parseFloat(x)));\n}\n\nfunction formatString(value: string, formatValue: (value: string) => string): string {\n    return value.replace(/ \".+\"/, formatValue);\n}\n\nfunction formatBoolean(value: string, formatValue: (value: boolean) => string): string {\n    return value\n        .replace(/true/, (_) => formatValue(true))\n        .replace(/false/, (_) => formatValue(false));\n}\n\nfunction formatNull(value: string, formatValue: (value: any) => string): string {\n    return value.replace(/null/, (_) => formatValue(null));\n}\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { JsonFormatterUtils } from \"./JsonFormatterUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const JsonFormatter: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const formatValueHtml = (\n        value: string | number | boolean,\n        className: \"text-danger\" | \"text-success\",\n    ): string => {\n        return `<span class=${className}>${value}</span>`;\n    };\n\n    const formatValue = (value: string | number | boolean | null): string => {\n        if (value === null) {\n            return formatValueHtml(\"null\", \"text-danger\");\n        }\n\n        const type =\n            typeof value === \"number\" || typeof value === \"boolean\"\n                ? \"text-danger\"\n                : \"text-success\";\n        return formatValueHtml(value, type);\n    };\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({\n            ...formValue,\n            decoded: value,\n            encoded: JsonFormatterUtils.format(value, formatValue),\n        });\n    };\n\n    const formatHtml = (value: string) =>\n        value.replace(/\\n/g, \"<br/>\").replace(/\\s\\s/g, \"&nbsp;&nbsp;\");\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Json\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <div\n                        className=\"square border-gray rounded wordwrap px-2 py-1\"\n                        style={{ height: 385 }}\n                    >\n                        <div dangerouslySetInnerHTML={{ __html: formatHtml(formValue.encoded) }} />\n                    </div>\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","export const JsonViewerUtils = {\n    parse: (value: string): JsonObject | null => parseJsonObject(value),\n};\n\nexport type JsonValueType = \"null\" | \"value\" | \"array\" | \"object\";\n\ninterface JsonValue {\n    value: any;\n    type: JsonValueType;\n    expanded: boolean;\n}\n\ninterface JsonProperty {\n    name: string;\n    value: JsonValue;\n}\n\nexport interface JsonObject {\n    values: JsonProperty[];\n}\n\nfunction parseJsonObject(value: string): JsonObject | null {\n    if (!value) {\n        return null;\n    }\n\n    try {\n        return getObject(parseJson(value));\n    } catch (e: any) {\n        return null;\n    }\n}\n\nfunction parseJson(value: string): any {\n    return JSON.parse(value.replace(/\\n/g, \"\"));\n}\n\nfunction getObject(value: any): JsonObject {\n    return {\n        values: getProperties(value),\n    };\n}\n\nfunction getProperties(value: any): JsonProperty[] {\n    return Object.keys(value).map((key) => ({\n        name: key,\n        value: getValue(value[key]),\n    }));\n}\n\nfunction getValue(value: any): JsonValue {\n    if (value === null) {\n        return jsonValue(null, \"null\");\n    }\n    if (Array.isArray(value)) {\n        return jsonValue((value as []).map(getValue), \"array\");\n    }\n    const type = typeof value;\n    if (type === \"string\" || type === \"number\" || type === \"bigint\" || type === \"boolean\") {\n        return jsonValue(value, \"value\");\n    }\n    return jsonValue(getObject(value), \"object\");\n}\n\nfunction jsonValue(value: any, type: JsonValueType): JsonValue {\n    return {\n        value,\n        type,\n        expanded: false,\n    };\n}\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { JsonObject, JsonViewerUtils } from \"./JsonViewerUtils\";\n\ninterface FormValue {\n    decoded: string;\n    jsonObject: JsonObject | null;\n}\n\nexport const JsonViewer: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        jsonObject: null,\n    });\n\n    const onViewJson = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, jsonObject: JsonViewerUtils.parse(value) });\n    };\n\n    console.log(formValue.jsonObject);\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Json\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onViewJson}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <div\n                        className=\"square border-gray rounded wordwrap px-2 py-1\"\n                        style={{ height: 385 }}\n                    ></div>\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","interface Props {\n    amount: number;\n    term: number;\n    rate: number;\n}\n\nexport interface Result {\n    amount: number;\n    term: number;\n    rate: number;\n    monthlyPayment: number;\n    months: ResultRow[];\n    total: ResultRow;\n}\n\nexport interface ResultRow {\n    index: number;\n    date: Date;\n    payment: number;\n    principal: number;\n    interest: number;\n    balance: number;\n}\n\nexport const LoanCalculatorUtils = {\n    calculate: (props: Props): Result | null => calculate(props),\n};\n\nfunction calculate(props: Props): Result | null {\n    if (!props.amount || !props.term || !props.rate) {\n        return null;\n    }\n\n    const monthlyRate = props.rate / 12 / 100;\n    const monthlyPayment =\n        props.amount * (monthlyRate + monthlyRate / (Math.pow(1 + monthlyRate, props.term) - 1));\n    const months = calculateMonths(monthlyRate, props.amount, props.term, monthlyPayment);\n    const total = calculateTotal(months);\n\n    return {\n        amount: props.amount,\n        term: props.term,\n        rate: props.rate,\n        monthlyPayment,\n        months,\n        total,\n    };\n}\n\nfunction calculateMonths(\n    monthlyRate: number,\n    amount: number,\n    term: number,\n    monthlyPayment: number,\n): ResultRow[] {\n    const month: ResultRow[] = [];\n    let balance = amount;\n\n    for (let i = 1; i <= term; i++) {\n        const now = new Date();\n        const date = new Date(now.setMonth(now.getMonth() + i));\n        const interest = balance * monthlyRate;\n        const principal = balance > monthlyPayment - interest ? monthlyPayment - interest : balance;\n        const payment = principal + interest;\n        balance -= principal;\n\n        month.push({\n            index: i,\n            date,\n            payment,\n            principal,\n            interest,\n            balance,\n        });\n    }\n\n    return month;\n}\n\nfunction calculateTotal(months: ResultRow[]): ResultRow {\n    return months.reduce((current, next) => ({\n        ...current,\n        payment: current.payment + next.payment,\n        principal: current.principal + next.principal,\n        interest: current.interest + next.interest,\n    }));\n}\n","import {\n    MDBCol,\n    MDBDropdown,\n    MDBDropdownItem,\n    MDBDropdownLink,\n    MDBDropdownMenu,\n    MDBDropdownToggle,\n    MDBInputGroup,\n    MDBInputGroupElement,\n    MDBInputGroupText,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n} from \"mdb-react-ui-kit\";\nimport { memo, useEffect, useState } from \"react\";\nimport { LoanCalculatorUtils, Result, ResultRow } from \"./LoanCalculatorUtils\";\n\ninterface FormValue {\n    amount: number;\n    term: number;\n    rate: number;\n    result: Result | null;\n}\n\nlet timeout = 0;\n\nexport const LoanCalculator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        amount: 5000,\n        term: 60,\n        rate: 4.5,\n        result: null,\n    });\n\n    // eslint-disable-next-line\n    useEffect(() => calculate(formValue), []);\n\n    const executeAsync = (action: () => void) => {\n        if (timeout) {\n            window.clearTimeout(timeout);\n        }\n        timeout = window.setTimeout(action, 1000);\n    };\n\n    const calculate = (formValue: FormValue) => {\n        const result = LoanCalculatorUtils.calculate({ ...formValue });\n        setFormValue({ ...formValue, result });\n    };\n\n    const onChange = (name: string, value: any) => {\n        const newFormValue = { ...formValue, [name]: value };\n        setFormValue({ ...newFormValue });\n        executeAsync(() => calculate(newFormValue));\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\">\n                    <LoanCalculatorFrom\n                        amount={formValue.amount}\n                        term={formValue.term}\n                        rate={formValue.rate}\n                        onChange={onChange}\n                    />\n                </MDBCol>\n                {formValue.result && (\n                    <MDBCol md=\"6\">\n                        <LoanCalculatorSummary result={formValue.result} />\n                    </MDBCol>\n                )}\n            </MDBRow>\n            {formValue.result && (\n                <MDBRow>\n                    <MDBCol md=\"12\">\n                        <LoanCalculatorTable result={formValue.result} />\n                    </MDBCol>\n                </MDBRow>\n            )}\n        </>\n    );\n};\n\ninterface LoanCalculatorFromProps {\n    amount: number;\n    term: number;\n    rate: number;\n    onChange: (name: string, value: number) => void;\n}\n\nconst LoanCalculatorFrom: React.FC<LoanCalculatorFromProps> = (props: LoanCalculatorFromProps) => {\n    return (\n        <>\n            <MDBCol md=\"12\" className=\"mb-3\">\n                <label htmlFor=\"amount\" className=\"form-label\">\n                    Loan amount\n                </label>\n                <MDBInputGroup>\n                    <NumberEdit value={props.amount} name=\"amount\" onChange={props.onChange} />\n                </MDBInputGroup>\n            </MDBCol>\n\n            <MDBCol md=\"12\" className=\"mb-3\">\n                <LoanCalculatorFromTerm name=\"term\" value={props.term} onChange={props.onChange} />\n            </MDBCol>\n\n            <MDBCol md=\"12\" className=\"mb-3\">\n                <label htmlFor=\"amount\" className=\"form-label\">\n                    Interest rate per year\n                </label>\n                <MDBInputGroup>\n                    <NumberEdit value={props.rate} name=\"rate\" onChange={props.onChange} />\n                    <MDBInputGroupText>%</MDBInputGroupText>\n                </MDBInputGroup>\n            </MDBCol>\n        </>\n    );\n};\n\ninterface LoanCalculatorFromTermProps {\n    name: string;\n    value: number;\n    onChange: (name: string, value: number) => void;\n}\n\ninterface LoanCalculatorFromTermValue {\n    term: number;\n    termPeriod: string;\n}\n\nconst LoanCalculatorFromTerm: React.FC<LoanCalculatorFromTermProps> = (\n    props: LoanCalculatorFromTermProps,\n) => {\n    const [formValue, setFormValue] = useState<LoanCalculatorFromTermValue>({\n        term: props.value / 12,\n        termPeriod: \"years\",\n    });\n\n    const calculateAndSendChange = (term: number, termPeriod: string) => {\n        const value = termPeriod === \"years\" ? term * 12 : term;\n        props.onChange(props.name, value);\n    };\n\n    const onChange = (name: string, value: any) => {\n        const newFormValue = { ...formValue, [name]: value };\n        setFormValue({ ...newFormValue });\n        calculateAndSendChange(newFormValue.term, newFormValue.termPeriod);\n    };\n\n    return (\n        <>\n            <label htmlFor=\"term\" className=\"form-label\">\n                Loan term\n            </label>\n            <MDBInputGroup>\n                <NumberEdit value={formValue.term} name=\"term\" onChange={onChange} />\n                <LoanCalculatorFromDropDown\n                    name=\"termPeriod\"\n                    values={[\"years\", \"months\"]}\n                    className=\"group-drop-down-right\"\n                    onChange={onChange}\n                />\n            </MDBInputGroup>\n        </>\n    );\n};\n\ninterface DropDownValue {\n    value: string;\n}\n\ninterface LoanCalculatorFromDropDownParams {\n    name: string;\n    values: string[];\n    className?: string;\n    onChange: (name: string, value: any) => void;\n}\n\nconst LoanCalculatorFromDropDown: React.FC<LoanCalculatorFromDropDownParams> = (\n    props: LoanCalculatorFromDropDownParams,\n) => {\n    const [formValue, setFormValue] = useState<DropDownValue>({\n        value: props.values[0],\n    });\n\n    const onChange = (value: string) => {\n        setFormValue({ ...formValue, value });\n        props.onChange(props.name, value);\n    };\n\n    return (\n        <MDBDropdown>\n            <MDBDropdownToggle className={props.className}>{formValue.value}</MDBDropdownToggle>\n            <MDBDropdownMenu>\n                <MDBDropdownItem>\n                    <MDBDropdownLink\n                        tag=\"button\"\n                        type=\"button\"\n                        className=\"bg-light p-0 m-0\"\n                    ></MDBDropdownLink>\n                </MDBDropdownItem>\n                {props.values.map((x) => (\n                    <MDBDropdownItem key={x}>\n                        <MDBDropdownLink\n                            tag=\"button\"\n                            type=\"button\"\n                            onClick={() => onChange(x)}\n                            className={formValue.value === x ? \"active\" : \"\"}\n                            aria-current={formValue.value === x ? \"true\" : \"\"}\n                        >\n                            {x}\n                        </MDBDropdownLink>\n                    </MDBDropdownItem>\n                ))}\n            </MDBDropdownMenu>\n        </MDBDropdown>\n    );\n};\n\ninterface LoanCalculatorTableValue {\n    maxCount: number;\n}\n\ninterface LoanCalculatorTableParams {\n    result: Result;\n}\n\nconst maxCountStep = 300;\n\nconst LoanCalculatorTable: React.FC<LoanCalculatorTableParams> = (\n    props: LoanCalculatorTableParams,\n) => {\n    const [formValue, setFormValue] = useState<LoanCalculatorTableValue>({\n        maxCount: maxCountStep,\n    });\n\n    useEffect(() => {\n        window.setTimeout(() => {\n            if (props.result.months.length > formValue.maxCount) {\n                setFormValue({ ...formValue, maxCount: formValue.maxCount + maxCountStep });\n            }\n        }, 1000);\n        // eslint-disable-next-line\n    }, [formValue]);\n\n    useEffect(() => {\n        setFormValue({ ...formValue, maxCount: maxCountStep });\n        // eslint-disable-next-line\n    }, [props.result]);\n\n    return (\n        <MDBTable small hover>\n            <MDBTableHead>\n                <tr>\n                    <th scope=\"col\"></th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Payment</th>\n                    <th scope=\"col\">Principal</th>\n                    <th scope=\"col\">Interest</th>\n                    <th scope=\"col\">Balance</th>\n                </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n                <tr>\n                    <td></td>\n                    <td>\n                        <DateView value={new Date()} />\n                    </td>\n                    <td>&ndash;</td>\n                    <td>&ndash;</td>\n                    <td>&ndash;</td>\n                    <td>\n                        <NumberView value={props.result.amount} />\n                    </td>\n                </tr>\n                {props.result.months.slice(0, formValue.maxCount).map((x) => (\n                    <LoanCalculatorTableRowMemo key={x.date.toString()} {...x} />\n                ))}\n                {props.result.months.length <= formValue.maxCount && (\n                    <tr className=\"table-success\">\n                        <td></td>\n                        <td></td>\n                        <th>\n                            <NumberView value={props.result.total.payment} />\n                        </th>\n                        <th>\n                            <NumberView value={props.result.total.principal} />\n                        </th>\n                        <th>\n                            <NumberView value={props.result.total.interest} />\n                        </th>\n                        <td></td>\n                    </tr>\n                )}\n            </MDBTableBody>\n        </MDBTable>\n    );\n};\n\nconst LoanCalculatorTableRow: React.FC<ResultRow> = (x: ResultRow) => {\n    return (\n        <tr>\n            <th>{x.index}</th>\n            <td>\n                <DateView value={x.date} />\n            </td>\n            <td>\n                <NumberView value={x.payment} />\n            </td>\n            <td>\n                <NumberView value={x.principal} />\n            </td>\n            <td>\n                <NumberView value={x.interest} />\n            </td>\n            <td>\n                <NumberView value={x.balance} />\n            </td>\n        </tr>\n    );\n};\n\nconst LoanCalculatorTableRowMemo = memo(LoanCalculatorTableRow);\n\ninterface LoanCalculatorSummaryParams {\n    result: Result;\n}\n\nconst LoanCalculatorSummary: React.FC<LoanCalculatorSummaryParams> = (\n    props: LoanCalculatorSummaryParams,\n) => {\n    return (\n        <MDBTable small>\n            <MDBTableBody>\n                <tr>\n                    <td className=\"h6\">Monthly Payments</td>\n                    <td className=\"h6\">\n                        <NumberView value={props.result.monthlyPayment} />\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"h6\">Total Principal Paid</td>\n                    <td className=\"h6\">\n                        <NumberView value={props.result.total.principal} />\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"h6\">Total Interest Paid</td>\n                    <td className=\"h6\">\n                        <NumberView value={props.result.total.interest} />\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"h6\">Total Payments</td>\n                    <td className=\"h6\">\n                        <NumberView value={props.result.total.payment} />\n                    </td>\n                </tr>\n            </MDBTableBody>\n        </MDBTable>\n    );\n};\n\ninterface ViewParams<T> {\n    value: T;\n}\n\nconst NumberView: React.FC<ViewParams<number>> = (props: ViewParams<number>) => {\n    const options: Intl.NumberFormatOptions = {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    };\n    return <>{new Intl.NumberFormat(undefined, options).format(props.value)}</>;\n};\n\nconst DateView: React.FC<ViewParams<Date>> = (props: ViewParams<Date>) => {\n    const dateOptions: Intl.DateTimeFormatOptions = {\n        dateStyle: \"long\",\n    };\n\n    const parts = new Intl.DateTimeFormat(\"en-us\", dateOptions).formatToParts(props.value);\n    const month = parts.find((x) => x.type === \"month\")?.value;\n    const year = parts.find((x) => x.type === \"year\")?.value;\n\n    return (\n        <>\n            {month} {year}\n        </>\n    );\n};\n\ninterface EditParams<T> {\n    name: string;\n    value: T;\n    onChange: (name: string, value: T) => void;\n}\n\ninterface EditValue {\n    value: string;\n}\n\nconst NumberEdit: React.FC<EditParams<number>> = (props: EditParams<number>) => {\n    const [formValue, setFormValue] = useState<EditValue>({\n        value: props.value.toString(),\n    });\n\n    const onChange = (e: any) => {\n        const value = e.currentTarget.value as string;\n        setFormValue({ ...formValue, value });\n        props.onChange(props.name, parseFloat(value.replace(\",\", \".\")));\n    };\n\n    return (\n        <MDBInputGroupElement\n            type=\"text\"\n            value={formValue.value}\n            name={props.name}\n            id={props.name}\n            onChange={onChange}\n        />\n    );\n};\n","export const Sha1GeneratorUtils = {\n    encode: (value: string): string => encodeSha1(value),\n};\n\nfunction encodeSha1(value: string): string {\n    let blockstart;\n    let i, j;\n    let W = new Array(80);\n    let H0 = 0x67452301;\n    let H1 = 0xefcdab89;\n    let H2 = 0x98badcfe;\n    let H3 = 0x10325476;\n    let H4 = 0xc3d2e1f0;\n    let A, B, C, D, E;\n    let temp;\n\n    value = utf8Encode(value);\n\n    const valueLength = value.length;\n\n    const words: number[] = [];\n    for (i = 0; i < valueLength - 3; i += 4) {\n        j =\n            (value.charCodeAt(i) << 24) |\n            (value.charCodeAt(i + 1) << 16) |\n            (value.charCodeAt(i + 2) << 8) |\n            value.charCodeAt(i + 3);\n        words.push(j);\n    }\n\n    switch (valueLength % 4) {\n        case 0:\n            i = 0x080000000;\n            break;\n        case 1:\n            i = (value.charCodeAt(valueLength - 1) << 24) | 0x0800000;\n            break;\n\n        case 2:\n            i =\n                (value.charCodeAt(valueLength - 2) << 24) |\n                (value.charCodeAt(valueLength - 1) << 16) |\n                0x08000;\n            break;\n\n        case 3:\n            i =\n                (value.charCodeAt(valueLength - 3) << 24) |\n                (value.charCodeAt(valueLength - 2) << 16) |\n                (value.charCodeAt(valueLength - 1) << 8) |\n                0x80;\n            break;\n    }\n\n    words.push(i);\n\n    while (words.length % 16 !== 14) words.push(0);\n\n    words.push(valueLength >>> 29);\n    words.push((valueLength << 3) & 0x0ffffffff);\n\n    for (blockstart = 0; blockstart < words.length; blockstart += 16) {\n        for (i = 0; i < 16; i++) W[i] = words[blockstart + i];\n        for (i = 16; i <= 79; i++)\n            W[i] = rotateLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n        A = H0;\n        B = H1;\n        C = H2;\n        D = H3;\n        E = H4;\n\n        for (i = 0; i <= 19; i++) {\n            temp = (rotateLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5a827999) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = temp;\n        }\n\n        for (i = 20; i <= 39; i++) {\n            temp = (rotateLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ed9eba1) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = temp;\n        }\n\n        for (i = 40; i <= 59; i++) {\n            temp =\n                (rotateLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8f1bbcdc) &\n                0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = temp;\n        }\n\n        for (i = 60; i <= 79; i++) {\n            temp = (rotateLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xca62c1d6) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = temp;\n        }\n\n        H0 = (H0 + A) & 0x0ffffffff;\n        H1 = (H1 + B) & 0x0ffffffff;\n        H2 = (H2 + C) & 0x0ffffffff;\n        H3 = (H3 + D) & 0x0ffffffff;\n        H4 = (H4 + E) & 0x0ffffffff;\n    }\n\n    return convertHex(H0) + convertHex(H1) + convertHex(H2) + convertHex(H3) + convertHex(H4);\n}\n\nfunction rotateLeft(n: number, s: number): number {\n    return (n << s) | (n >>> (32 - s));\n}\n\nfunction convertHex(value: number): string {\n    let str = \"\";\n    let i;\n    let v;\n\n    for (i = 7; i >= 0; i--) {\n        v = (value >>> (i * 4)) & 0x0f;\n        str += v.toString(16);\n    }\n    return str;\n}\n\nfunction utf8Encode(value: string) {\n    value = value.replace(/\\r\\n/g, \"\\n\");\n    let utftext = \"\";\n\n    for (let n = 0; n < value.length; n++) {\n        const c = value.charCodeAt(n);\n\n        if (c < 128) {\n            utftext += String.fromCharCode(c);\n        } else if (c > 127 && c < 2048) {\n            utftext += String.fromCharCode((c >> 6) | 192);\n            utftext += String.fromCharCode((c & 63) | 128);\n        } else {\n            utftext += String.fromCharCode((c >> 12) | 224);\n            utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n            utftext += String.fromCharCode((c & 63) | 128);\n        }\n    }\n\n    return utftext;\n}\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { Sha1GeneratorUtils } from \"./Sha1GeneratorUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const Sha1Generator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: Sha1GeneratorUtils.encode(value) });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"SHA1\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","export const TextDifferencesUtils = {\n    findDifferences: (before: string, after: string): string => {\n        if (!before || !after) {\n            return \"\";\n        }\n        if (before === after) {\n            return before;\n        }\n        return new TextDifferencer().findDifferencesBetweenStrings(before, after).toString();\n    },\n};\n\nfunction insertElementAt<T>(array: T[], element: T, index: number): void {\n    array.splice(index, 0, element);\n}\n\nfunction insertElementsAt<T>(array: T[], elements: T[], index: number) {\n    for (let i = 0; i < elements.length; i++) {\n        array.splice(index + i, 0, elements[i]);\n    }\n}\n\nfunction removeAt<T>(array: T[], index: number) {\n    array.splice(index, 1);\n}\n\nclass TextDifferencer {\n    public findDifferencesBetweenStrings(string0: string, string1: string): TextDifferences {\n        let lengthOfShorterString: number =\n            string0.length <= string1.length ? string0.length : string1.length;\n\n        let numberOfExtremes = 2;\n        let passagePairsMatchingAtExtremes: TextPassagePair[] = [];\n\n        for (let e = 0; e < numberOfExtremes; e++) {\n            let lengthOfMatchingSubstring = 0;\n\n            for (let i = 0; i < lengthOfShorterString; i++) {\n                let offsetForString0 = e === 0 ? i : string0.length - i - 1;\n                let offsetForString1 = e === 0 ? i : string1.length - i - 1;\n\n                let charFromString0 = string0[offsetForString0];\n                let charFromString1 = string1[offsetForString1];\n\n                if (charFromString0 !== charFromString1) {\n                    lengthOfMatchingSubstring = i;\n                    break;\n                }\n            }\n\n            let matchingSubstringAtExtreme: string;\n\n            if (e === 0) {\n                matchingSubstringAtExtreme = string0.substr(0, lengthOfMatchingSubstring);\n                string0 = string0.substr(lengthOfMatchingSubstring);\n                string1 = string1.substr(lengthOfMatchingSubstring);\n            } // if (e === 1)\n            else {\n                matchingSubstringAtExtreme = string0.substr(\n                    string0.length - lengthOfMatchingSubstring,\n                );\n                string0 = string0.substr(0, string0.length - lengthOfMatchingSubstring);\n                string1 = string1.substr(0, string1.length - lengthOfMatchingSubstring);\n            }\n\n            let passagePairMatchingAtExtreme = new TextPassagePair(\n                true, // doPassagesMatch\n                [\n                    new TextPassage(matchingSubstringAtExtreme),\n                    new TextPassage(matchingSubstringAtExtreme),\n                ],\n            );\n\n            passagePairsMatchingAtExtremes.push(passagePairMatchingAtExtreme);\n        }\n\n        let passagePairsAll: TextPassagePair[] = [];\n\n        var passagePairsMatching = this.findPassagePairsMatchingBetweenStrings(\n            string0,\n            string1,\n            [0, 0],\n        );\n\n        this.insertPassagePairsDifferentBetweenMatching(\n            string0,\n            string1,\n            passagePairsMatching,\n            passagePairsAll,\n        );\n\n        for (var e = 0; e < passagePairsMatchingAtExtremes.length; e++) {\n            var passagePairMatchingAtExtreme = passagePairsMatchingAtExtremes[e];\n            insertElementAt(\n                passagePairsAll,\n                passagePairMatchingAtExtreme,\n                e === 0 ? 0 : passagePairsAll.length,\n            );\n        }\n\n        var returnValue = new TextDifferences(passagePairsAll);\n\n        return returnValue;\n    }\n\n    private findPassagePairsMatchingBetweenStrings(\n        string0: string,\n        string1: string,\n        positionOffsets: number[],\n    ): TextPassagePair[] {\n        var passagePairsMatching: TextPassagePair[] = [];\n\n        var longestCommonPassagePair = this.findLongestCommonPassagePair(string0, string1);\n\n        var longestCommonPassageText = longestCommonPassagePair.passages[0].text;\n        var lengthOfCommonPassage = longestCommonPassageText.length;\n\n        if (lengthOfCommonPassage === 0) {\n            return passagePairsMatching;\n        }\n\n        passagePairsMatching.push(longestCommonPassagePair);\n\n        var passages = longestCommonPassagePair.passages;\n        var passage0 = passages[0];\n        var passage1 = passages[1];\n\n        var passagePairsMatchingBeforeCommon = this.findPassagePairsMatchingBetweenStrings(\n            string0.substr(0, passage0.position),\n            string1.substr(0, passage1.position),\n            [positionOffsets[0], positionOffsets[1]],\n        );\n\n        var passagePairsMatchingAfterCommon = this.findPassagePairsMatchingBetweenStrings(\n            string0.substr(passage0.position + lengthOfCommonPassage),\n            string1.substr(passage1.position + lengthOfCommonPassage),\n            [\n                positionOffsets[0] + passage0.position + lengthOfCommonPassage,\n\n                positionOffsets[1] + passage1.position + lengthOfCommonPassage,\n            ],\n        );\n\n        var passagePairSetsMatchingBeforeAndAfter = [\n            passagePairsMatchingBeforeCommon,\n            passagePairsMatchingAfterCommon,\n        ];\n\n        for (var i = 0; i < passagePairSetsMatchingBeforeAndAfter.length; i++) {\n            var passagePairsToInsert = passagePairSetsMatchingBeforeAndAfter[i];\n            insertElementsAt(\n                passagePairsMatching,\n                passagePairsToInsert,\n                i === 0 ? 0 : passagePairsMatching.length,\n            );\n        }\n\n        for (i = 0; i < longestCommonPassagePair.passages.length; i++) {\n            var passage = longestCommonPassagePair.passages[i];\n            passage.position += positionOffsets[i];\n        }\n\n        return passagePairsMatching;\n    }\n\n    private findLongestCommonPassagePair(string0: string, string1: string): TextPassagePair {\n        var passage0 = new TextPassage(\"\", 0);\n        var passage1 = new TextPassage(\"\", 0);\n\n        var returnValue = new TextPassagePair(\n            true, // doPassagesMatch\n            [passage0, passage1],\n        );\n\n        var lengthOfString0 = string0.length;\n        var lengthOfString1 = string1.length;\n\n        var substringLengthsForRow: number[] = [];\n        var substringLengthsForRowPrev: number[] = [];\n\n        var lengthOfLongestCommonSubstringSoFar = 0;\n\n        // Build a table whose y-axis is chars from string0,\n        // and whose x-axis is chars from string1.\n        // Put length of the longest substring in each cell.\n\n        for (var i = 0; i < lengthOfString0; i++) {\n            substringLengthsForRowPrev = substringLengthsForRow;\n            substringLengthsForRow = [];\n\n            for (var j = 0; j < lengthOfString1; j++) {\n                if (string0[i] !== string1[j]) {\n                    substringLengthsForRow[j] = 0;\n                } else {\n                    var cellValue;\n\n                    if (i === 0 || j === 0) {\n                        // first row or column\n                        cellValue = 1;\n                    } else {\n                        // Copy cell to upper left, add 1.\n                        cellValue = substringLengthsForRowPrev[j - 1] + 1;\n                    }\n\n                    substringLengthsForRow[j] = cellValue;\n\n                    if (cellValue > lengthOfLongestCommonSubstringSoFar) {\n                        lengthOfLongestCommonSubstringSoFar = cellValue;\n                        var startIndex = i - lengthOfLongestCommonSubstringSoFar + 1;\n                        var longestCommonSubstringSoFar = string0.substring(\n                            // not \"substr\"!\n                            startIndex,\n                            i + 1,\n                        );\n\n                        passage0.text = longestCommonSubstringSoFar;\n                        passage0.position = startIndex;\n\n                        passage1.text = longestCommonSubstringSoFar;\n                        passage1.position = j - lengthOfLongestCommonSubstringSoFar + 1;\n                    }\n                }\n            }\n        }\n\n        return returnValue;\n    }\n\n    private insertPassagePairsDifferentBetweenMatching(\n        string0: string,\n        string1: string,\n        passagePairsToInsertBetween: TextPassagePair[],\n        passagePairsAll: TextPassagePair[],\n    ) {\n        insertElementAt(\n            passagePairsToInsertBetween,\n            new TextPassagePair(\n                true, // doPassagesMatch\n                [new TextPassage(\"\", 0), new TextPassage(\"\", 0)],\n            ),\n            0,\n        );\n\n        passagePairsToInsertBetween.push(\n            new TextPassagePair(\n                true, // doPassagesMatch\n                [new TextPassage(\"\", string0.length), new TextPassage(\"\", string1.length)],\n            ),\n        );\n\n        var pMax = passagePairsToInsertBetween.length - 1;\n\n        for (var p = 0; p < pMax; p++) {\n            let passagePairToInsertAfter = passagePairsToInsertBetween[p];\n            let passagePairToInsertBefore = passagePairsToInsertBetween[p + 1];\n\n            this.buildAndInsertPassagePairBetweenExisting(\n                string0,\n                string1,\n                passagePairToInsertBefore,\n                passagePairToInsertAfter,\n                passagePairsAll,\n            );\n\n            passagePairsAll.push(passagePairToInsertBefore);\n        }\n\n        var indexOfPassagePairFinal = passagePairsAll.length - 1;\n\n        var passagePairFinal = passagePairsAll[indexOfPassagePairFinal];\n\n        if (\n            passagePairFinal.doPassagesMatch === true &&\n            passagePairFinal.passages[0].text.length === 0\n        ) {\n            removeAt(passagePairsAll, indexOfPassagePairFinal);\n        }\n    }\n\n    private buildAndInsertPassagePairBetweenExisting(\n        string0: string,\n        string1: string,\n        passagePairToInsertBefore: TextPassagePair,\n        passagePairToInsertAfter: TextPassagePair,\n        passagePairsAll: TextPassagePair[],\n    ) {\n        var lengthOfPassageToInsertAfter = passagePairToInsertAfter.passages[0].text.length;\n\n        var positionsForPassagePairDifferent = [\n            [\n                passagePairToInsertAfter.passages[0].position + lengthOfPassageToInsertAfter,\n\n                passagePairToInsertAfter.passages[1].position + lengthOfPassageToInsertAfter,\n            ],\n            [\n                passagePairToInsertBefore.passages[0].position,\n                passagePairToInsertBefore.passages[1].position,\n            ],\n        ];\n\n        var passageToInsert0 = new TextPassage(\n            string0.substring(\n                // not \"substr\"!\n                positionsForPassagePairDifferent[0][0],\n                positionsForPassagePairDifferent[1][0],\n            ),\n            positionsForPassagePairDifferent[0][0],\n        );\n\n        var passageToInsert1 = new TextPassage(\n            string1.substring(\n                // not \"substr\"!\n                positionsForPassagePairDifferent[0][1],\n                positionsForPassagePairDifferent[1][1],\n            ),\n            positionsForPassagePairDifferent[0][1],\n        );\n\n        var passagePairToInsert = new TextPassagePair(\n            false, // doPassagesMatch\n            [passageToInsert0, passageToInsert1],\n        );\n\n        if (\n            passagePairToInsert.passages[0].text.length > 0 ||\n            passagePairToInsert.passages[1].text.length > 0\n        ) {\n            passagePairsAll.push(passagePairToInsert);\n        }\n    }\n}\n\nclass TextDifferences {\n    constructor(passagePairs: any) {\n        this.passagePairs = passagePairs;\n    }\n\n    public passagePairs: any;\n\n    // instance methods\n\n    public toString() {\n        var returnValue = \"\";\n\n        for (var p = 0; p < this.passagePairs.length; p++) {\n            var passagePair = this.passagePairs[p];\n            var passagePairAsString = passagePair.toString();\n\n            returnValue += passagePairAsString;\n        }\n\n        return returnValue;\n    }\n}\n\nclass TextPassage {\n    constructor(text: string, position: number = 0) {\n        this.text = text;\n        this.position = position;\n    }\n\n    public text: string;\n    public position: number;\n}\n\nclass TextPassagePair {\n    constructor(doPassagesMatch: any, passages: any) {\n        this.doPassagesMatch = doPassagesMatch;\n        this.passages = passages;\n    }\n\n    public doPassagesMatch: any;\n    public passages: any;\n\n    public toString() {\n        var returnValue = \"\";\n\n        if (this.doPassagesMatch === true) {\n            returnValue = this.passages[0].text;\n            returnValue = this.escapeStringForHTML(returnValue);\n        } else {\n            returnValue += \"<mark class='bg-danger px-0'>\";\n            returnValue += this.escapeStringForHTML(this.passages[0].text);\n            returnValue += \"</mark><mark class='bg-success px-0'>\";\n            returnValue += this.escapeStringForHTML(this.passages[1].text);\n            returnValue += \"</mark>\";\n        }\n\n        return returnValue;\n    }\n\n    public escapeStringForHTML(stringToEscape: string) {\n        var returnValue = stringToEscape\n            .replace(\"&\", \"&amp;\")\n            .replace(\"<\", \"&lt;\")\n            .replace(\">\", \"&gt;\")\n            .replace(\"\\n\", \"<br />\");\n\n        return returnValue;\n    }\n}\n","export const TranslitFromRussianToEnglishUtils = {\n    encode: (value: string): string => translit(value),\n};\n\nfunction translit(value: string): string {\n    let result: string = \"\";\n\n    for (let i = 0; i < value.length; i++) {\n        const char = value.charAt(i);\n        const translitChar = translitChars[char];\n        result += translitChar !== undefined ? translitChar : char;\n    }\n\n    return result;\n}\n\nconst translitChars: any = {\n    а: \"a\",\n    б: \"b\",\n    в: \"v\",\n    г: \"g\",\n    д: \"d\",\n    е: \"e\",\n    ё: \"jo\",\n    ж: \"zh\",\n    з: \"z\",\n    и: \"i\",\n    й: \"j\",\n    к: \"k\",\n    л: \"l\",\n    м: \"m\",\n    н: \"n\",\n    о: \"o\",\n    п: \"p\",\n    р: \"r\",\n    с: \"s\",\n    т: \"t\",\n    у: \"u\",\n    ф: \"f\",\n    х: \"h\",\n    ц: \"c\",\n    ч: \"ch\",\n    ш: \"sh\",\n    щ: \"shh\",\n    ъ: \"\",\n    ы: \"y\",\n    ь: \"\",\n    э: \"je\",\n    ю: \"yu\",\n    я: \"ya\",\n\n    А: \"A\",\n    Б: \"B\",\n    В: \"V\",\n    Г: \"G\",\n    Д: \"D\",\n    Е: \"E\",\n    Ё: \"Jo\",\n    Ж: \"Zh\",\n    З: \"Z\",\n    И: \"I\",\n    Й: \"J\",\n    К: \"K\",\n    Л: \"L\",\n    М: \"M\",\n    Н: \"N\",\n    О: \"O\",\n    П: \"P\",\n    Р: \"R\",\n    С: \"S\",\n    Т: \"T\",\n    У: \"U\",\n    Ф: \"F\",\n    Х: \"H\",\n    Ц: \"C\",\n    Ч: \"Ch\",\n    Ш: \"Sh\",\n    Щ: \"Shh\",\n    Ъ: \"\",\n    Ы: \"Y\",\n    Ь: \"\",\n    Э: \"Je\",\n    Ю: \"Yu\",\n    Я: \"Ya\",\n};\n","export const UnitConverterUtils = {\n    convert: (value: number, from: Unit, to: Unit): number => convertUnit(value, from, to),\n};\n\nfunction convertUnit(value: number, from: Unit, to: Unit): number {\n    if (isNaN(value)) {\n        return 0;\n    }\n    return (value * UnitValues[from]) / UnitValues[to];\n}\n\nexport enum Unit {\n    // Data storage\n    bit = \"Bit (b)\",\n    b = \"Byte (B)\",\n    KB = \"Kilobyte (KB)\",\n    MB = \"Megabyte (MB)\",\n    GB = \"Gigabyte (MB)\",\n    TB = \"Terabyte (MB)\",\n    PB = \"Petabyte (MB)\",\n    EB = \"Exabyte (MB)\",\n\n    // Time\n    tick = \"Tick (t)\",\n    ms = \"Milissecond (ms)\",\n    s = \"Second (s)\",\n    m = \"Minute (m)\",\n    h = \"Hour (h)\",\n    d = \"Day (d)\",\n    M = \"Month (M)\",\n    y = \"Year (y)\",\n}\n\nexport enum UnitType {\n    DataStorage = \"Data Storage\",\n    Time = \"Time\",\n}\n\nexport const UnitGroups: { [unitType: string]: Unit[] } = {\n    [UnitType.DataStorage]: [\n        Unit.bit,\n        Unit.b,\n        Unit.KB,\n        Unit.MB,\n        Unit.GB,\n        Unit.TB,\n        Unit.PB,\n        Unit.EB,\n    ],\n    [UnitType.Time]: [Unit.tick, Unit.ms, Unit.s, Unit.m, Unit.h, Unit.d, Unit.M, Unit.y],\n    // [UnitType.]: [Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit.,],\n};\n\nexport const UnitTypes = Object.keys(UnitGroups);\n\nconst UnitValues: { [unit: string]: number } = {\n    // Data storage\n    [Unit.bit]: 1,\n    [Unit.b]: 8,\n    [Unit.KB]: 8 * 1024,\n    [Unit.MB]: 8 * 1024 * 1024,\n    [Unit.GB]: 8 * 1024 * 1024 * 1024,\n    [Unit.TB]: 8 * 1024 * 1024 * 1024 * 1024,\n    [Unit.PB]: 8 * 1024 * 1024 * 1024 * 1024 * 1024,\n    [Unit.EB]: 8 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024,\n\n    // Time\n    [Unit.tick]: 1,\n    [Unit.ms]: 100,\n    [Unit.s]: 100 * 1000,\n    [Unit.m]: 100 * 1000 * 60,\n    [Unit.h]: 100 * 1000 * 60 * 60,\n    [Unit.d]: 100 * 1000 * 60 * 60 * 24,\n    [Unit.M]: 100 * 1000 * 60 * 60 * 24 * 30.43,\n    [Unit.y]: 100 * 1000 * 60 * 60 * 24 * 30.43 * 12,\n\n    // ****\n    // [Unit.]: 1,\n    // [Unit.]: 1000,\n    // [Unit.]: 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n};\n","import {\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBDropdown,\n    MDBDropdownItem,\n    MDBDropdownLink,\n    MDBDropdownMenu,\n    MDBDropdownToggle,\n    MDBInput,\n    MDBRow,\n} from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { Unit, UnitConverterUtils, UnitGroups, UnitTypes } from \"./UnitConverterUtils\";\n\nexport const UnitConverter: React.FC = () => {\n    return (\n        <>\n            {UnitTypes.map((x) => (\n                <MDBCard border=\"primary\" className=\"mb-3\">\n                    <MDBCardHeader background=\"primary\" className=\"text-white\">\n                        {x}\n                    </MDBCardHeader>\n                    <MDBCardBody className=\"pb-2\">\n                        <UnitConverterRow units={UnitGroups[x]} />\n                    </MDBCardBody>\n                </MDBCard>\n            ))}\n        </>\n    );\n};\n\ninterface FormValue {\n    value: number;\n    from: Unit;\n    to: Unit;\n    result: number;\n}\n\ninterface UnitConverterRowParams {\n    units: Unit[];\n}\n\nconst UnitConverterRow: React.FC<UnitConverterRowParams> = (params: UnitConverterRowParams) => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        value: 0,\n        from: params.units[0],\n        to: params.units[0],\n        result: 0,\n    });\n\n    const onConvert = (e: any) => {\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.value };\n        setFormValue({\n            ...newFormValue,\n            result: UnitConverterUtils.convert(\n                newFormValue.value,\n                newFormValue.from,\n                newFormValue.to,\n            ),\n        });\n    };\n\n    const onChangeUnit = (name: string, value: Unit) => {\n        onConvert({\n            target: { name },\n            currentTarget: { value },\n        });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"3\" className=\"mb-3\">\n                    <MDBInput\n                        name=\"value\"\n                        label=\"Value\"\n                        value={formValue.value.toString()}\n                        onChange={onConvert}\n                        type=\"number\"\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"3\" className=\"mb-3\">\n                    <UnitConverterUnitsDropDown\n                        name=\"from\"\n                        units={params.units}\n                        onChange={onChangeUnit}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"3\" className=\"mb-3\">\n                    <MDBInput\n                        name=\"result\"\n                        label=\"Result\"\n                        value={formValue.result.toString()}\n                        type=\"number\"\n                        readonly={true}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"3\" className=\"mb-3\">\n                    <UnitConverterUnitsDropDown\n                        name=\"to\"\n                        units={params.units}\n                        onChange={onChangeUnit}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n\ninterface DropDownValue {\n    value: Unit;\n}\n\ninterface UnitConverterUnitsDropDownParams {\n    name: string;\n    units: Unit[];\n    onChange: (name: string, unit: Unit) => void;\n}\n\nconst UnitConverterUnitsDropDown: React.FC<UnitConverterUnitsDropDownParams> = (\n    params: UnitConverterUnitsDropDownParams,\n) => {\n    const [formValue, setFormValue] = useState<DropDownValue>({\n        value: params.units[0],\n    });\n\n    const onChange = (value: Unit) => {\n        setFormValue({ ...formValue, value });\n        params.onChange(params.name, value);\n    };\n\n    return (\n        <>\n            <MDBDropdown group className=\"w-100\">\n                <MDBDropdownToggle>{formValue.value}</MDBDropdownToggle>\n                <MDBDropdownMenu>\n                    <MDBDropdownItem>\n                        <MDBDropdownLink\n                            tag=\"button\"\n                            type=\"button\"\n                            className=\"bg-light p-0 m-0\"\n                        ></MDBDropdownLink>\n                    </MDBDropdownItem>\n                    {params.units.map((x) => (\n                        <MDBDropdownItem>\n                            <MDBDropdownLink\n                                tag=\"button\"\n                                type=\"button\"\n                                onClick={() => onChange(x)}\n                                className={formValue.value === x ? \"active\" : \"\"}\n                                aria-current={formValue.value === x ? \"true\" : \"\"}\n                            >\n                                {x}\n                            </MDBDropdownLink>\n                        </MDBDropdownItem>\n                    ))}\n                </MDBDropdownMenu>\n            </MDBDropdown>\n        </>\n    );\n};\n","export const WordCounterStopWordsUtils = {\n    is: (value: string): boolean => isStopWord(value),\n};\n\nfunction isStopWord(value: string): boolean {\n    if (!stopWords.size) {\n        fillStopWords();\n    }\n\n    return !!stopWords.get(value);\n}\n\nfunction fillStopWords(): void {\n    addStopWords(split(english, \"\\n\"));\n    addStopWords(split(russian, \"\\n\"));\n}\n\nfunction addStopWords(value: string[]): void {\n    value.forEach((x) => stopWords.set(x, true));\n}\n\nfunction split(value: string, char: string): string[] {\n    return value\n        .split(char)\n        .map((x) => x.trim())\n        .filter((x) => x !== \"\");\n}\n\nlet stopWords: Map<string, boolean> = new Map<string, boolean>();\n\nconst english = `am\nan\nand\nare\naren't\nas\nat\nbe\nbut\nby\ncan\ncannot\ncant\ndid\ndidn\ndo\ndoes\ndoesn\ndoing\ndone\ndon\netc\nex\nfor\nfrom\ngot\nhad\nhadn\nhas\nhasn\nhave\nhaven\nhaving\nhe\nher\nhers\nherself\nhe's\nhim\nhimself\nhis\nif\nin\ninto\nis\nisn't\nit\nits\nitself\nme\nmr\nmrs\nmy\nmyself\nno\nnot\nof\noff\noh\nok\nokay\non\nor\nour\nours\nourselves\nout\nper\nsaid\nshe\nso\nthan\nthat\nthats\nthe\ntheir\ntheirs\nthem\nthemselves\nthen\nthere\nthese\nthey\nthis\nthose\nto\ntoo\nup\nus\nuse\nused\nuses\nwas\nwasn\nway\nwe\nwell\nwent\nwere\nweren\nwhat\nwhere\nwhich\nwho\nwhose\nwhy\nwill\nwith\nwon\nwould\nwouldn\nyes\nyet\nyou\nyour\nyours\nyourself\nyourselves\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\nI`;\n\nconst russian = `а\nе\nи\nж\nм\nо\nна\nне\nни\nоб\nно\nон\nмне\nмои\nмож\nона\nони\nоно\nмной\nмного\nмною\nмой\nмог\nмогут\nможно\nможет\nможхо\nмор\nмоя\nмоё\nмочь\nнад\nнее\nоба\nнам\nнем\nнами\nними\nмимо\nнемного\nодной\nодного\nменее\nоднажды\nоднако\nменя\nнему\nменьше\nней\nнаверху\nнего\nниже\nмало\nнадо\nодин\nназад\nнаиболее\nнедавно\nмиллионов\nнедалеко\nмежду\nнизко\nмеля\nнельзя\nнибудь\nнаконец\nникогда\nникуда\nнас\nнаш\nнет\nнею\nнеё\nних\nмира\nнаша\nнаше\nнаши\nничего\nначала\nнередко\nнесколько\nобычно\nопять\nоколо\nмы\nну\nнх\nот\nотовсюду\nособенно\nнужно\nочень\nотсюда\nв\nво\nвон\nвниз\nвнизу\nвокруг\nвот\nвосемь\nвосьмой\nвверх\nвам\nвами\nважное\nважная\nважные\nважный\nвдали\nвезде\nведь\nвас\nваш\nваша\nваше\nваши\nвпрочем\nвесь\nвдруг\nвы\nвсе\nвторой\nвсем\nвсеми\nвсему\nвсего\nвсегда\nвсех\nвсею\nвсю\nвся\nвсё\nвсюду\nг\nгде\nда\nее\nза\nиз\nли\nже\nим\nдо\nпо\nими\nпод\nиногда\nдовольно\nименно\nдолго\nпозже\nболее\nдолжно\nзначит\nиметь\nбольше\nпока\nему\nимя\nпор\nпора\nпотом\nпотому\nпосле\nпочему\nпочти\nпосреди\nей\nдва\nдве\nдвадцать\nдвадцатый\nдвух\nего\nдел\nили\nбез\nдень\nзанят\nзанята\nзанято\nзаняты\nдавно\nдевять\nдевятый\nдаже\nалло\nжизнь\nдалеко\nблизко\nздесь\nдальше\nдля\nлет\nзато\nдаром\nпервый\nперед\nзатем\nзачем\nлишь\nдесять\nдесятый\nею\nеё\nих\nбы\nеще\nпри\nбыл\nпро\nпроцентов\nпротив\nпросто\nбывает\nесли\nлюди\nбыла\nбыли\nбыло\nбудем\nбудет\nбудете\nбудешь\nпрекрасно\nбуду\nбудь\nбудто\nбудут\nещё\nдруго\nдругое\nдругой\nдругие\nдругая\nдругих\nесть\nпять\nбыть\nлучше\nпятый\nк\nком\nконечно\nкому\nкого\nкогда\nкоторой\nкоторого\nкоторая\nкоторые\nкоторый\nкоторых\nкем\nкаждое\nкаждая\nкаждые\nкаждый\nкажется\nкак\nкакой\nкакая\nкто\nкроме\nкуда\nкругом\nс\nт\nу\nя\nта\nте\nуж\nсо\nто\nтом\nснова\nтому\nсовсем\nтого\nтогда\nтоже\nсобой\nтобой\nсобою\nтобою\nсначала\nтолько\nуметь\nтот\nтою\nхорошо\nхотеть\nхочешь\nхоть\nхотя\nсвое\nсвои\nтвой\nсвоей\nсвоего\nсвоих\nсвою\nтвоя\nтвоё\nраз\nуже\nсам\nтам\nтем\nчем\nсама\nсами\nтеми\nсамо\nрано\nсамом\nсамому\nсамой\nсамого\nсамим\nсамими\nсамих\nсаму\nсемь\nчему\nраньше\nсейчас\nчего\nсегодня\nсебе\nтебе\nсеаой\nчеловек\nразве\nтеперь\nсебя\nтебя\nседьмой\nспасибо\nслишком\nтак\nтакое\nтакой\nтакие\nтакже\nтакая\nсих\nтех\nчаще\nчетвертый\nчерез\nчасто\nшестой\nшесть\nчетыре\nсколько\nсказал\nсказала\nсказать\nту\nты\nтри\nэта\nэти\nчто\nэто\nчтоб\nэтом\nэтому\nэтой\nэтого\nчтобы\nэтот\nстал\nтуда\nэтим\nэтими\nрядом\nэтих\nтретий\nтут\nэту\nсуть\nчуть\nтысяч`;\n","import { WordCounterStopWordsUtils } from \"./WordCounterStopWordsUtils\";\n\nexport const WordCounterUtils = {\n    calculate: (value: string): IWordCount => calculateKeyword(value),\n};\n\nexport interface IWordCount {\n    statistics: IStatistic[];\n    oneKeywords: IKeyword[];\n    twoKeywords: IKeyword[];\n    threeKeywords: IKeyword[];\n}\n\nexport interface IStatistic {\n    name: string;\n    value: number;\n}\n\nexport interface IKeyword {\n    words: string[];\n    count: number;\n    percent: number;\n}\n\nfunction calculateKeyword(value: string): IWordCount {\n    return {\n        statistics: calculateStatistics(value),\n        oneKeywords: calculateOneKeywords(value),\n        twoKeywords: calculateTwoKeywords(value),\n        threeKeywords: calculateThreeKeywords(value),\n    };\n}\n\nfunction calculateStatistics(value: string): IStatistic[] {\n    const words = getWords(value);\n    const chars = value.replace(/[\\r\\n]/g, \"\");\n    const charsNoSpaces = chars.replace(/ /g, \"\");\n    const sentences = value.match(/[.!?]+/g) || [];\n    const paragraphs = value.split(\"\\n\").filter((x) => x.trim() !== \"\");\n\n    return [\n        statistic(\"Words\", words.length),\n        statistic(\"Characters\", chars.length),\n        statistic(\"Characters (no spaces)\", charsNoSpaces.length),\n        statistic(\"Sentences\", sentences.length + 1),\n        statistic(\"Paragraphs\", paragraphs.length),\n    ];\n}\n\nfunction calculateOneKeywords(value: string): IKeyword[] {\n    const words = getWords(value);\n\n    const oneWords = words.map((x) => [x]);\n\n    return calculateKeywords(oneWords);\n}\n\nfunction calculateTwoKeywords(value: string): IKeyword[] {\n    const words = getWords(value);\n\n    const twoWords: string[][] = [];\n    for (let i = 0; i < words.length - 1; i++) {\n        twoWords.push([words[i], words[i + 1]]);\n    }\n\n    return calculateKeywords(twoWords);\n}\n\nfunction calculateThreeKeywords(value: string): IKeyword[] {\n    const words = getWords(value);\n\n    const threeWords: string[][] = [];\n    for (let i = 0; i < words.length - 2; i++) {\n        threeWords.push([words[i], words[i + 1], words[i + 2]]);\n    }\n\n    return calculateKeywords(threeWords);\n}\n\nfunction calculateKeywords(words: string[][]): IKeyword[] {\n    const keywords: Map<string, number> = new Map<string, number>();\n\n    words.forEach((x) => {\n        if (hasNotStopWord(x)) {\n            const word = x.reduce((a, b) => `${a} ${b}`);\n            keywords.set(word, (keywords.get(word) || 0) + 1);\n        }\n    });\n\n    return toKeywordsArray(keywords);\n}\n\nfunction statistic(name: string, value: number): IStatistic {\n    return {\n        name,\n        value,\n    };\n}\n\nfunction keyword(word: string, count: number, total: number): IKeyword {\n    return {\n        words: split(word, \"\\n\"),\n        count,\n        percent: (count / total) * 100,\n    };\n}\n\nfunction toKeywordsArray(map: Map<string, number>): IKeyword[] {\n    const keywords: IKeyword[] = [];\n\n    map.forEach((value: number, key: string) => {\n        keywords.push(keyword(key, value, map.size));\n    });\n\n    return keywords.sort((a, b) => b.count - a.count).slice(0, 50);\n}\n\nfunction getWords(value: string): string[] {\n    return (value.match(/[\\w\\-@а-яА-Я]+/g) || [])\n        .filter((x) => x.trim() !== \"\")\n        .map((x) => x.toLocaleLowerCase());\n}\n\nfunction split(value: string, char: string): string[] {\n    return value\n        .split(char)\n        .map((x) => x.trim())\n        .filter((x) => x !== \"\");\n}\n\nfunction hasNotStopWord(words: string[]): boolean {\n    return !words.filter(WordCounterStopWordsUtils.is).length;\n}\n","import {\n    MDBCol,\n    MDBInput,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n    MDBTabs,\n    MDBTabsContent,\n    MDBTabsItem,\n    MDBTabsLink,\n    MDBTabsPane,\n} from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { WordCounterUtils, IWordCount, IKeyword } from \"./WordCounterUtils\";\n\ninterface FormValue {\n    text: string;\n}\n\ninterface WordCountValue {\n    wordCount: IWordCount | null;\n}\n\nlet timeout = 0;\n\nexport const WordCounter: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        text: \"\",\n    });\n\n    const [wordCount, setWordCount] = useState<WordCountValue>({\n        wordCount: null,\n    });\n\n    const executeAsync = (action: () => void) => {\n        if (timeout) {\n            window.clearTimeout(timeout);\n        }\n        timeout = window.setTimeout(action, 500);\n    };\n\n    const onCalculate = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, text: value });\n        executeAsync(() => setWordCount({ wordCount: WordCounterUtils.calculate(value) }));\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"7\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text\"\n                        textarea\n                        rows={19}\n                        value={formValue.text}\n                        onChange={onCalculate}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"5\" className=\"mb-3\">\n                    <WordCounterTabs\n                        items={[\n                            {\n                                title: \"Statistics\",\n                                render: () => (\n                                    <WordCounterStatistics wordCount={wordCount.wordCount} />\n                                ),\n                            },\n                            {\n                                title: \"Keywords\",\n                                render: () => (\n                                    <WordCounterKeywords wordCount={wordCount.wordCount} />\n                                ),\n                            },\n                            {\n                                title: \"Tools\",\n                                render: () => <WordCounterTools text={formValue.text} />,\n                            },\n                        ]}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n\ninterface WordCounterViewProps {\n    wordCount: IWordCount | null;\n}\n\nconst WordCounterStatistics: React.FC<WordCounterViewProps> = (props: WordCounterViewProps) => {\n    if (!props.wordCount) {\n        return null;\n    }\n\n    return (\n        <MDBTable small hover>\n            <MDBTableBody>\n                {props.wordCount.statistics.map((x) => (\n                    <tr>\n                        <td>{x.name}</td>\n                        <td>{x.value}</td>\n                    </tr>\n                ))}\n            </MDBTableBody>\n        </MDBTable>\n    );\n};\n\nconst WordCounterKeywords: React.FC<WordCounterViewProps> = (props: WordCounterViewProps) => {\n    if (!props.wordCount) {\n        return null;\n    }\n\n    return (\n        <WordCounterTabs\n            items={[\n                {\n                    title: \"x1\",\n                    render: () => (\n                        <WordCounterKeywordsItems keywords={props.wordCount!.oneKeywords} />\n                    ),\n                },\n                {\n                    title: \"x2\",\n                    render: () => (\n                        <WordCounterKeywordsItems keywords={props.wordCount!.twoKeywords} />\n                    ),\n                },\n                {\n                    title: \"x3\",\n                    render: () => (\n                        <WordCounterKeywordsItems keywords={props.wordCount!.threeKeywords} />\n                    ),\n                },\n            ]}\n        />\n    );\n};\n\ninterface WordCounterKeywordsItemsProps {\n    keywords: IKeyword[];\n}\n\nconst WordCounterKeywordsItems: React.FC<WordCounterKeywordsItemsProps> = (\n    props: WordCounterKeywordsItemsProps,\n) => {\n    return (\n        <MDBTable small hover>\n            <MDBTableHead>\n                <tr>\n                    <th scope=\"col\"></th>\n                    <th scope=\"col\">Count</th>\n                    <th scope=\"col\">% of Text</th>\n                </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n                {props.keywords.map((x) => (\n                    <tr>\n                        <td>{x.words.reduce((a, b) => `${a} ${b}`)}</td>\n                        <td>{x.count}</td>\n                        <td>\n                            <NumberView value={x.percent} />%\n                        </td>\n                    </tr>\n                ))}\n            </MDBTableBody>\n        </MDBTable>\n    );\n};\n\ninterface WordCounterTabsProps {\n    items: WordCounterTabsItem[];\n}\n\ninterface WordCounterTabsItem {\n    title: string;\n    render: () => JSX.Element;\n}\n\nconst WordCounterTabs: React.FC<WordCounterTabsProps> = (props: WordCounterTabsProps) => {\n    const [activeTab, setActiveTab] = useState(props.items[0].title);\n\n    const onClick = (name: string) => {\n        if (name === activeTab) {\n            return;\n        }\n\n        setActiveTab(name);\n    };\n\n    return (\n        <>\n            <MDBTabs justify className=\"mb-3\">\n                {props.items.map((x) => (\n                    <MDBTabsItem>\n                        <MDBTabsLink\n                            onClick={() => onClick(x.title)}\n                            active={activeTab === x.title}\n                        >\n                            {x.title}\n                        </MDBTabsLink>\n                    </MDBTabsItem>\n                ))}\n            </MDBTabs>\n\n            <MDBTabsContent>\n                {props.items.map((x) => (\n                    <MDBTabsPane show={activeTab === x.title}>{x.render()}</MDBTabsPane>\n                ))}\n            </MDBTabsContent>\n        </>\n    );\n};\n\ninterface WordCounterToolsProps {\n    text: string;\n}\n\nconst WordCounterTools: React.FC<WordCounterToolsProps> = (props: WordCounterToolsProps) => {\n    return (\n        <WordCounterTabs\n            items={[\n                {\n                    title: \"One line\",\n                    render: () => <WordCounterToolsOneLine {...props} />,\n                },\n                {\n                    title: \"Html\",\n                    render: () => <WordCounterToolsHtml {...props} />,\n                },\n            ]}\n        />\n    );\n};\n\nconst WordCounterToolsOneLine: React.FC<WordCounterToolsProps> = (props: WordCounterToolsProps) => {\n    if (!props.text.length) {\n        return null;\n    }\n\n    const line = props.text.replace(/\\n/g, \" \");\n    return <MDBInput value={line} rows={14} textarea={true} readonly={true} />;\n};\n\nconst WordCounterToolsHtml: React.FC<WordCounterToolsProps> = (props: WordCounterToolsProps) => {\n    if (!props.text.length) {\n        return null;\n    }\n\n    const line = props.text\n        .split(\"\\n\")\n        .map((x) => x.trim())\n        .filter((x) => x !== \"\")\n        .map((x) => `<p>${x}</p>`)\n        .reduce((a, b) => `${a}\\n${b}`);\n\n    return <MDBInput value={line} rows={14} textarea={true} readonly={true} />;\n};\n\ninterface ViewParams<T> {\n    value: T;\n}\n\nconst NumberView: React.FC<ViewParams<number>> = (props: ViewParams<number>) => {\n    const options: Intl.NumberFormatOptions = {\n        minimumFractionDigits: 1,\n        maximumFractionDigits: 1,\n    };\n    return <>{new Intl.NumberFormat(undefined, options).format(props.value)}</>;\n};\n","import { RouteComponentProps } from \"react-router\";\nimport { Base64EncodeDecode } from \"../tools/base64-encode-decode/Base64EncodeDecode\";\nimport { Base64EncodeFileOrImage } from \"../tools/base64-encode-file-or-image/Base64EncodeFileOrImage\";\nimport { GuidGenerator } from \"../tools/guid-generator/GuidGenerator\";\nimport { HtmlEncodeDecode } from \"../tools/html-encode-decode/HtmlEncodeDecode\";\nimport { JavaScriptOnlineEditor } from \"../tools/javascript-online-editor/JavaScriptOnlineEditor\";\nimport { JsonFormatter } from \"../tools/json-formatter/JsonFormatter\";\nimport { JsonViewer } from \"../tools/json-viewer/JsonViewer\";\nimport { LoanCalculator } from \"../tools/loan-calculator/LoanCalculator\";\nimport { Md5Generator } from \"../tools/md5-generator/Md5Generator\";\nimport { Sha1Generator } from \"../tools/sha1-generator/Sha1Generator\";\nimport { Sha256Generator } from \"../tools/sha256-generator/Sha256Generator\";\nimport { TextDifferences } from \"../tools/text-differences/TextDifferences\";\nimport { TranslitFromRussianToEnglish } from \"../tools/translit-from-russian-to-english/TranslitFromRussianToEnglish\";\nimport { UnicodeToUtf8Converter } from \"../tools/unicode-to-utf8-converter/UnicodeToUtf8Converter\";\nimport { UnitConverter } from \"../tools/unit-converter/UnitConverter\";\nimport { UrlEncodeDecode } from \"../tools/url-encode-decode/UrlEncodeDecode\";\nimport { WordCounter } from \"../tools/word-counter/WordCounter\";\n\nexport interface Route {\n    url: string;\n    name: string;\n    title: string;\n    h1: string;\n    text: string;\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any> | undefined;\n}\n\nexport const AllRoutes: Route[] = [\n    {\n        url: \"base64-encode-decode\",\n        name: \"Base64 Encode/Decode Text\",\n        title: \"Online Base64 Encode/Decode Text - Olrix Tools\",\n        h1: \"Online Base64 Encode/Decode Text\",\n        text: \"\",\n        component: Base64EncodeDecode,\n    },\n    {\n        url: \"base64-encode-file-or-image\",\n        name: \"Base64 Encode File Or Image\",\n        title: \"Online Base64 Encode File Or Image - Olrix Tools\",\n        h1: \"Online Base64 Encode File Or Image\",\n        text: \"\",\n        component: Base64EncodeFileOrImage,\n    },\n    {\n        url: \"guid-generator\",\n        name: \"Guid Generator\",\n        title: \"Online Guid Generator - Olrix Tools\",\n        h1: \"Online Guid Generator\",\n        text: \"<h2>What is a GUID?</h2> <p>This is a unique 128-bit identifier. Its peculiarity is uniqueness, it allows you to generate random identifiers without the risk of repetition. The total number of GUID keys is very large (2<sup>128</sup>). The abbreviation GUID was introduced by Microsoft. The rest of the world uses the term UUID.</p> <h2>What does a GUID look like?</h2> <p>Consists of thirty-two hexadecimal digits, separated by hyphens. They can also be surrounded by curly braces. For example: 2170abcb-8499-47de-be64-8cc8b290ebd5</p> <h2>How is it used?</h2> <p>GUID is used as a unique identifier in programming as keys in a database. Due to the high uniqueness of the UUID, when generating it, you don't have to worry about checking duplicates.</p>\",\n        component: GuidGenerator,\n    },\n    {\n        url: \"html-encode-decode\",\n        name: \"Html Encode/Decode\",\n        title: \"Online Html Encode/Decode - Olrix Tools\",\n        h1: \"Online Html Encode/Decode\",\n        text: \"\",\n        component: HtmlEncodeDecode,\n    },\n    {\n        url: \"javascript-online-editor\",\n        name: \"JavaScript Editor\",\n        title: \"Online JavaScript Editor - Olrix Tools\",\n        h1: \"Online JavaScript Editor\",\n        text: \"\",\n        component: JavaScriptOnlineEditor,\n    },\n    {\n        url: \"json-formatter\",\n        name: \"Json Formatter\",\n        title: \"Online Json Formatter - Olrix Tools\",\n        h1: \"Online Json Formatter\",\n        text: \"\",\n        component: JsonFormatter,\n    },\n    {\n        url: \"json-viewer\",\n        name: \"Json Viewer\",\n        title: \"Online Json Viewer - Olrix Tools\",\n        h1: \"Online Json Viewer\",\n        text: \"\",\n        component: JsonViewer,\n    },\n    {\n        url: \"loan-calculator\",\n        name: \"Loan Calculator\",\n        title: \"Online Loan Calculator - Olrix Tools\",\n        h1: \"Loan Calculator\",\n        text: \"\",\n        component: LoanCalculator,\n    },\n    {\n        url: \"md5-generator\",\n        name: \"MD5 Generator\",\n        title: \"Online MD5 Generator - Olrix Tools\",\n        h1: \"Online MD5 Generator\",\n        text: \"\",\n        component: Md5Generator,\n    },\n    {\n        url: \"sha1-generator\",\n        name: \"SHA1 Generator\",\n        title: \"Online SHA1 Generator - Olrix Tools\",\n        h1: \"Online SHA1 Generator\",\n        text: \"\",\n        component: Sha1Generator,\n    },\n    {\n        url: \"sha256-generator\",\n        name: \"SHA256 Generator\",\n        title: \"Online SHA256 Generator - Olrix Tools\",\n        h1: \"Online SHA256 Generator\",\n        text: \"\",\n        component: Sha256Generator,\n    },\n    {\n        url: \"text-differences\",\n        name: \"Differences Between Texts\",\n        title: \"Online Finding Differences Between Texts - Olrix Tools\",\n        h1: \"Online Finding Differences Between Texts\",\n        text: \"\",\n        component: TextDifferences,\n    },\n    {\n        url: \"translit-from-russian-to-english\",\n        name: \"Translit From Russian\",\n        title: \"Online Translint From Russian To English - Olrix Tools\",\n        h1: \"Online Translint From Russian To English\",\n        text: \"\",\n        component: TranslitFromRussianToEnglish,\n    },\n    {\n        url: \"unicode-to-utf8-converter\",\n        name: \"Unicode To UTF8 Converter\",\n        title: \"Online Unicode To UTF8 Converter - Olrix Tools\",\n        h1: \"Online Unicode To UTF8 Converter\",\n        text: \"\",\n        component: UnicodeToUtf8Converter,\n    },\n    {\n        url: \"unit-converter\",\n        name: \"Unit Converter\",\n        title: \"Online Unit Converter - Olrix Tools\",\n        h1: \"Online Unit Converter\",\n        text: \"\",\n        component: UnitConverter,\n    },\n    {\n        url: \"url-encode-decode\",\n        name: \"Url Encode/Decode\",\n        title: \"Online Url Encode/Decode - Olrix Tools\",\n        h1: \"Online Url Encode/Decode\",\n        text: \"\",\n        component: UrlEncodeDecode,\n    },\n    {\n        url: \"word-counter\",\n        name: \"Word Counter\",\n        title: \"Online Word Counter - Olrix Tools\",\n        h1: \"Online Word Counter\",\n        text: \"\",\n        component: WordCounter,\n    },\n];\n","import { MDBCol, MDBIcon, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { Base64 } from \"base64-js-tools\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const Base64EncodeDecode: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: Base64.encodeText(value) });\n    };\n\n    const onDecode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: Base64.decodeToText(value), encoded: value });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Decoded Base64\"\n                        textarea\n                        rows={19}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Encoded Base64\"\n                        textarea\n                        rows={19}\n                        value={formValue.encoded}\n                        onChange={onDecode}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { HtmlEncodeDecodeUtils } from \"./HtmlEncodeDecodeUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const HtmlEncodeDecode: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({\n            ...formValue,\n            decoded: value,\n            encoded: HtmlEncodeDecodeUtils.encode(value),\n        });\n    };\n\n    const onDecode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({\n            ...formValue,\n            decoded: HtmlEncodeDecodeUtils.decode(value),\n            encoded: value,\n        });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Decoded Html\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Encoded Html\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        onChange={onDecode}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBIcon, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { MD5 } from \"md5-js-tools\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const Md5Generator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: MD5.generate(value) });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"MD5\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBIcon, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { SHA256 } from \"sha256-js-tools\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const Sha256Generator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: SHA256.generate(value) });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"SHA256\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { TextDifferencesUtils } from \"./TextDifferencesUtils\";\n\ninterface FormValue {\n    before: string;\n    after: string;\n    differences: string;\n}\n\nexport const TextDifferences: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        before: \"\",\n        after: \"\",\n        differences: \"\",\n    });\n\n    const executeAsync = (action: () => void): void => {\n        window.setTimeout(action, 1);\n    };\n\n    const findDifferences = (before: string, after: string): void => {\n        setFormValue({\n            ...formValue,\n            before,\n            after,\n            differences: \"loading...\",\n        });\n        executeAsync(() => {\n            setFormValue({\n                ...formValue,\n                before,\n                after,\n                differences: TextDifferencesUtils.findDifferences(before, after),\n            });\n        });\n    };\n\n    const onChangeBefore = (e: any) => {\n        findDifferences(e.currentTarget.value || \"\", formValue.after);\n    };\n\n    const onChangeAfter = (e: any) => {\n        findDifferences(formValue.before, e.currentTarget.value || \"\");\n    };\n\n    const formatHtml = (value: string) =>\n        value.replace(/\\n/g, \"<br/>\").replace(/\\s\\s/g, \"&nbsp;&nbsp;\");\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text Before\"\n                        textarea\n                        rows={15}\n                        value={formValue.before}\n                        onChange={onChangeBefore}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text After\"\n                        textarea\n                        rows={15}\n                        value={formValue.after}\n                        onChange={onChangeAfter}\n                    />\n                </MDBCol>\n            </MDBRow>\n            <h3>Differences</h3>\n            <MDBRow>\n                <MDBCol md=\"12\" className=\"mb-3\">\n                    <div\n                        className=\"square border-gray rounded wordwrap px-2 py-1\"\n                        style={{ height: 385 }}\n                    >\n                        <div\n                            dangerouslySetInnerHTML={{ __html: formatHtml(formValue.differences) }}\n                        />\n                    </div>\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { TranslitFromRussianToEnglishUtils } from \"./TranslitFromRussianToEnglishUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const TranslitFromRussianToEnglish: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({\n            ...formValue,\n            decoded: value,\n            encoded: TranslitFromRussianToEnglishUtils.encode(value),\n        });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Russian text\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Translit to English text\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBIcon, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { UTF8 } from \"utf8-js-tools\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const UnicodeToUtf8Converter: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: UTF8.encode(value) });\n    };\n\n    const formatView = (utf8Text: string): string => {\n        let symbols = \"\";\n        for (let i = 0; i < utf8Text.length; i++) {\n            symbols += `\\\\x${utf8Text.charCodeAt(i).toString(16).toLocaleUpperCase()}`;\n        }\n        return symbols;\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Unicode\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"UTF8\"\n                        textarea\n                        rows={15}\n                        value={formatView(formValue.encoded)}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const UrlEncodeDecode: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: encodeURIComponent(value) });\n    };\n\n    const onDecode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: decodeURIComponent(value), encoded: value });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Decoded Url\"\n                        textarea\n                        rows={10}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Encoded Url\"\n                        textarea\n                        rows={10}\n                        value={formValue.encoded}\n                        onChange={onDecode}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { useState } from \"react\";\nimport { AllRoutes } from \"./Routes\";\nimport {\n    MDBNavbar,\n    MDBContainer,\n    MDBIcon,\n    MDBNavbarNav,\n    MDBNavbarItem,\n    MDBNavbarToggler,\n    MDBNavbarBrand,\n    MDBCollapse,\n    MDBDropdown,\n    MDBDropdownToggle,\n    MDBDropdownMenu,\n    MDBDropdownItem,\n    MDBDropdownLink,\n} from \"mdb-react-ui-kit\";\n\nexport const Header: React.FC = () => {\n    const [showBasic, setShowBasic] = useState(false);\n\n    return (\n        <>\n            <MDBNavbar expand=\"lg\" dark bgColor=\"primary\">\n                <MDBContainer fluid>\n                    <MDBNavbarBrand href=\"/\">\n                        <MDBIcon className=\"mx-2 fa-1-5x\" icon=\"envelope\" />\n                        Olrix Tools\n                    </MDBNavbarBrand>\n\n                    <MDBNavbarToggler\n                        aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\"\n                        onClick={() => setShowBasic(!showBasic)}\n                    >\n                        <MDBIcon icon=\"bars\" fas />\n                    </MDBNavbarToggler>\n\n                    <MDBCollapse navbar show={showBasic}>\n                        <MDBNavbarNav right fullWidth={false} className=\"mb-2 mb-lg-0\">\n                            <MDBNavbarItem>\n                                <MDBDropdown>\n                                    <MDBDropdownToggle tag=\"a\" className=\"nav-link\">\n                                        Choose tools\n                                    </MDBDropdownToggle>\n                                    <MDBDropdownMenu>\n                                        {AllRoutes.map((x) => (\n                                            <MDBDropdownItem key={x.url}>\n                                                <MDBDropdownLink href={`/tools/${x.url}/`}>\n                                                    {x.name}\n                                                </MDBDropdownLink>\n                                            </MDBDropdownItem>\n                                        ))}\n                                    </MDBDropdownMenu>\n                                </MDBDropdown>\n                            </MDBNavbarItem>\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBContainer>\n            </MDBNavbar>\n        </>\n    );\n};\n","import { MDBBtn, MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { AllRoutes } from \"./Routes\";\n\ninterface FormValue {\n    search: string;\n}\n\nexport const Main: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        search: \"\",\n    });\n\n    const onSearch = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, search: value });\n    };\n\n    const contains = (value1: string, value2: string) => {\n        return value1.toLocaleLowerCase().includes(value2.toLocaleLowerCase());\n    };\n\n    const routes = formValue.search\n        ? AllRoutes.filter((x) => contains(x.name, formValue.search))\n        : AllRoutes;\n\n    return (\n        <>\n            <div className=\"m-4 mt-2\">\n                <MDBInput label=\"Search\" value={formValue.search} onChange={onSearch} />\n            </div>\n            <MDBRow>\n                {routes.map((x) => (\n                    <MDBCol md=\"3\" className=\"text-center my-2\">\n                        <MDBBtn href={`/tools/${x.url}/`} tag=\"a\">\n                            {x.name}\n                        </MDBBtn>\n                    </MDBCol>\n                ))}\n            </MDBRow>\n        </>\n    );\n};\n","import { Switch, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { Main } from \"./Main\";\nimport { AllRoutes } from \"./Routes\";\n\nexport const Router: React.FC = () => {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/tools\" component={ToolsRouter} />\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n\nconst ToolsRouter: React.FC<RouteComponentProps> = (props) => {\n    return (\n        <Switch>\n            {AllRoutes.map((x) => (\n                <Route key={x.url} path={`${props.match.url}/${x.url}`} component={x.component} />\n            ))}\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n","import React from \"react\";\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Header } from \"./Header\";\nimport { Router } from \"./Router\";\nimport { MDBContainer } from \"mdb-react-ui-kit\";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <Header />\n            <MDBContainer fluid className=\"mt-3\">\n                <div className=\"h1-container\"></div>\n                <Router />\n            </MDBContainer>\n        </BrowserRouter>\n    );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}