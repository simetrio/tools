{"version":3,"sources":["tools/base64-encode-file-or-image/Base64EncodeFileOrImage.tsx","tools/guid-generator/GuidGeneratorUtils.ts","tools/guid-generator/GuidGenerator.tsx","tools/html-encode-decode/HtmlEncodeDecodeUtils.ts","tools/json-formatter/JsonFormatterUtils.ts","tools/json-formatter/JsonFormatter.tsx","tools/json-viewer/JsonViewerUtils.ts","tools/json-viewer/JsonViewer.tsx","tools/loan-calculator/LoanCalculatorUtils.ts","tools/loan-calculator/LoanCalculator.tsx","tools/sha1-generator/Sha1GeneratorUtils.ts","tools/sha1-generator/Sha1Generator.tsx","tools/sha256-generator/Sha256GeneratorUtils.ts","tools/sha256-generator/Sha256Generator.tsx","tools/text-differences/TextDifferencesUtils.ts","tools/translit-from-russian-to-english/TranslitFromRussianToEnglishUtils.ts","tools/unit-converter/UnitConverterUtils.ts","tools/unit-converter/UnitConverter.tsx","app/Routes.ts","tools/text-differences/TextDifferences.tsx","tools/translit-from-russian-to-english/TranslitFromRussianToEnglish.tsx","tools/url-encode-decode/UrlEncodeDecode.tsx","tools/html-encode-decode/HtmlEncodeDecode.tsx","tools/base64-encode-decode/Base64EncodeDecode.tsx","tools/md5-generator/Md5Generator.tsx","app/Header.tsx","app/Main.tsx","app/Router.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Base64EncodeFileOrImageEncoded","props","className","style","height","dangerouslySetInnerHTML","__html","value","Base64EncodeFileOrImageEncodedMemo","memo","GuidGeneratorUtils","guids","i","count","push","newGuid","guid","replace","c","r","Math","random","toString","uppercase","toUpperCase","braces","hypens","HtmlEncodeDecodeUtils","encodeHtml","decodeEntity","decodeHtml","code","charAt","HTML_ENTITIES","n","substring","length","parseInt","isNaN","String","fromCharCode","JsonFormatterUtils","formatValue","JSON","stringify","parse","parseJson","x","parseFloat","formatNumber","formatString","formatBoolean","_","formatNull","e","message","formatJson","JsonViewerUtils","getObject","parseJsonObject","values","getProperties","Object","keys","map","key","name","getValue","jsonValue","Array","isArray","type","expanded","LoanCalculatorUtils","amount","term","rate","monthlyRate","monthlyPayment","pow","months","month","balance","now","Date","date","setMonth","getMonth","interest","principal","payment","index","calculateMonths","total","reduce","current","next","calculateTotal","calculate","timeout","LoanCalculatorFrom","md","htmlFor","onChange","LoanCalculatorFromTerm","useState","termPeriod","formValue","setFormValue","newFormValue","calculateAndSendChange","LoanCalculatorFromDropDown","tag","onClick","LoanCalculatorTable","maxCount","useEffect","window","setTimeout","result","small","hover","scope","slice","LoanCalculatorTableRowMemo","LoanCalculatorTableRow","LoanCalculatorSummary","NumberView","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","format","DateView","parts","DateTimeFormat","dateStyle","formatToParts","find","year","NumberEdit","id","currentTarget","Sha1GeneratorUtils","blockstart","j","A","B","C","D","E","temp","W","H0","H1","H2","H3","H4","valueLength","utftext","charCodeAt","utf8Encode","words","rotateLeft","convertHex","encodeSha1","s","str","Sha256GeneratorUtils","binarray","hex_tab","binb2hex","array","a","b","d","f","g","h","T1","T2","K","HASH","safeAdd","Gamma1256","Gamma0256","Sigma1256","Ch","Sigma0256","Maj","coreSha256","bin","mask","str2binb","encodeSha256","y","lsw","S","X","R","z","TextDifferencesUtils","before","after","TextDifferencer","findDifferencesBetweenStrings","insertElementAt","element","splice","insertElementsAt","elements","string0","string1","lengthOfShorterString","passagePairsMatchingAtExtremes","lengthOfMatchingSubstring","offsetForString0","offsetForString1","matchingSubstringAtExtreme","substr","passagePairMatchingAtExtreme","TextPassagePair","TextPassage","passagePairsAll","passagePairsMatching","this","findPassagePairsMatchingBetweenStrings","insertPassagePairsDifferentBetweenMatching","TextDifferences","positionOffsets","longestCommonPassagePair","findLongestCommonPassagePair","lengthOfCommonPassage","passages","text","passage0","passage1","passagePairSetsMatchingBeforeAndAfter","position","returnValue","lengthOfString0","lengthOfString1","substringLengthsForRow","substringLengthsForRowPrev","lengthOfLongestCommonSubstringSoFar","cellValue","startIndex","longestCommonSubstringSoFar","passagePairsToInsertBetween","pMax","p","passagePairToInsertAfter","passagePairToInsertBefore","buildAndInsertPassagePairBetweenExisting","indexOfPassagePairFinal","passagePairFinal","doPassagesMatch","lengthOfPassageToInsertAfter","positionsForPassagePairDifferent","passageToInsert0","passageToInsert1","passagePairToInsert","passagePairs","escapeStringForHTML","stringToEscape","TranslitFromRussianToEnglishUtils","char","translitChar","translitChars","translit","Unit","UnitType","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","UnitConverterUtils","from","to","UnitValues","convertUnit","UnitGroups","DataStorage","bit","KB","MB","GB","TB","PB","EB","Time","tick","ms","m","M","UnitTypes","UnitConverterRow","params","units","onConvert","target","onChangeUnit","label","readonly","UnitConverterUnitsDropDown","group","AllRoutes","url","title","component","decoded","jsonObject","console","log","textarea","rows","encoded","formatValueHtml","differences","findDifferences","action","border","background","clearTimeout","generate","onChangeBoolean","checked","defaultChecked","join","encodeURIComponent","decodeURIComponent","href","rel","color","fab","icon","size","Base64","encodeText","decodeToText","uploadFileRef","createRef","click","disabled","navigator","clipboard","writeText","display","files","file","fileSizeMB","toFixed","reader","FileReader","readAsArrayBuffer","Blob","onload","arrayBuffer","bytes","Uint8Array","encodeByteArray","ref","MD5","Header","showBasic","setShowBasic","expand","dark","bgColor","fluid","fas","navbar","show","right","fullWidth","Main","search","routes","filter","value1","value2","toLocaleLowerCase","includes","Router","path","exact","ToolsRouter","match","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7299e087.chunk.js","sourcesContent":["import { MDBBtn, MDBIcon } from \"mdb-react-ui-kit\";\nimport { createRef, memo, useState } from \"react\";\nimport { Base64 } from \"base64-js-tools\";\n\ninterface FormValue {\n    encoded: string;\n}\n\nconst maxSizeMB = 5;\n\nexport const Base64EncodeFileOrImage: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        encoded: \"\",\n    });\n\n    const uploadFileRef: any = createRef();\n\n    const onUpload = (e: any) => {\n        if (e.target.files.length > 0) {\n            setFormValue({ encoded: \"Loading...\" });\n\n            const file = e.target.files[0] as File;\n            const fileSizeMB = file.size / 1024 / 1024;\n            if (fileSizeMB > maxSizeMB) {\n                setFormValue({\n                    encoded: `File too large. Max file size ${maxSizeMB} MB. File size ${fileSizeMB.toFixed(\n                        1,\n                    )} MB`,\n                });\n                return;\n            }\n\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(new Blob([file]));\n            reader.onload = function () {\n                var arrayBuffer = reader.result;\n                var bytes = new Uint8Array(arrayBuffer as any);\n                setFormValue({ encoded: Base64.encodeByteArray(bytes as any) });\n            };\n        }\n    };\n\n    const onChooseFile = () => {\n        uploadFileRef.current && uploadFileRef.current.click();\n    };\n\n    const onCopyToClipboard = () => {\n        navigator.clipboard.writeText(formValue.encoded);\n    };\n\n    return (\n        <>\n            <h1 className=\"d-inline-block me-3\">Online Base64 Encode File Or Image</h1>\n            <a\n                href=\"https://github.com/simetrio/base64-js-tools\"\n                title=\"Code on Github\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                <MDBIcon color=\"black\" fab icon=\"github-square\" size=\"2x\" />\n            </a>\n            <div className=\"mb-3\">\n                <MDBBtn onClick={onChooseFile}>Choose file</MDBBtn>\n                <MDBBtn\n                    className=\"mx-3\"\n                    color=\"success\"\n                    disabled={!formValue.encoded}\n                    onClick={onCopyToClipboard}\n                >\n                    Copy to clipboard\n                </MDBBtn>\n                <input\n                    type=\"file\"\n                    style={{ display: \"none\" }}\n                    onChange={onUpload}\n                    ref={uploadFileRef}\n                />\n            </div>\n            <div className=\"mb-3\">\n                <Base64EncodeFileOrImageEncodedMemo value={formValue.encoded} />\n            </div>\n        </>\n    );\n};\n\ninterface Base64EncodeFileOrImageEncodedProps {\n    value: string;\n}\n\nconst Base64EncodeFileOrImageEncoded: React.FC<Base64EncodeFileOrImageEncodedProps> = (\n    props: Base64EncodeFileOrImageEncodedProps,\n) => {\n    return (\n        <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{ height: 430 }}>\n            <div dangerouslySetInnerHTML={{ __html: props.value }} />\n        </div>\n    );\n};\n\nconst Base64EncodeFileOrImageEncodedMemo = memo(Base64EncodeFileOrImageEncoded);\n","interface Props {\n    count: number;\n    uppercase: boolean;\n    braces: boolean;\n    hypens: boolean;\n}\n\nexport const GuidGeneratorUtils = {\n    generate: (props: Props): string[] => {\n        const guids: string[] = [];\n        for (let i = 0; i < props.count; i++) {\n            guids.push(newGuid(props));\n        }\n        return guids;\n    },\n};\n\nfunction newGuid(props: Props): string {\n    let guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0;\n        const v = c === \"x\" ? r : r && 0x3 | 0x8;\n        return v.toString(16);\n    });\n\n    if (props.uppercase) {\n        guid = guid.toUpperCase();\n    }\n\n    if (props.braces) {\n        guid = `{${guid}}`;\n    }\n\n    if (!props.hypens) {\n        guid = guid.replace(/-/g, \"\");\n    }\n\n    return guid;\n}\n","import { MDBBtn, MDBCheckbox, MDBCol, MDBInput } from \"mdb-react-ui-kit\";\nimport { useEffect, useState } from \"react\";\nimport { GuidGeneratorUtils } from \"./GuidGeneratorUtils\";\n\ninterface FormValue {\n    count: number;\n    uppercase: boolean;\n    braces: boolean;\n    hypens: boolean;\n    value: string[];\n}\n\nexport const GuidGenerator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        count: 1,\n        uppercase: false,\n        braces: false,\n        hypens: true,\n        value: [],\n    });\n\n    const generate = (props: FormValue) => {\n        setFormValue({ ...props, value: GuidGeneratorUtils.generate(props) });\n    };\n\n    const onChange = (e: any) => {\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.value };\n        setFormValue(newFormValue);\n        generate(newFormValue);\n    };\n\n    const onChangeBoolean = (e: any) => {\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.checked };\n        setFormValue(newFormValue);\n        generate(newFormValue);\n    };\n\n    const onGenerate = () => {\n        generate(formValue);\n    };\n\n    // eslint-disable-next-line\n    useEffect(() => generate(formValue), []);\n\n    return (\n        <>\n            <h1>Online Guid Generator</h1>\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBInput\n                    value={formValue.count.toString()}\n                    name=\"count\"\n                    id=\"count\"\n                    label=\"How many?\"\n                    onChange={onChange}\n                />\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBCheckbox\n                    name=\"uppercase\"\n                    id=\"uppercase\"\n                    label=\"Uppercase\"\n                    onClick={onChangeBoolean}\n                    defaultChecked={formValue.uppercase}\n                />\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBCheckbox\n                    name=\"braces\"\n                    id=\"braces\"\n                    label=\"Braces\"\n                    onClick={onChangeBoolean}\n                    defaultChecked={formValue.braces}\n                />\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBCheckbox\n                    name=\"hypens\"\n                    id=\"hypens\"\n                    label=\"Hypens\"\n                    onClick={onChangeBoolean}\n                    defaultChecked={formValue.hypens}\n                />\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBBtn onClick={onGenerate}>Generate</MDBBtn>\n            </MDBCol>\n\n            <MDBCol md=\"4\" className=\"mb-3\">\n                <MDBInput\n                    label=\"Generated Guids\"\n                    textarea\n                    rows={10}\n                    value={formValue.value.join(\"\\n\")}\n                />\n            </MDBCol>\n        </>\n    );\n};\n","export const HtmlEncodeDecodeUtils = {\n    encode: (value: string): string => encodeHtml(value),\n\n    decode: (value: string): string => decodeHtml(value),\n};\n\nfunction encodeHtml(value: string): string {\n    return value\n        .replace(/&/g, \"&amp;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&apos;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\");\n}\n\nfunction decodeHtml(value: string): string {\n    return value.replace(/&#?\\w+;/g, decodeEntity);\n}\n\nfunction decodeEntity(code: string) {\n    // name type\n    if (code.charAt(1) !== \"#\") {\n        return HTML_ENTITIES[code] || code;\n    }\n\n    var n,\n        c = code.charAt(2);\n    // hex number\n    if (c === \"x\" || c === \"X\") {\n        c = code.substring(3, code.length - 1);\n        n = parseInt(c, 16);\n    } else {\n        c = code.substring(2, code.length - 1);\n        n = parseInt(c);\n    }\n    return isNaN(n) ? code : String.fromCharCode(n);\n}\n\nconst HTML_ENTITIES: any = {\n    \"&nbsp;\": \"\\u00A0\",\n    \"&iexcl;\": \"\\u00A1\",\n    \"&cent;\": \"\\u00A2\",\n    \"&pound;\": \"\\u00A3\",\n    \"&curren;\": \"\\u00A4\",\n    \"&yen;\": \"\\u00A5\",\n    \"&brvbar;\": \"\\u00A6\",\n    \"&sect;\": \"\\u00A7\",\n    \"&uml;\": \"\\u00A8\",\n    \"&copy;\": \"\\u00A9\",\n    \"&ordf;\": \"\\u00AA\",\n    \"&laquo;\": \"\\u00AB\",\n    \"&not;\": \"\\u00AC\",\n    \"&shy;\": \"\\u00AD\",\n    \"&reg;\": \"\\u00AE\",\n    \"&macr;\": \"\\u00AF\",\n    \"&deg;\": \"\\u00B0\",\n    \"&plusmn;\": \"\\u00B1\",\n    \"&sup2;\": \"\\u00B2\",\n    \"&sup3;\": \"\\u00B3\",\n    \"&acute;\": \"\\u00B4\",\n    \"&micro;\": \"\\u00B5\",\n    \"&para;\": \"\\u00B6\",\n    \"&middot;\": \"\\u00B7\",\n    \"&cedil;\": \"\\u00B8\",\n    \"&sup1;\": \"\\u00B9\",\n    \"&ordm;\": \"\\u00BA\",\n    \"&raquo;\": \"\\u00BB\",\n    \"&frac14;\": \"\\u00BC\",\n    \"&frac12;\": \"\\u00BD\",\n    \"&frac34;\": \"\\u00BE\",\n    \"&iquest;\": \"\\u00BF\",\n    \"&Agrave;\": \"\\u00C0\",\n    \"&Aacute;\": \"\\u00C1\",\n    \"&Acirc;\": \"\\u00C2\",\n    \"&Atilde;\": \"\\u00C3\",\n    \"&Auml;\": \"\\u00C4\",\n    \"&Aring;\": \"\\u00C5\",\n    \"&AElig;\": \"\\u00C6\",\n    \"&Ccedil;\": \"\\u00C7\",\n    \"&Egrave;\": \"\\u00C8\",\n    \"&Eacute;\": \"\\u00C9\",\n    \"&Ecirc;\": \"\\u00CA\",\n    \"&Euml;\": \"\\u00CB\",\n    \"&Igrave;\": \"\\u00CC\",\n    \"&Iacute;\": \"\\u00CD\",\n    \"&Icirc;\": \"\\u00CE\",\n    \"&Iuml;\": \"\\u00CF\",\n    \"&ETH;\": \"\\u00D0\",\n    \"&Ntilde;\": \"\\u00D1\",\n    \"&Ograve;\": \"\\u00D2\",\n    \"&Oacute;\": \"\\u00D3\",\n    \"&Ocirc;\": \"\\u00D4\",\n    \"&Otilde;\": \"\\u00D5\",\n    \"&Ouml;\": \"\\u00D6\",\n    \"&times;\": \"\\u00D7\",\n    \"&Oslash;\": \"\\u00D8\",\n    \"&Ugrave;\": \"\\u00D9\",\n    \"&Uacute;\": \"\\u00DA\",\n    \"&Ucirc;\": \"\\u00DB\",\n    \"&Uuml;\": \"\\u00DC\",\n    \"&Yacute;\": \"\\u00DD\",\n    \"&THORN;\": \"\\u00DE\",\n    \"&szlig;\": \"\\u00DF\",\n    \"&agrave;\": \"\\u00E0\",\n    \"&aacute;\": \"\\u00E1\",\n    \"&acirc;\": \"\\u00E2\",\n    \"&atilde;\": \"\\u00E3\",\n    \"&auml;\": \"\\u00E4\",\n    \"&aring;\": \"\\u00E5\",\n    \"&aelig;\": \"\\u00E6\",\n    \"&ccedil;\": \"\\u00E7\",\n    \"&egrave;\": \"\\u00E8\",\n    \"&eacute;\": \"\\u00E9\",\n    \"&ecirc;\": \"\\u00EA\",\n    \"&euml;\": \"\\u00EB\",\n    \"&igrave;\": \"\\u00EC\",\n    \"&iacute;\": \"\\u00ED\",\n    \"&icirc;\": \"\\u00EE\",\n    \"&iuml;\": \"\\u00EF\",\n    \"&eth;\": \"\\u00F0\",\n    \"&ntilde;\": \"\\u00F1\",\n    \"&ograve;\": \"\\u00F2\",\n    \"&oacute;\": \"\\u00F3\",\n    \"&ocirc;\": \"\\u00F4\",\n    \"&otilde;\": \"\\u00F5\",\n    \"&ouml;\": \"\\u00F6\",\n    \"&divide;\": \"\\u00F7\",\n    \"&oslash;\": \"\\u00F8\",\n    \"&ugrave;\": \"\\u00F9\",\n    \"&uacute;\": \"\\u00FA\",\n    \"&ucirc;\": \"\\u00FB\",\n    \"&uuml;\": \"\\u00FC\",\n    \"&yacute;\": \"\\u00FD\",\n    \"&thorn;\": \"\\u00FE\",\n    \"&yuml;\": \"\\u00FF\",\n    \"&quot;\": \"\\u0022\",\n    \"&amp;\": \"\\u0026\",\n    \"&lt;\": \"\\u003C\",\n    \"&gt;\": \"\\u003E\",\n    \"&apos;\": \"\\u0027\",\n    \"&OElig;\": \"\\u0152\",\n    \"&oelig;\": \"\\u0153\",\n    \"&Scaron;\": \"\\u0160\",\n    \"&scaron;\": \"\\u0161\",\n    \"&Yuml;\": \"\\u0178\",\n    \"&circ;\": \"\\u02C6\",\n    \"&tilde;\": \"\\u02DC\",\n    \"&ensp;\": \"\\u2002\",\n    \"&emsp;\": \"\\u2003\",\n    \"&thinsp;\": \"\\u2009\",\n    \"&zwnj;\": \"\\u200C\",\n    \"&zwj;\": \"\\u200D\",\n    \"&lrm;\": \"\\u200E\",\n    \"&rlm;\": \"\\u200F\",\n    \"&ndash;\": \"\\u2013\",\n    \"&mdash;\": \"\\u2014\",\n    \"&lsquo;\": \"\\u2018\",\n    \"&rsquo;\": \"\\u2019\",\n    \"&sbquo;\": \"\\u201A\",\n    \"&ldquo;\": \"\\u201C\",\n    \"&rdquo;\": \"\\u201D\",\n    \"&bdquo;\": \"\\u201E\",\n    \"&dagger;\": \"\\u2020\",\n    \"&Dagger;\": \"\\u2021\",\n    \"&permil;\": \"\\u2030\",\n    \"&lsaquo;\": \"\\u2039\",\n    \"&rsaquo;\": \"\\u203A\",\n    \"&euro;\": \"\\u20AC\",\n    \"&fnof;\": \"\\u0192\",\n    \"&Alpha;\": \"\\u0391\",\n    \"&Beta;\": \"\\u0392\",\n    \"&Gamma;\": \"\\u0393\",\n    \"&Delta;\": \"\\u0394\",\n    \"&Epsilon;\": \"\\u0395\",\n    \"&Zeta;\": \"\\u0396\",\n    \"&Eta;\": \"\\u0397\",\n    \"&Theta;\": \"\\u0398\",\n    \"&Iota;\": \"\\u0399\",\n    \"&Kappa;\": \"\\u039A\",\n    \"&Lambda;\": \"\\u039B\",\n    \"&Mu;\": \"\\u039C\",\n    \"&Nu;\": \"\\u039D\",\n    \"&Xi;\": \"\\u039E\",\n    \"&Omicron;\": \"\\u039F\",\n    \"&Pi;\": \"\\u03A0\",\n    \"&Rho;\": \"\\u03A1\",\n    \"&Sigma;\": \"\\u03A3\",\n    \"&Tau;\": \"\\u03A4\",\n    \"&Upsilon;\": \"\\u03A5\",\n    \"&Phi;\": \"\\u03A6\",\n    \"&Chi;\": \"\\u03A7\",\n    \"&Psi;\": \"\\u03A8\",\n    \"&Omega;\": \"\\u03A9\",\n    \"&alpha;\": \"\\u03B1\",\n    \"&beta;\": \"\\u03B2\",\n    \"&gamma;\": \"\\u03B3\",\n    \"&delta;\": \"\\u03B4\",\n    \"&epsilon;\": \"\\u03B5\",\n    \"&zeta;\": \"\\u03B6\",\n    \"&eta;\": \"\\u03B7\",\n    \"&theta;\": \"\\u03B8\",\n    \"&iota;\": \"\\u03B9\",\n    \"&kappa;\": \"\\u03BA\",\n    \"&lambda;\": \"\\u03BB\",\n    \"&mu;\": \"\\u03BC\",\n    \"&nu;\": \"\\u03BD\",\n    \"&xi;\": \"\\u03BE\",\n    \"&omicron;\": \"\\u03BF\",\n    \"&pi;\": \"\\u03C0\",\n    \"&rho;\": \"\\u03C1\",\n    \"&sigmaf;\": \"\\u03C2\",\n    \"&sigma;\": \"\\u03C3\",\n    \"&tau;\": \"\\u03C4\",\n    \"&upsilon;\": \"\\u03C5\",\n    \"&phi;\": \"\\u03C6\",\n    \"&chi;\": \"\\u03C7\",\n    \"&psi;\": \"\\u03C8\",\n    \"&omega;\": \"\\u03C9\",\n    \"&thetasym;\": \"\\u03D1\",\n    \"&upsih;\": \"\\u03D2\",\n    \"&piv;\": \"\\u03D6\",\n    \"&bull;\": \"\\u2022\",\n    \"&hellip;\": \"\\u2026\",\n    \"&prime;\": \"\\u2032\",\n    \"&Prime;\": \"\\u2033\",\n    \"&oline;\": \"\\u203E\",\n    \"&frasl;\": \"\\u2044\",\n    \"&weierp;\": \"\\u2118\",\n    \"&image;\": \"\\u2111\",\n    \"&real;\": \"\\u211C\",\n    \"&trade;\": \"\\u2122\",\n    \"&alefsym;\": \"\\u2135\",\n    \"&larr;\": \"\\u2190\",\n    \"&uarr;\": \"\\u2191\",\n    \"&rarr;\": \"\\u2192\",\n    \"&darr;\": \"\\u2193\",\n    \"&harr;\": \"\\u2194\",\n    \"&crarr;\": \"\\u21B5\",\n    \"&lArr;\": \"\\u21D0\",\n    \"&uArr;\": \"\\u21D1\",\n    \"&rArr;\": \"\\u21D2\",\n    \"&dArr;\": \"\\u21D3\",\n    \"&hArr;\": \"\\u21D4\",\n    \"&forall;\": \"\\u2200\",\n    \"&part;\": \"\\u2202\",\n    \"&exist;\": \"\\u2203\",\n    \"&empty;\": \"\\u2205\",\n    \"&nabla;\": \"\\u2207\",\n    \"&isin;\": \"\\u2208\",\n    \"&notin;\": \"\\u2209\",\n    \"&ni;\": \"\\u220B\",\n    \"&prod;\": \"\\u220F\",\n    \"&sum;\": \"\\u2211\",\n    \"&minus;\": \"\\u2212\",\n    \"&lowast;\": \"\\u2217\",\n    \"&radic;\": \"\\u221A\",\n    \"&prop;\": \"\\u221D\",\n    \"&infin;\": \"\\u221E\",\n    \"&ang;\": \"\\u2220\",\n    \"&and;\": \"\\u2227\",\n    \"&or;\": \"\\u2228\",\n    \"&cap;\": \"\\u2229\",\n    \"&cup;\": \"\\u222A\",\n    \"&int;\": \"\\u222B\",\n    \"&there4;\": \"\\u2234\",\n    \"&sim;\": \"\\u223C\",\n    \"&cong;\": \"\\u2245\",\n    \"&asymp;\": \"\\u2248\",\n    \"&ne;\": \"\\u2260\",\n    \"&equiv;\": \"\\u2261\",\n    \"&le;\": \"\\u2264\",\n    \"&ge;\": \"\\u2265\",\n    \"&sub;\": \"\\u2282\",\n    \"&sup;\": \"\\u2283\",\n    \"&nsub;\": \"\\u2284\",\n    \"&sube;\": \"\\u2286\",\n    \"&supe;\": \"\\u2287\",\n    \"&oplus;\": \"\\u2295\",\n    \"&otimes;\": \"\\u2297\",\n    \"&perp;\": \"\\u22A5\",\n    \"&sdot;\": \"\\u22C5\",\n    \"&lceil;\": \"\\u2308\",\n    \"&rceil;\": \"\\u2309\",\n    \"&lfloor;\": \"\\u230A\",\n    \"&rfloor;\": \"\\u230B\",\n    \"&lang;\": \"\\u2329\",\n    \"&rang;\": \"\\u232A\",\n    \"&loz;\": \"\\u25CA\",\n    \"&spades;\": \"\\u2660\",\n    \"&clubs;\": \"\\u2663\",\n    \"&hearts;\": \"\\u2665\",\n    \"&diams;\": \"\\u2666\",\n};\n","export const JsonFormatterUtils = {\n    format: (\n        value: string,\n        formatValue: (value: string | number | boolean | null) => string,\n    ): string => formatJson(value, formatValue),\n};\n\nfunction formatJson(\n    value: string,\n    formatValue: (value: string | number | boolean | null) => string,\n) {\n    if (!value) {\n        return \"\";\n    }\n\n    try {\n        return JSON.stringify(parseJson(value), null, 4)\n            .replace(/\": [\\d.]+[,\\n]/g, (x) => formatNumber(x, formatValue))\n            .replace(/\": \".+\\n/g, (x) => formatString(x, formatValue))\n            .replace(/\": true/g, (x) => formatBoolean(x, formatValue))\n            .replace(/\": false/g, (x) => formatBoolean(x, formatValue))\n            .replace(/\": null/g, (x) => formatNull(x, formatValue));\n    } catch (e: any) {\n        return (e as Error).message;\n    }\n}\n\nfunction parseJson(value: string): any {\n    return JSON.parse(value.replace(/\\n/g, \"\"));\n}\n\nfunction formatNumber(value: string, formatValue: (value: number) => string): string {\n    return value.replace(/[\\d.]+/, (x) => formatValue(parseFloat(x)));\n}\n\nfunction formatString(value: string, formatValue: (value: string) => string): string {\n    return value.replace(/ \".+\"/, formatValue);\n}\n\nfunction formatBoolean(value: string, formatValue: (value: boolean) => string): string {\n    return value\n        .replace(/true/, (_) => formatValue(true))\n        .replace(/false/, (_) => formatValue(false));\n}\n\nfunction formatNull(value: string, formatValue: (value: any) => string): string {\n    return value.replace(/null/, (_) => formatValue(null));\n}\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { JsonFormatterUtils } from \"./JsonFormatterUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const JsonFormatter: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const formatValueHtml = (\n        value: string | number | boolean,\n        className: \"text-danger\" | \"text-success\",\n    ): string => {\n        return `<span class=${className}>${value}</span>`;\n    };\n\n    const formatValue = (value: string | number | boolean | null): string => {\n        if (value === null) {\n            return formatValueHtml(\"null\", \"text-danger\");\n        }\n\n        const type =\n            typeof value === \"number\" || typeof value === \"boolean\"\n                ? \"text-danger\"\n                : \"text-success\";\n        return formatValueHtml(value, type);\n    };\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({\n            ...formValue,\n            decoded: value,\n            encoded: JsonFormatterUtils.format(value, formatValue),\n        });\n    };\n\n    const formatHtml = (value: string) =>\n        value.replace(/\\n/g, \"<br/>\").replace(/\\s\\s/g, \"&nbsp;&nbsp;\");\n\n    return (\n        <>\n            <h1>Online Json Formatter</h1>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Json\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <div\n                        className=\"square border-gray rounded wordwrap px-2 py-1\"\n                        style={{ height: 385 }}\n                    >\n                        <div dangerouslySetInnerHTML={{ __html: formatHtml(formValue.encoded) }} />\n                    </div>\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","export const JsonViewerUtils = {\n    parse: (value: string): JsonObject | null => parseJsonObject(value),\n};\n\nexport type JsonValueType = \"null\" | \"value\" | \"array\" | \"object\";\n\ninterface JsonValue {\n    value: any;\n    type: JsonValueType;\n    expanded: boolean;\n}\n\ninterface JsonProperty {\n    name: string;\n    value: JsonValue;\n}\n\nexport interface JsonObject {\n    values: JsonProperty[];\n}\n\nfunction parseJsonObject(value: string): JsonObject | null {\n    if (!value) {\n        return null;\n    }\n\n    try {\n        return getObject(parseJson(value));\n    } catch (e: any) {\n        return null;\n    }\n}\n\nfunction parseJson(value: string): any {\n    return JSON.parse(value.replace(/\\n/g, \"\"));\n}\n\nfunction getObject(value: any): JsonObject {\n    return {\n        values: getProperties(value),\n    };\n}\n\nfunction getProperties(value: any): JsonProperty[] {\n    return Object.keys(value).map((key) => ({\n        name: key,\n        value: getValue(value[key]),\n    }));\n}\n\nfunction getValue(value: any): JsonValue {\n    if (value === null) {\n        return jsonValue(null, \"null\");\n    }\n    if (Array.isArray(value)) {\n        return jsonValue((value as []).map(getValue), \"array\");\n    }\n    const type = typeof value;\n    if (type === \"string\" || type === \"number\" || type === \"bigint\" || type === \"boolean\") {\n        return jsonValue(value, \"value\");\n    }\n    return jsonValue(getObject(value), \"object\");\n}\n\nfunction jsonValue(value: any, type: JsonValueType): JsonValue {\n    return {\n        value,\n        type,\n        expanded: false,\n    };\n}\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { JsonObject, JsonViewerUtils } from \"./JsonViewerUtils\";\n\ninterface FormValue {\n    decoded: string;\n    jsonObject: JsonObject | null;\n}\n\nexport const JsonViewer: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        jsonObject: null,\n    });\n\n    const onViewJson = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, jsonObject: JsonViewerUtils.parse(value) });\n    };\n\n    console.log(formValue.jsonObject);\n    return (\n        <>\n            <h1>Online Json Viewer</h1>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Json\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onViewJson}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <div\n                        className=\"square border-gray rounded wordwrap px-2 py-1\"\n                        style={{ height: 385 }}\n                    ></div>\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","interface Props {\n    amount: number;\n    term: number;\n    rate: number;\n}\n\nexport interface Result {\n    amount: number;\n    term: number;\n    rate: number;\n    monthlyPayment: number;\n    months: ResultRow[];\n    total: ResultRow;\n}\n\nexport interface ResultRow {\n    index: number;\n    date: Date;\n    payment: number;\n    principal: number;\n    interest: number;\n    balance: number;\n}\n\nexport const LoanCalculatorUtils = {\n    calculate: (props: Props): Result | null => calculate(props),\n};\n\nfunction calculate(props: Props): Result | null {\n    if (!props.amount || !props.term || !props.rate) {\n        return null;\n    }\n\n    const monthlyRate = props.rate / 12 / 100;\n    const monthlyPayment =\n        props.amount * (monthlyRate + monthlyRate / (Math.pow(1 + monthlyRate, props.term) - 1));\n    const months = calculateMonths(monthlyRate, props.amount, props.term, monthlyPayment);\n    const total = calculateTotal(months);\n\n    return {\n        amount: props.amount,\n        term: props.term,\n        rate: props.rate,\n        monthlyPayment,\n        months,\n        total,\n    };\n}\n\nfunction calculateMonths(\n    monthlyRate: number,\n    amount: number,\n    term: number,\n    monthlyPayment: number,\n): ResultRow[] {\n    const month: ResultRow[] = [];\n    let balance = amount;\n\n    for (let i = 1; i <= term; i++) {\n        const now = new Date();\n        const date = new Date(now.setMonth(now.getMonth() + i));\n        const interest = balance * monthlyRate;\n        const principal = balance > monthlyPayment - interest ? monthlyPayment - interest : balance;\n        const payment = principal + interest;\n        balance -= principal;\n\n        month.push({\n            index: i,\n            date,\n            payment,\n            principal,\n            interest,\n            balance,\n        });\n    }\n\n    return month;\n}\n\nfunction calculateTotal(months: ResultRow[]): ResultRow {\n    return months.reduce((current, next) => ({\n        ...current,\n        payment: current.payment + next.payment,\n        principal: current.principal + next.principal,\n        interest: current.interest + next.interest,\n    }));\n}\n","import {\n    MDBCol,\n    MDBDropdown,\n    MDBDropdownItem,\n    MDBDropdownLink,\n    MDBDropdownMenu,\n    MDBDropdownToggle,\n    MDBInputGroup,\n    MDBInputGroupElement,\n    MDBInputGroupText,\n    MDBRow,\n    MDBTable,\n    MDBTableBody,\n    MDBTableHead,\n} from \"mdb-react-ui-kit\";\nimport { memo, useEffect, useState } from \"react\";\nimport { LoanCalculatorUtils, Result, ResultRow } from \"./LoanCalculatorUtils\";\n\ninterface FormValue {\n    amount: number;\n    term: number;\n    rate: number;\n    result: Result | null;\n}\n\nlet timeout = 0;\n\nexport const LoanCalculator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        amount: 5000,\n        term: 60,\n        rate: 4.5,\n        result: null,\n    });\n\n    // eslint-disable-next-line\n    useEffect(() => calculate(formValue), []);\n\n    const executeAsync = (action: () => void) => {\n        if (timeout) {\n            window.clearTimeout(timeout);\n        }\n        timeout = window.setTimeout(action, 1000);\n    };\n\n    const calculate = (formValue: FormValue) => {\n        const result = LoanCalculatorUtils.calculate({ ...formValue });\n        setFormValue({ ...formValue, result });\n    };\n\n    const onChange = (name: string, value: any) => {\n        const newFormValue = { ...formValue, [name]: value };\n        setFormValue({ ...newFormValue });\n        executeAsync(() => calculate(newFormValue));\n    };\n\n    return (\n        <>\n            <h1>Loan Calculator</h1>\n            <MDBRow>\n                <MDBCol md=\"6\">\n                    <LoanCalculatorFrom\n                        amount={formValue.amount}\n                        term={formValue.term}\n                        rate={formValue.rate}\n                        onChange={onChange}\n                    />\n                </MDBCol>\n                {formValue.result && (\n                    <MDBCol md=\"6\">\n                        <LoanCalculatorSummary result={formValue.result} />\n                    </MDBCol>\n                )}\n            </MDBRow>\n            {formValue.result && (\n                <MDBRow>\n                    <MDBCol md=\"12\">\n                        <LoanCalculatorTable result={formValue.result} />\n                    </MDBCol>\n                </MDBRow>\n            )}\n        </>\n    );\n};\n\ninterface LoanCalculatorFromProps {\n    amount: number;\n    term: number;\n    rate: number;\n    onChange: (name: string, value: number) => void;\n}\n\nconst LoanCalculatorFrom: React.FC<LoanCalculatorFromProps> = (props: LoanCalculatorFromProps) => {\n    return (\n        <>\n            <MDBCol md=\"12\" className=\"mb-3\">\n                <label htmlFor=\"amount\" className=\"form-label\">\n                    Loan amount\n                </label>\n                <MDBInputGroup>\n                    <NumberEdit value={props.amount} name=\"amount\" onChange={props.onChange} />\n                </MDBInputGroup>\n            </MDBCol>\n\n            <MDBCol md=\"12\" className=\"mb-3\">\n                <LoanCalculatorFromTerm name=\"term\" value={props.term} onChange={props.onChange} />\n            </MDBCol>\n\n            <MDBCol md=\"12\" className=\"mb-3\">\n                <label htmlFor=\"amount\" className=\"form-label\">\n                    Interest rate per year\n                </label>\n                <MDBInputGroup>\n                    <NumberEdit value={props.rate} name=\"rate\" onChange={props.onChange} />\n                    <MDBInputGroupText>%</MDBInputGroupText>\n                </MDBInputGroup>\n            </MDBCol>\n        </>\n    );\n};\n\ninterface LoanCalculatorFromTermProps {\n    name: string;\n    value: number;\n    onChange: (name: string, value: number) => void;\n}\n\ninterface LoanCalculatorFromTermValue {\n    term: number;\n    termPeriod: string;\n}\n\nconst LoanCalculatorFromTerm: React.FC<LoanCalculatorFromTermProps> = (\n    props: LoanCalculatorFromTermProps,\n) => {\n    const [formValue, setFormValue] = useState<LoanCalculatorFromTermValue>({\n        term: props.value / 12,\n        termPeriod: \"years\",\n    });\n\n    const calculateAndSendChange = (term: number, termPeriod: string) => {\n        const value = termPeriod === \"years\" ? term * 12 : term;\n        props.onChange(props.name, value);\n    };\n\n    const onChange = (name: string, value: any) => {\n        const newFormValue = { ...formValue, [name]: value };\n        setFormValue({ ...newFormValue });\n        calculateAndSendChange(newFormValue.term, newFormValue.termPeriod);\n    };\n\n    return (\n        <>\n            <label htmlFor=\"term\" className=\"form-label\">\n                Loan term\n            </label>\n            <MDBInputGroup>\n                <NumberEdit value={formValue.term} name=\"term\" onChange={onChange} />\n                <LoanCalculatorFromDropDown\n                    name=\"termPeriod\"\n                    values={[\"years\", \"months\"]}\n                    className=\"group-drop-down-right\"\n                    onChange={onChange}\n                />\n            </MDBInputGroup>\n        </>\n    );\n};\n\ninterface DropDownValue {\n    value: string;\n}\n\ninterface LoanCalculatorFromDropDownParams {\n    name: string;\n    values: string[];\n    className?: string;\n    onChange: (name: string, value: any) => void;\n}\n\nconst LoanCalculatorFromDropDown: React.FC<LoanCalculatorFromDropDownParams> = (\n    props: LoanCalculatorFromDropDownParams,\n) => {\n    const [formValue, setFormValue] = useState<DropDownValue>({\n        value: props.values[0],\n    });\n\n    const onChange = (value: string) => {\n        setFormValue({ ...formValue, value });\n        props.onChange(props.name, value);\n    };\n\n    return (\n        <MDBDropdown>\n            <MDBDropdownToggle className={props.className}>{formValue.value}</MDBDropdownToggle>\n            <MDBDropdownMenu>\n                <MDBDropdownItem>\n                    <MDBDropdownLink\n                        tag=\"button\"\n                        type=\"button\"\n                        className=\"bg-light p-0 m-0\"\n                    ></MDBDropdownLink>\n                </MDBDropdownItem>\n                {props.values.map((x) => (\n                    <MDBDropdownItem key={x}>\n                        <MDBDropdownLink\n                            tag=\"button\"\n                            type=\"button\"\n                            onClick={() => onChange(x)}\n                            className={formValue.value === x ? \"active\" : \"\"}\n                            aria-current={formValue.value === x ? \"true\" : \"\"}\n                        >\n                            {x}\n                        </MDBDropdownLink>\n                    </MDBDropdownItem>\n                ))}\n            </MDBDropdownMenu>\n        </MDBDropdown>\n    );\n};\n\ninterface LoanCalculatorTableValue {\n    maxCount: number;\n}\n\ninterface LoanCalculatorTableParams {\n    result: Result;\n}\n\nconst maxCountStep = 300;\n\nconst LoanCalculatorTable: React.FC<LoanCalculatorTableParams> = (\n    props: LoanCalculatorTableParams,\n) => {\n    const [formValue, setFormValue] = useState<LoanCalculatorTableValue>({\n        maxCount: maxCountStep,\n    });\n\n    useEffect(() => {\n        window.setTimeout(() => {\n            if (props.result.months.length > formValue.maxCount) {\n                setFormValue({ ...formValue, maxCount: formValue.maxCount + maxCountStep });\n            }\n        }, 1000);\n        // eslint-disable-next-line\n    }, [formValue]);\n\n    useEffect(() => {\n        setFormValue({ ...formValue, maxCount: maxCountStep });\n        // eslint-disable-next-line\n    }, [props.result]);\n\n    return (\n        <MDBTable small hover>\n            <MDBTableHead>\n                <tr>\n                    <th scope=\"col\"></th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Payment</th>\n                    <th scope=\"col\">Principal</th>\n                    <th scope=\"col\">Interest</th>\n                    <th scope=\"col\">Balance</th>\n                </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n                <tr>\n                    <td></td>\n                    <td>\n                        <DateView value={new Date()} />\n                    </td>\n                    <td>&ndash;</td>\n                    <td>&ndash;</td>\n                    <td>&ndash;</td>\n                    <td>\n                        <NumberView value={props.result.amount} />\n                    </td>\n                </tr>\n                {props.result.months.slice(0, formValue.maxCount).map((x) => (\n                    <LoanCalculatorTableRowMemo key={x.date.toString()} {...x} />\n                ))}\n                {props.result.months.length <= formValue.maxCount && (\n                    <tr className=\"table-success\">\n                        <td></td>\n                        <td></td>\n                        <th>\n                            <NumberView value={props.result.total.payment} />\n                        </th>\n                        <th>\n                            <NumberView value={props.result.total.principal} />\n                        </th>\n                        <th>\n                            <NumberView value={props.result.total.interest} />\n                        </th>\n                        <td></td>\n                    </tr>\n                )}\n            </MDBTableBody>\n        </MDBTable>\n    );\n};\n\nconst LoanCalculatorTableRow: React.FC<ResultRow> = (x: ResultRow) => {\n    return (\n        <tr>\n            <th>{x.index}</th>\n            <td>\n                <DateView value={x.date} />\n            </td>\n            <td>\n                <NumberView value={x.payment} />\n            </td>\n            <td>\n                <NumberView value={x.principal} />\n            </td>\n            <td>\n                <NumberView value={x.interest} />\n            </td>\n            <td>\n                <NumberView value={x.balance} />\n            </td>\n        </tr>\n    );\n};\n\nconst LoanCalculatorTableRowMemo = memo(LoanCalculatorTableRow);\n\ninterface LoanCalculatorSummaryParams {\n    result: Result;\n}\n\nconst LoanCalculatorSummary: React.FC<LoanCalculatorSummaryParams> = (\n    props: LoanCalculatorSummaryParams,\n) => {\n    return (\n        <MDBTable small>\n            <MDBTableBody>\n                <tr>\n                    <td className=\"h6\">Monthly Payments</td>\n                    <td className=\"h6\">\n                        <NumberView value={props.result.monthlyPayment} />\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"h6\">Total Principal Paid</td>\n                    <td className=\"h6\">\n                        <NumberView value={props.result.total.principal} />\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"h6\">Total Interest Paid</td>\n                    <td className=\"h6\">\n                        <NumberView value={props.result.total.interest} />\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"h6\">Total Payments</td>\n                    <td className=\"h6\">\n                        <NumberView value={props.result.total.payment} />\n                    </td>\n                </tr>\n            </MDBTableBody>\n        </MDBTable>\n    );\n};\n\ninterface ViewParams<T> {\n    value: T;\n}\n\nconst NumberView: React.FC<ViewParams<number>> = (props: ViewParams<number>) => {\n    const options: Intl.NumberFormatOptions = {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    };\n    return <>{new Intl.NumberFormat(undefined, options).format(props.value)}</>;\n};\n\nconst DateView: React.FC<ViewParams<Date>> = (props: ViewParams<Date>) => {\n    const dateOptions: Intl.DateTimeFormatOptions = {\n        dateStyle: \"long\",\n    };\n\n    const parts = new Intl.DateTimeFormat(\"en-us\", dateOptions).formatToParts(props.value);\n    const month = parts.find((x) => x.type === \"month\")?.value;\n    const year = parts.find((x) => x.type === \"year\")?.value;\n\n    return (\n        <>\n            {month} {year}\n        </>\n    );\n};\n\ninterface EditParams<T> {\n    name: string;\n    value: T;\n    onChange: (name: string, value: T) => void;\n}\n\ninterface EditValue {\n    value: string;\n}\n\nconst NumberEdit: React.FC<EditParams<number>> = (props: EditParams<number>) => {\n    const [formValue, setFormValue] = useState<EditValue>({\n        value: props.value.toString(),\n    });\n\n    const onChange = (e: any) => {\n        const value = e.currentTarget.value as string;\n        setFormValue({ ...formValue, value });\n        props.onChange(props.name, parseFloat(value.replace(\",\", \".\")));\n    };\n\n    return (\n        <MDBInputGroupElement\n            type=\"text\"\n            value={formValue.value}\n            name={props.name}\n            id={props.name}\n            onChange={onChange}\n        />\n    );\n};\n","export const Sha1GeneratorUtils = {\n    encode: (value: string): string => encodeSha1(value),\n};\n\nfunction encodeSha1(value: string): string {\n    let blockstart;\n    let i, j;\n    let W = new Array(80);\n    let H0 = 0x67452301;\n    let H1 = 0xefcdab89;\n    let H2 = 0x98badcfe;\n    let H3 = 0x10325476;\n    let H4 = 0xc3d2e1f0;\n    let A, B, C, D, E;\n    let temp;\n\n    value = utf8Encode(value);\n\n    const valueLength = value.length;\n\n    const words: number[] = [];\n    for (i = 0; i < valueLength - 3; i += 4) {\n        j =\n            (value.charCodeAt(i) << 24) |\n            (value.charCodeAt(i + 1) << 16) |\n            (value.charCodeAt(i + 2) << 8) |\n            value.charCodeAt(i + 3);\n        words.push(j);\n    }\n\n    switch (valueLength % 4) {\n        case 0:\n            i = 0x080000000;\n            break;\n        case 1:\n            i = (value.charCodeAt(valueLength - 1) << 24) | 0x0800000;\n            break;\n\n        case 2:\n            i =\n                (value.charCodeAt(valueLength - 2) << 24) |\n                (value.charCodeAt(valueLength - 1) << 16) |\n                0x08000;\n            break;\n\n        case 3:\n            i =\n                (value.charCodeAt(valueLength - 3) << 24) |\n                (value.charCodeAt(valueLength - 2) << 16) |\n                (value.charCodeAt(valueLength - 1) << 8) |\n                0x80;\n            break;\n    }\n\n    words.push(i);\n\n    while (words.length % 16 !== 14) words.push(0);\n\n    words.push(valueLength >>> 29);\n    words.push((valueLength << 3) & 0x0ffffffff);\n\n    for (blockstart = 0; blockstart < words.length; blockstart += 16) {\n        for (i = 0; i < 16; i++) W[i] = words[blockstart + i];\n        for (i = 16; i <= 79; i++)\n            W[i] = rotateLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n        A = H0;\n        B = H1;\n        C = H2;\n        D = H3;\n        E = H4;\n\n        for (i = 0; i <= 19; i++) {\n            temp = (rotateLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5a827999) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = temp;\n        }\n\n        for (i = 20; i <= 39; i++) {\n            temp = (rotateLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ed9eba1) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = temp;\n        }\n\n        for (i = 40; i <= 59; i++) {\n            temp =\n                (rotateLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8f1bbcdc) &\n                0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = temp;\n        }\n\n        for (i = 60; i <= 79; i++) {\n            temp = (rotateLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xca62c1d6) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = temp;\n        }\n\n        H0 = (H0 + A) & 0x0ffffffff;\n        H1 = (H1 + B) & 0x0ffffffff;\n        H2 = (H2 + C) & 0x0ffffffff;\n        H3 = (H3 + D) & 0x0ffffffff;\n        H4 = (H4 + E) & 0x0ffffffff;\n    }\n\n    return convertHex(H0) + convertHex(H1) + convertHex(H2) + convertHex(H3) + convertHex(H4);\n}\n\nfunction rotateLeft(n: number, s: number): number {\n    return (n << s) | (n >>> (32 - s));\n}\n\nfunction convertHex(value: number): string {\n    let str = \"\";\n    let i;\n    let v;\n\n    for (i = 7; i >= 0; i--) {\n        v = (value >>> (i * 4)) & 0x0f;\n        str += v.toString(16);\n    }\n    return str;\n}\n\nfunction utf8Encode(value: string) {\n    value = value.replace(/\\r\\n/g, \"\\n\");\n    let utftext = \"\";\n\n    for (let n = 0; n < value.length; n++) {\n        const c = value.charCodeAt(n);\n\n        if (c < 128) {\n            utftext += String.fromCharCode(c);\n        } else if (c > 127 && c < 2048) {\n            utftext += String.fromCharCode((c >> 6) | 192);\n            utftext += String.fromCharCode((c & 63) | 128);\n        } else {\n            utftext += String.fromCharCode((c >> 12) | 224);\n            utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n            utftext += String.fromCharCode((c & 63) | 128);\n        }\n    }\n\n    return utftext;\n}\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { Sha1GeneratorUtils } from \"./Sha1GeneratorUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const Sha1Generator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: Sha1GeneratorUtils.encode(value) });\n    };\n\n    return (\n        <>\n            <h1>Online SHA1 Generator</h1>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"SHA1\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","export const Sha256GeneratorUtils = {\n    encode: (value: string): string => encodeSha256(value),\n};\n\nconst hexcase = 0;\nconst charSize = 8;\n\nfunction encodeSha256(value: string): string {\n    value = utf8Encode(value);\n    return binb2hex(coreSha256(str2binb(value), value.length * charSize));\n}\n\nfunction safeAdd(x: number, y: number): number {\n    var lsw = (x & 0xffff) + (y & 0xffff);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xffff);\n}\n\nfunction S(X: number, n: number): number {\n    return (X >>> n) | (X << (32 - n));\n}\nfunction R(X: number, n: number): number {\n    return X >>> n;\n}\nfunction Ch(x: number, y: number, z: number): number {\n    return (x & y) ^ (~x & z);\n}\nfunction Maj(x: number, y: number, z: number): number {\n    return (x & y) ^ (x & z) ^ (y & z);\n}\nfunction Sigma0256(x: number): number {\n    return S(x, 2) ^ S(x, 13) ^ S(x, 22);\n}\nfunction Sigma1256(x: number): number {\n    return S(x, 6) ^ S(x, 11) ^ S(x, 25);\n}\nfunction Gamma0256(x: number): number {\n    return S(x, 7) ^ S(x, 18) ^ R(x, 3);\n}\nfunction Gamma1256(x: number): number {\n    return S(x, 17) ^ S(x, 19) ^ R(x, 10);\n}\n\nfunction coreSha256(array: number[], length: number): number[] {\n    let K: number[] = [\n        0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4,\n        0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe,\n        0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f,\n        0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n        0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n        0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n        0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n        0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n        0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7,\n        0xc67178f2,\n    ];\n    let HASH: number[] = [\n        0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab,\n        0x5be0cd19,\n    ];\n    let W: number[] = new Array(64);\n    let a, b, c, d, e, f, g, h;\n    let T1, T2;\n\n    array[length >> 5] |= 0x80 << (24 - (length % 32));\n    array[(((length + 64) >> 9) << 4) + 15] = length;\n\n    for (let i = 0; i < array.length; i += 16) {\n        a = HASH[0];\n        b = HASH[1];\n        c = HASH[2];\n        d = HASH[3];\n        e = HASH[4];\n        f = HASH[5];\n        g = HASH[6];\n        h = HASH[7];\n\n        for (let j = 0; j < 64; j++) {\n            if (j < 16) W[j] = array[j + i];\n            else\n                W[j] = safeAdd(\n                    safeAdd(safeAdd(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])),\n                    W[j - 16],\n                );\n\n            T1 = safeAdd(safeAdd(safeAdd(safeAdd(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\n            T2 = safeAdd(Sigma0256(a), Maj(a, b, c));\n\n            h = g;\n            g = f;\n            f = e;\n            e = safeAdd(d, T1);\n            d = c;\n            c = b;\n            b = a;\n            a = safeAdd(T1, T2);\n        }\n\n        HASH[0] = safeAdd(a, HASH[0]);\n        HASH[1] = safeAdd(b, HASH[1]);\n        HASH[2] = safeAdd(c, HASH[2]);\n        HASH[3] = safeAdd(d, HASH[3]);\n        HASH[4] = safeAdd(e, HASH[4]);\n        HASH[5] = safeAdd(f, HASH[5]);\n        HASH[6] = safeAdd(g, HASH[6]);\n        HASH[7] = safeAdd(h, HASH[7]);\n    }\n    return HASH;\n}\n\nfunction str2binb(value: string): number[] {\n    const bin: number[] = [];\n    const mask = (1 << charSize) - 1;\n    for (let i = 0; i < value.length * charSize; i += charSize) {\n        bin[i >> 5] |= (value.charCodeAt(i / charSize) & mask) << (24 - (i % 32));\n    }\n    return bin;\n}\n\nfunction utf8Encode(value: string): string {\n    value = value.replace(/\\r\\n/g, \"\\n\");\n    let utftext = \"\";\n\n    for (let n = 0; n < value.length; n++) {\n        const c = value.charCodeAt(n);\n\n        if (c < 128) {\n            utftext += String.fromCharCode(c);\n        } else if (c > 127 && c < 2048) {\n            utftext += String.fromCharCode((c >> 6) | 192);\n            utftext += String.fromCharCode((c & 63) | 128);\n        } else {\n            utftext += String.fromCharCode((c >> 12) | 224);\n            utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n            utftext += String.fromCharCode((c & 63) | 128);\n        }\n    }\n\n    return utftext;\n}\n\nfunction binb2hex(binarray: number[]): string {\n    const hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n    let str = \"\";\n    for (var i = 0; i < binarray.length * 4; i++) {\n        str +=\n            hex_tab.charAt((binarray[i >> 2] >> ((3 - (i % 4)) * 8 + 4)) & 0xf) +\n            hex_tab.charAt((binarray[i >> 2] >> ((3 - (i % 4)) * 8)) & 0xf);\n    }\n    return str;\n}\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { Sha256GeneratorUtils } from \"./Sha256GeneratorUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const Sha256Generator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: Sha256GeneratorUtils.encode(value) });\n    };\n\n    return (\n        <>\n            <h1>Online SHA256 Generator</h1>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"SHA256\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","export const TextDifferencesUtils = {\n    findDifferences: (before: string, after: string): string => {\n        if (!before || !after) {\n            return \"\";\n        }\n        if (before === after) {\n            return before;\n        }\n        return new TextDifferencer().findDifferencesBetweenStrings(before, after).toString();\n    },\n};\n\nfunction insertElementAt<T>(array: T[], element: T, index: number): void {\n    array.splice(index, 0, element);\n}\n\nfunction insertElementsAt<T>(array: T[], elements: T[], index: number) {\n    for (let i = 0; i < elements.length; i++) {\n        array.splice(index + i, 0, elements[i]);\n    }\n}\n\nfunction removeAt<T>(array: T[], index: number) {\n    array.splice(index, 1);\n}\n\nclass TextDifferencer {\n    public findDifferencesBetweenStrings(string0: string, string1: string): TextDifferences {\n        let lengthOfShorterString: number =\n            string0.length <= string1.length ? string0.length : string1.length;\n\n        let numberOfExtremes = 2;\n        let passagePairsMatchingAtExtremes: TextPassagePair[] = [];\n\n        for (let e = 0; e < numberOfExtremes; e++) {\n            let lengthOfMatchingSubstring = 0;\n\n            for (let i = 0; i < lengthOfShorterString; i++) {\n                let offsetForString0 = e === 0 ? i : string0.length - i - 1;\n                let offsetForString1 = e === 0 ? i : string1.length - i - 1;\n\n                let charFromString0 = string0[offsetForString0];\n                let charFromString1 = string1[offsetForString1];\n\n                if (charFromString0 !== charFromString1) {\n                    lengthOfMatchingSubstring = i;\n                    break;\n                }\n            }\n\n            let matchingSubstringAtExtreme: string;\n\n            if (e === 0) {\n                matchingSubstringAtExtreme = string0.substr(0, lengthOfMatchingSubstring);\n                string0 = string0.substr(lengthOfMatchingSubstring);\n                string1 = string1.substr(lengthOfMatchingSubstring);\n            } // if (e === 1)\n            else {\n                matchingSubstringAtExtreme = string0.substr(\n                    string0.length - lengthOfMatchingSubstring,\n                );\n                string0 = string0.substr(0, string0.length - lengthOfMatchingSubstring);\n                string1 = string1.substr(0, string1.length - lengthOfMatchingSubstring);\n            }\n\n            let passagePairMatchingAtExtreme = new TextPassagePair(\n                true, // doPassagesMatch\n                [\n                    new TextPassage(matchingSubstringAtExtreme),\n                    new TextPassage(matchingSubstringAtExtreme),\n                ],\n            );\n\n            passagePairsMatchingAtExtremes.push(passagePairMatchingAtExtreme);\n        }\n\n        let passagePairsAll: TextPassagePair[] = [];\n\n        var passagePairsMatching = this.findPassagePairsMatchingBetweenStrings(\n            string0,\n            string1,\n            [0, 0],\n        );\n\n        this.insertPassagePairsDifferentBetweenMatching(\n            string0,\n            string1,\n            passagePairsMatching,\n            passagePairsAll,\n        );\n\n        for (var e = 0; e < passagePairsMatchingAtExtremes.length; e++) {\n            var passagePairMatchingAtExtreme = passagePairsMatchingAtExtremes[e];\n            insertElementAt(\n                passagePairsAll,\n                passagePairMatchingAtExtreme,\n                e === 0 ? 0 : passagePairsAll.length,\n            );\n        }\n\n        var returnValue = new TextDifferences(passagePairsAll);\n\n        return returnValue;\n    }\n\n    private findPassagePairsMatchingBetweenStrings(\n        string0: string,\n        string1: string,\n        positionOffsets: number[],\n    ): TextPassagePair[] {\n        var passagePairsMatching: TextPassagePair[] = [];\n\n        var longestCommonPassagePair = this.findLongestCommonPassagePair(string0, string1);\n\n        var longestCommonPassageText = longestCommonPassagePair.passages[0].text;\n        var lengthOfCommonPassage = longestCommonPassageText.length;\n\n        if (lengthOfCommonPassage === 0) {\n            return passagePairsMatching;\n        }\n\n        passagePairsMatching.push(longestCommonPassagePair);\n\n        var passages = longestCommonPassagePair.passages;\n        var passage0 = passages[0];\n        var passage1 = passages[1];\n\n        var passagePairsMatchingBeforeCommon = this.findPassagePairsMatchingBetweenStrings(\n            string0.substr(0, passage0.position),\n            string1.substr(0, passage1.position),\n            [positionOffsets[0], positionOffsets[1]],\n        );\n\n        var passagePairsMatchingAfterCommon = this.findPassagePairsMatchingBetweenStrings(\n            string0.substr(passage0.position + lengthOfCommonPassage),\n            string1.substr(passage1.position + lengthOfCommonPassage),\n            [\n                positionOffsets[0] + passage0.position + lengthOfCommonPassage,\n\n                positionOffsets[1] + passage1.position + lengthOfCommonPassage,\n            ],\n        );\n\n        var passagePairSetsMatchingBeforeAndAfter = [\n            passagePairsMatchingBeforeCommon,\n            passagePairsMatchingAfterCommon,\n        ];\n\n        for (var i = 0; i < passagePairSetsMatchingBeforeAndAfter.length; i++) {\n            var passagePairsToInsert = passagePairSetsMatchingBeforeAndAfter[i];\n            insertElementsAt(\n                passagePairsMatching,\n                passagePairsToInsert,\n                i === 0 ? 0 : passagePairsMatching.length,\n            );\n        }\n\n        for (i = 0; i < longestCommonPassagePair.passages.length; i++) {\n            var passage = longestCommonPassagePair.passages[i];\n            passage.position += positionOffsets[i];\n        }\n\n        return passagePairsMatching;\n    }\n\n    private findLongestCommonPassagePair(string0: string, string1: string): TextPassagePair {\n        var passage0 = new TextPassage(\"\", 0);\n        var passage1 = new TextPassage(\"\", 0);\n\n        var returnValue = new TextPassagePair(\n            true, // doPassagesMatch\n            [passage0, passage1],\n        );\n\n        var lengthOfString0 = string0.length;\n        var lengthOfString1 = string1.length;\n\n        var substringLengthsForRow: number[] = [];\n        var substringLengthsForRowPrev: number[] = [];\n\n        var lengthOfLongestCommonSubstringSoFar = 0;\n\n        // Build a table whose y-axis is chars from string0,\n        // and whose x-axis is chars from string1.\n        // Put length of the longest substring in each cell.\n\n        for (var i = 0; i < lengthOfString0; i++) {\n            substringLengthsForRowPrev = substringLengthsForRow;\n            substringLengthsForRow = [];\n\n            for (var j = 0; j < lengthOfString1; j++) {\n                if (string0[i] !== string1[j]) {\n                    substringLengthsForRow[j] = 0;\n                } else {\n                    var cellValue;\n\n                    if (i === 0 || j === 0) {\n                        // first row or column\n                        cellValue = 1;\n                    } else {\n                        // Copy cell to upper left, add 1.\n                        cellValue = substringLengthsForRowPrev[j - 1] + 1;\n                    }\n\n                    substringLengthsForRow[j] = cellValue;\n\n                    if (cellValue > lengthOfLongestCommonSubstringSoFar) {\n                        lengthOfLongestCommonSubstringSoFar = cellValue;\n                        var startIndex = i - lengthOfLongestCommonSubstringSoFar + 1;\n                        var longestCommonSubstringSoFar = string0.substring(\n                            // not \"substr\"!\n                            startIndex,\n                            i + 1,\n                        );\n\n                        passage0.text = longestCommonSubstringSoFar;\n                        passage0.position = startIndex;\n\n                        passage1.text = longestCommonSubstringSoFar;\n                        passage1.position = j - lengthOfLongestCommonSubstringSoFar + 1;\n                    }\n                }\n            }\n        }\n\n        return returnValue;\n    }\n\n    private insertPassagePairsDifferentBetweenMatching(\n        string0: string,\n        string1: string,\n        passagePairsToInsertBetween: TextPassagePair[],\n        passagePairsAll: TextPassagePair[],\n    ) {\n        insertElementAt(\n            passagePairsToInsertBetween,\n            new TextPassagePair(\n                true, // doPassagesMatch\n                [new TextPassage(\"\", 0), new TextPassage(\"\", 0)],\n            ),\n            0,\n        );\n\n        passagePairsToInsertBetween.push(\n            new TextPassagePair(\n                true, // doPassagesMatch\n                [new TextPassage(\"\", string0.length), new TextPassage(\"\", string1.length)],\n            ),\n        );\n\n        var pMax = passagePairsToInsertBetween.length - 1;\n\n        for (var p = 0; p < pMax; p++) {\n            let passagePairToInsertAfter = passagePairsToInsertBetween[p];\n            let passagePairToInsertBefore = passagePairsToInsertBetween[p + 1];\n\n            this.buildAndInsertPassagePairBetweenExisting(\n                string0,\n                string1,\n                passagePairToInsertBefore,\n                passagePairToInsertAfter,\n                passagePairsAll,\n            );\n\n            passagePairsAll.push(passagePairToInsertBefore);\n        }\n\n        var indexOfPassagePairFinal = passagePairsAll.length - 1;\n\n        var passagePairFinal = passagePairsAll[indexOfPassagePairFinal];\n\n        if (\n            passagePairFinal.doPassagesMatch === true &&\n            passagePairFinal.passages[0].text.length === 0\n        ) {\n            removeAt(passagePairsAll, indexOfPassagePairFinal);\n        }\n    }\n\n    private buildAndInsertPassagePairBetweenExisting(\n        string0: string,\n        string1: string,\n        passagePairToInsertBefore: TextPassagePair,\n        passagePairToInsertAfter: TextPassagePair,\n        passagePairsAll: TextPassagePair[],\n    ) {\n        var lengthOfPassageToInsertAfter = passagePairToInsertAfter.passages[0].text.length;\n\n        var positionsForPassagePairDifferent = [\n            [\n                passagePairToInsertAfter.passages[0].position + lengthOfPassageToInsertAfter,\n\n                passagePairToInsertAfter.passages[1].position + lengthOfPassageToInsertAfter,\n            ],\n            [\n                passagePairToInsertBefore.passages[0].position,\n                passagePairToInsertBefore.passages[1].position,\n            ],\n        ];\n\n        var passageToInsert0 = new TextPassage(\n            string0.substring(\n                // not \"substr\"!\n                positionsForPassagePairDifferent[0][0],\n                positionsForPassagePairDifferent[1][0],\n            ),\n            positionsForPassagePairDifferent[0][0],\n        );\n\n        var passageToInsert1 = new TextPassage(\n            string1.substring(\n                // not \"substr\"!\n                positionsForPassagePairDifferent[0][1],\n                positionsForPassagePairDifferent[1][1],\n            ),\n            positionsForPassagePairDifferent[0][1],\n        );\n\n        var passagePairToInsert = new TextPassagePair(\n            false, // doPassagesMatch\n            [passageToInsert0, passageToInsert1],\n        );\n\n        if (\n            passagePairToInsert.passages[0].text.length > 0 ||\n            passagePairToInsert.passages[1].text.length > 0\n        ) {\n            passagePairsAll.push(passagePairToInsert);\n        }\n    }\n}\n\nclass TextDifferences {\n    constructor(passagePairs: any) {\n        this.passagePairs = passagePairs;\n    }\n\n    public passagePairs: any;\n\n    // instance methods\n\n    public toString() {\n        var returnValue = \"\";\n\n        for (var p = 0; p < this.passagePairs.length; p++) {\n            var passagePair = this.passagePairs[p];\n            var passagePairAsString = passagePair.toString();\n\n            returnValue += passagePairAsString;\n        }\n\n        return returnValue;\n    }\n}\n\nclass TextPassage {\n    constructor(text: string, position: number = 0) {\n        this.text = text;\n        this.position = position;\n    }\n\n    public text: string;\n    public position: number;\n}\n\nclass TextPassagePair {\n    constructor(doPassagesMatch: any, passages: any) {\n        this.doPassagesMatch = doPassagesMatch;\n        this.passages = passages;\n    }\n\n    public doPassagesMatch: any;\n    public passages: any;\n\n    public toString() {\n        var returnValue = \"\";\n\n        if (this.doPassagesMatch === true) {\n            returnValue = this.passages[0].text;\n            returnValue = this.escapeStringForHTML(returnValue);\n        } else {\n            returnValue += \"<mark class='bg-danger px-0'>\";\n            returnValue += this.escapeStringForHTML(this.passages[0].text);\n            returnValue += \"</mark><mark class='bg-success px-0'>\";\n            returnValue += this.escapeStringForHTML(this.passages[1].text);\n            returnValue += \"</mark>\";\n        }\n\n        return returnValue;\n    }\n\n    public escapeStringForHTML(stringToEscape: string) {\n        var returnValue = stringToEscape\n            .replace(\"&\", \"&amp;\")\n            .replace(\"<\", \"&lt;\")\n            .replace(\">\", \"&gt;\")\n            .replace(\"\\n\", \"<br />\");\n\n        return returnValue;\n    }\n}\n","export const TranslitFromRussianToEnglishUtils = {\n    encode: (value: string): string => translit(value),\n};\n\nfunction translit(value: string): string {\n    let result: string = \"\";\n\n    for (let i = 0; i < value.length; i++) {\n        const char = value.charAt(i);\n        const translitChar = translitChars[char];\n        result += translitChar !== undefined ? translitChar : char;\n    }\n\n    return result;\n}\n\nconst translitChars: any = {\n    а: \"a\",\n    б: \"b\",\n    в: \"v\",\n    г: \"g\",\n    д: \"d\",\n    е: \"e\",\n    ё: \"jo\",\n    ж: \"zh\",\n    з: \"z\",\n    и: \"i\",\n    й: \"j\",\n    к: \"k\",\n    л: \"l\",\n    м: \"m\",\n    н: \"n\",\n    о: \"o\",\n    п: \"p\",\n    р: \"r\",\n    с: \"s\",\n    т: \"t\",\n    у: \"u\",\n    ф: \"f\",\n    х: \"h\",\n    ц: \"c\",\n    ч: \"ch\",\n    ш: \"sh\",\n    щ: \"shh\",\n    ъ: \"\",\n    ы: \"y\",\n    ь: \"\",\n    э: \"je\",\n    ю: \"yu\",\n    я: \"ya\",\n\n    А: \"A\",\n    Б: \"B\",\n    В: \"V\",\n    Г: \"G\",\n    Д: \"D\",\n    Е: \"E\",\n    Ё: \"Jo\",\n    Ж: \"Zh\",\n    З: \"Z\",\n    И: \"I\",\n    Й: \"J\",\n    К: \"K\",\n    Л: \"L\",\n    М: \"M\",\n    Н: \"N\",\n    О: \"O\",\n    П: \"P\",\n    Р: \"R\",\n    С: \"S\",\n    Т: \"T\",\n    У: \"U\",\n    Ф: \"F\",\n    Х: \"H\",\n    Ц: \"C\",\n    Ч: \"Ch\",\n    Ш: \"Sh\",\n    Щ: \"Shh\",\n    Ъ: \"\",\n    Ы: \"Y\",\n    Ь: \"\",\n    Э: \"Je\",\n    Ю: \"Yu\",\n    Я: \"Ya\",\n};\n","export const UnitConverterUtils = {\n    convert: (value: number, from: Unit, to: Unit): number => convertUnit(value, from, to),\n};\n\nfunction convertUnit(value: number, from: Unit, to: Unit): number {\n    if (isNaN(value)) {\n        return 0;\n    }\n    return (value * UnitValues[from]) / UnitValues[to];\n}\n\nexport enum Unit {\n    // Data storage\n    bit = \"Bit (b)\",\n    b = \"Byte (B)\",\n    KB = \"Kilobyte (KB)\",\n    MB = \"Megabyte (MB)\",\n    GB = \"Gigabyte (MB)\",\n    TB = \"Terabyte (MB)\",\n    PB = \"Petabyte (MB)\",\n    EB = \"Exabyte (MB)\",\n\n    // Time\n    tick = \"Tick (t)\",\n    ms = \"Milissecond (ms)\",\n    s = \"Second (s)\",\n    m = \"Minute (m)\",\n    h = \"Hour (h)\",\n    d = \"Day (d)\",\n    M = \"Month (M)\",\n    y = \"Year (y)\",\n}\n\nexport enum UnitType {\n    DataStorage = \"Data Storage\",\n    Time = \"Time\",\n}\n\nexport const UnitGroups: { [unitType: string]: Unit[] } = {\n    [UnitType.DataStorage]: [\n        Unit.bit,\n        Unit.b,\n        Unit.KB,\n        Unit.MB,\n        Unit.GB,\n        Unit.TB,\n        Unit.PB,\n        Unit.EB,\n    ],\n    [UnitType.Time]: [Unit.tick, Unit.ms, Unit.s, Unit.m, Unit.h, Unit.d, Unit.M, Unit.y],\n    // [UnitType.]: [Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit.,],\n};\n\nexport const UnitTypes = Object.keys(UnitGroups);\n\nconst UnitValues: { [unit: string]: number } = {\n    // Data storage\n    [Unit.bit]: 1,\n    [Unit.b]: 8,\n    [Unit.KB]: 8 * 1024,\n    [Unit.MB]: 8 * 1024 * 1024,\n    [Unit.GB]: 8 * 1024 * 1024 * 1024,\n    [Unit.TB]: 8 * 1024 * 1024 * 1024 * 1024,\n    [Unit.PB]: 8 * 1024 * 1024 * 1024 * 1024 * 1024,\n    [Unit.EB]: 8 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024,\n\n    // Time\n    [Unit.tick]: 1,\n    [Unit.ms]: 100,\n    [Unit.s]: 100 * 1000,\n    [Unit.m]: 100 * 1000 * 60,\n    [Unit.h]: 100 * 1000 * 60 * 60,\n    [Unit.d]: 100 * 1000 * 60 * 60 * 24,\n    [Unit.M]: 100 * 1000 * 60 * 60 * 24 * 30.43,\n    [Unit.y]: 100 * 1000 * 60 * 60 * 24 * 30.43 * 12,\n\n    // ****\n    // [Unit.]: 1,\n    // [Unit.]: 1000,\n    // [Unit.]: 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n    // [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\n};\n","import {\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBDropdown,\n    MDBDropdownItem,\n    MDBDropdownLink,\n    MDBDropdownMenu,\n    MDBDropdownToggle,\n    MDBInput,\n    MDBRow,\n} from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { Unit, UnitConverterUtils, UnitGroups, UnitTypes } from \"./UnitConverterUtils\";\n\nexport const UnitConverter: React.FC = () => {\n    return (\n        <>\n            <h1>Online Unit Converter</h1>\n            {UnitTypes.map((x) => (\n                <MDBCard border=\"primary\" className=\"mb-3\">\n                    <MDBCardHeader background=\"primary\" className=\"text-white\">\n                        {x}\n                    </MDBCardHeader>\n                    <MDBCardBody className=\"pb-2\">\n                        <UnitConverterRow units={UnitGroups[x]} />\n                    </MDBCardBody>\n                </MDBCard>\n            ))}\n        </>\n    );\n};\n\ninterface FormValue {\n    value: number;\n    from: Unit;\n    to: Unit;\n    result: number;\n}\n\ninterface UnitConverterRowParams {\n    units: Unit[];\n}\n\nconst UnitConverterRow: React.FC<UnitConverterRowParams> = (params: UnitConverterRowParams) => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        value: 0,\n        from: params.units[0],\n        to: params.units[0],\n        result: 0,\n    });\n\n    const onConvert = (e: any) => {\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.value };\n        setFormValue({\n            ...newFormValue,\n            result: UnitConverterUtils.convert(\n                newFormValue.value,\n                newFormValue.from,\n                newFormValue.to,\n            ),\n        });\n    };\n\n    const onChangeUnit = (name: string, value: Unit) => {\n        onConvert({\n            target: { name },\n            currentTarget: { value },\n        });\n    };\n\n    return (\n        <>\n            <MDBRow>\n                <MDBCol md=\"3\" className=\"mb-3\">\n                    <MDBInput\n                        name=\"value\"\n                        label=\"Value\"\n                        value={formValue.value.toString()}\n                        onChange={onConvert}\n                        type=\"number\"\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"3\" className=\"mb-3\">\n                    <UnitConverterUnitsDropDown\n                        name=\"from\"\n                        units={params.units}\n                        onChange={onChangeUnit}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"3\" className=\"mb-3\">\n                    <MDBInput\n                        name=\"result\"\n                        label=\"Result\"\n                        value={formValue.result.toString()}\n                        type=\"number\"\n                        readonly={true}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"3\" className=\"mb-3\">\n                    <UnitConverterUnitsDropDown\n                        name=\"to\"\n                        units={params.units}\n                        onChange={onChangeUnit}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n\ninterface DropDownValue {\n    value: Unit;\n}\n\ninterface UnitConverterUnitsDropDownParams {\n    name: string;\n    units: Unit[];\n    onChange: (name: string, unit: Unit) => void;\n}\n\nconst UnitConverterUnitsDropDown: React.FC<UnitConverterUnitsDropDownParams> = (\n    params: UnitConverterUnitsDropDownParams,\n) => {\n    const [formValue, setFormValue] = useState<DropDownValue>({\n        value: params.units[0],\n    });\n\n    const onChange = (value: Unit) => {\n        setFormValue({ ...formValue, value });\n        params.onChange(params.name, value);\n    };\n\n    return (\n        <>\n            <MDBDropdown group className=\"w-100\">\n                <MDBDropdownToggle>{formValue.value}</MDBDropdownToggle>\n                <MDBDropdownMenu>\n                    <MDBDropdownItem>\n                        <MDBDropdownLink\n                            tag=\"button\"\n                            type=\"button\"\n                            className=\"bg-light p-0 m-0\"\n                        ></MDBDropdownLink>\n                    </MDBDropdownItem>\n                    {params.units.map((x) => (\n                        <MDBDropdownItem>\n                            <MDBDropdownLink\n                                tag=\"button\"\n                                type=\"button\"\n                                onClick={() => onChange(x)}\n                                className={formValue.value === x ? \"active\" : \"\"}\n                                aria-current={formValue.value === x ? \"true\" : \"\"}\n                            >\n                                {x}\n                            </MDBDropdownLink>\n                        </MDBDropdownItem>\n                    ))}\n                </MDBDropdownMenu>\n            </MDBDropdown>\n        </>\n    );\n};\n","import { RouteComponentProps } from \"react-router\";\nimport { Base64EncodeDecode } from \"../tools/base64-encode-decode/Base64EncodeDecode\";\nimport { Base64EncodeFileOrImage } from \"../tools/base64-encode-file-or-image/Base64EncodeFileOrImage\";\nimport { GuidGenerator } from \"../tools/guid-generator/GuidGenerator\";\nimport { HtmlEncodeDecode } from \"../tools/html-encode-decode/HtmlEncodeDecode\";\nimport { JsonFormatter } from \"../tools/json-formatter/JsonFormatter\";\nimport { JsonViewer } from \"../tools/json-viewer/JsonViewer\";\nimport { LoanCalculator } from \"../tools/loan-calculator/LoanCalculator\";\nimport { Md5Generator } from \"../tools/md5-generator/Md5Generator\";\nimport { Sha1Generator } from \"../tools/sha1-generator/Sha1Generator\";\nimport { Sha256Generator } from \"../tools/sha256-generator/Sha256Generator\";\nimport { TextDifferences } from \"../tools/text-differences/TextDifferences\";\nimport { TranslitFromRussianToEnglish } from \"../tools/translit-from-russian-to-english/TranslitFromRussianToEnglish\";\nimport { UnitConverter } from \"../tools/unit-converter/UnitConverter\";\nimport { UrlEncodeDecode } from \"../tools/url-encode-decode/UrlEncodeDecode\";\n\nexport interface Route {\n    url: string;\n    name: string;\n    title: string;\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any> | undefined;\n}\n\nexport const AllRoutes: Route[] = [\n    {\n        url: \"json-viewer\",\n        name: \"Json Viewer\",\n        title: \"Online Json Viewer - Olrix Tools\",\n        component: JsonViewer,\n    },\n    {\n        url: \"json-formatter\",\n        name: \"Json Formatter\",\n        title: \"Online Json Formatter - Olrix Tools\",\n        component: JsonFormatter,\n    },\n    {\n        url: \"text-differences\",\n        name: \"Differences Between Texts\",\n        title: \"Online Finding Differences Between Texts - Olrix Tools\",\n        component: TextDifferences,\n    },\n    {\n        url: \"translit-from-russian-to-english\",\n        name: \"Translit From Russian\",\n        title: \"Online Translint From Russian To English - Olrix Tools\",\n        component: TranslitFromRussianToEnglish,\n    },\n    {\n        url: \"unit-converter\",\n        name: \"Unit Converter\",\n        title: \"Online Unit Converter - Olrix Tools\",\n        component: UnitConverter,\n    },\n    {\n        url: \"loan-calculator\",\n        name: \"Loan Calculator\",\n        title: \"Online Loan Calculator - Olrix Tools\",\n        component: LoanCalculator,\n    },\n    {\n        url: \"guid-generator\",\n        name: \"Guid Generator\",\n        title: \"Online Guid Generator - Olrix Tools\",\n        component: GuidGenerator,\n    },\n    {\n        url: \"url-encode-decode\",\n        name: \"Url Encode/Decode\",\n        title: \"Online Url Encode/Decode - Olrix Tools\",\n        component: UrlEncodeDecode,\n    },\n    {\n        url: \"html-encode-decode\",\n        name: \"Html Encode/Decode\",\n        title: \"Online Html Encode/Decode - Olrix Tools\",\n        component: HtmlEncodeDecode,\n    },\n    {\n        url: \"base64-encode-decode\",\n        name: \"Base64 Encode/Decode Text\",\n        title: \"Online Base64 Encode/Decode Text - Olrix Tools\",\n        component: Base64EncodeDecode,\n    },\n    {\n        url: \"base64-encode-file-or-image\",\n        name: \"Base64 Encode File Or Image\",\n        title: \"Online Base64 Encode File Or Image - Olrix Tools\",\n        component: Base64EncodeFileOrImage,\n    },\n    {\n        url: \"md5-generator\",\n        name: \"MD5 Generator\",\n        title: \"Online MD5 Generator - Olrix Tools\",\n        component: Md5Generator,\n    },\n    {\n        url: \"sha1-generator\",\n        name: \"SHA1 Generator\",\n        title: \"Online SHA1 Generator - Olrix Tools\",\n        component: Sha1Generator,\n    },\n    {\n        url: \"sha256-generator\",\n        name: \"SHA256 Generator\",\n        title: \"Online SHA256 Generator - Olrix Tools\",\n        component: Sha256Generator,\n    },\n];\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { TextDifferencesUtils } from \"./TextDifferencesUtils\";\n\ninterface FormValue {\n    before: string;\n    after: string;\n    differences: string;\n}\n\nexport const TextDifferences: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        before: \"\",\n        after: \"\",\n        differences: \"\",\n    });\n\n    const executeAsync = (action: () => void): void => {\n        window.setTimeout(action, 1);\n    };\n\n    const findDifferences = (before: string, after: string): void => {\n        setFormValue({\n            ...formValue,\n            before,\n            after,\n            differences: \"loading...\",\n        });\n        executeAsync(() => {\n            setFormValue({\n                ...formValue,\n                before,\n                after,\n                differences: TextDifferencesUtils.findDifferences(before, after),\n            });\n        });\n    };\n\n    const onChangeBefore = (e: any) => {\n        findDifferences(e.currentTarget.value || \"\", formValue.after);\n    };\n\n    const onChangeAfter = (e: any) => {\n        findDifferences(formValue.before, e.currentTarget.value || \"\");\n    };\n\n    const formatHtml = (value: string) =>\n        value.replace(/\\n/g, \"<br/>\").replace(/\\s\\s/g, \"&nbsp;&nbsp;\");\n\n    return (\n        <>\n            <h1>Online Finding Differences Between Texts</h1>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text Before\"\n                        textarea\n                        rows={15}\n                        value={formValue.before}\n                        onChange={onChangeBefore}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text After\"\n                        textarea\n                        rows={15}\n                        value={formValue.after}\n                        onChange={onChangeAfter}\n                    />\n                </MDBCol>\n            </MDBRow>\n            <h3>Differences</h3>\n            <MDBRow>\n                <MDBCol md=\"12\" className=\"mb-3\">\n                    <div\n                        className=\"square border-gray rounded wordwrap px-2 py-1\"\n                        style={{ height: 385 }}\n                    >\n                        <div\n                            dangerouslySetInnerHTML={{ __html: formatHtml(formValue.differences) }}\n                        />\n                    </div>\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { TranslitFromRussianToEnglishUtils } from \"./TranslitFromRussianToEnglishUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const TranslitFromRussianToEnglish: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({\n            ...formValue,\n            decoded: value,\n            encoded: TranslitFromRussianToEnglishUtils.encode(value),\n        });\n    };\n\n    return (\n        <>\n            <h1>Online Translint From Russian To English</h1>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Russian text\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Translit to English text\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const UrlEncodeDecode: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: encodeURIComponent(value) });\n    };\n\n    const onDecode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: decodeURIComponent(value), encoded: value });\n    };\n\n    return (\n        <>\n            <h1>Online Url Encode/Decode</h1>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Decoded Url\"\n                        textarea\n                        rows={10}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Encoded Url\"\n                        textarea\n                        rows={10}\n                        value={formValue.encoded}\n                        onChange={onDecode}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { HtmlEncodeDecodeUtils } from \"./HtmlEncodeDecodeUtils\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const HtmlEncodeDecode: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({\n            ...formValue,\n            decoded: value,\n            encoded: HtmlEncodeDecodeUtils.encode(value),\n        });\n    };\n\n    const onDecode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({\n            ...formValue,\n            decoded: HtmlEncodeDecodeUtils.decode(value),\n            encoded: value,\n        });\n    };\n\n    return (\n        <>\n            <h1>Online Html Encode/Decode</h1>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Decoded Html\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Encoded Html\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        onChange={onDecode}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBIcon, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { Base64 } from \"base64-js-tools\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const Base64EncodeDecode: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: Base64.encodeText(value) });\n    };\n\n    const onDecode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: Base64.decodeToText(value), encoded: value });\n    };\n\n    return (\n        <>\n            <h1 className=\"d-inline-block me-3\">Online Base64 Encode/Decode Text</h1>\n            <a\n                href=\"https://github.com/simetrio/base64-js-tools\"\n                title=\"Code on Github\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                <MDBIcon color=\"black\" fab icon=\"github-square\" size=\"2x\" />\n            </a>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Decoded Base64\"\n                        textarea\n                        rows={20}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Encoded Base64\"\n                        textarea\n                        rows={20}\n                        value={formValue.encoded}\n                        onChange={onDecode}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { MDBCol, MDBIcon, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { MD5 } from \"md5-js-tools\";\n\ninterface FormValue {\n    decoded: string;\n    encoded: string;\n}\n\nexport const Md5Generator: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        decoded: \"\",\n        encoded: \"\",\n    });\n\n    const onEncode = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, decoded: value, encoded: MD5.generate(value) });\n    };\n\n    return (\n        <>\n            <h1 className=\"d-inline-block me-3\">Online MD5 Generator</h1>\n            <a\n                href=\"https://github.com/simetrio/md5-js-tools\"\n                title=\"Code on Github\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                <MDBIcon color=\"black\" fab icon=\"github-square\" size=\"2x\" />\n            </a>\n            <MDBRow>\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"Text\"\n                        textarea\n                        rows={15}\n                        value={formValue.decoded}\n                        onChange={onEncode}\n                    />\n                </MDBCol>\n\n                <MDBCol md=\"6\" className=\"mb-3\">\n                    <MDBInput\n                        label=\"MD5\"\n                        textarea\n                        rows={15}\n                        value={formValue.encoded}\n                        readonly={true}\n                    />\n                </MDBCol>\n            </MDBRow>\n        </>\n    );\n};\n","import { useState } from \"react\";\nimport { AllRoutes } from \"./Routes\";\nimport {\n    MDBNavbar,\n    MDBContainer,\n    MDBIcon,\n    MDBNavbarNav,\n    MDBNavbarItem,\n    MDBNavbarToggler,\n    MDBNavbarBrand,\n    MDBCollapse,\n    MDBDropdown,\n    MDBDropdownToggle,\n    MDBDropdownMenu,\n    MDBDropdownItem,\n    MDBDropdownLink,\n} from \"mdb-react-ui-kit\";\n\nexport const Header: React.FC = () => {\n    const [showBasic, setShowBasic] = useState(false);\n\n    return (\n        <>\n            <MDBNavbar expand=\"lg\" dark bgColor=\"primary\">\n                <MDBContainer fluid>\n                    <MDBNavbarBrand href=\"/\">\n                        <MDBIcon className=\"mx-2 fa-1-5x\" icon=\"envelope\" />\n                        Olrix Tools\n                    </MDBNavbarBrand>\n\n                    <MDBNavbarToggler\n                        aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\"\n                        onClick={() => setShowBasic(!showBasic)}\n                    >\n                        <MDBIcon icon=\"bars\" fas />\n                    </MDBNavbarToggler>\n\n                    <MDBCollapse navbar show={showBasic}>\n                        <MDBNavbarNav right fullWidth={false} className=\"mb-2 mb-lg-0\">\n                            <MDBNavbarItem>\n                                <MDBDropdown>\n                                    <MDBDropdownToggle tag=\"a\" className=\"nav-link\">\n                                        Choose tools\n                                    </MDBDropdownToggle>\n                                    <MDBDropdownMenu>\n                                        {AllRoutes.map((x) => (\n                                            <MDBDropdownItem key={x.url}>\n                                                <MDBDropdownLink href={`/tools/${x.url}/`}>\n                                                    {x.name}\n                                                </MDBDropdownLink>\n                                            </MDBDropdownItem>\n                                        ))}\n                                    </MDBDropdownMenu>\n                                </MDBDropdown>\n                            </MDBNavbarItem>\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBContainer>\n            </MDBNavbar>\n        </>\n    );\n};\n","import { MDBBtn, MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\nimport { useState } from \"react\";\nimport { AllRoutes } from \"./Routes\";\n\ninterface FormValue {\n    search: string;\n}\n\nexport const Main: React.FC = () => {\n    const [formValue, setFormValue] = useState<FormValue>({\n        search: \"\",\n    });\n\n    const onSearch = (e: any) => {\n        const value = e.currentTarget.value || \"\";\n        setFormValue({ ...formValue, search: value });\n    };\n\n    const contains = (value1: string, value2: string) => {\n        return value1.toLocaleLowerCase().includes(value2.toLocaleLowerCase());\n    };\n\n    const routes = formValue.search\n        ? AllRoutes.filter((x) => contains(x.name, formValue.search))\n        : AllRoutes;\n\n    return (\n        <>\n            <div className=\"m-4\">\n                <MDBInput label=\"Search\" value={formValue.search} onChange={onSearch} />\n            </div>\n            <MDBRow>\n                {routes.map((x) => (\n                    <MDBCol md=\"3\" className=\"text-center my-2\">\n                        <MDBBtn href={`/tools/${x.url}/`} tag=\"a\">\n                            {x.name}\n                        </MDBBtn>\n                    </MDBCol>\n                ))}\n            </MDBRow>\n        </>\n    );\n};\n","import { Switch, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { Main } from \"./Main\";\nimport { AllRoutes } from \"./Routes\";\n\nexport const Router: React.FC = () => {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Main} />\n            <Route path=\"/tools\" component={ToolsRouter} />\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n\nconst ToolsRouter: React.FC<RouteComponentProps> = (props) => {\n    return (\n        <Switch>\n            {AllRoutes.map((x) => (\n                <Route key={x.url} path={`${props.match.url}/${x.url}`} component={x.component} />\n            ))}\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n","import React from \"react\";\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Header } from \"./Header\";\nimport { Router } from \"./Router\";\nimport { MDBContainer } from \"mdb-react-ui-kit\";\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <Header />\n            <MDBContainer fluid className=\"mt-3\">\n                <Router />\n            </MDBContainer>\n        </BrowserRouter>\n    );\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}