{"version":3,"sources":["app/Routes.ts","app/Header.tsx","guid-generator/GuidGenerator.tsx","main/Main.tsx","app/Router.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GuidGeneratorRoute","url","name","AllRoutes","Header","map","x","href","GuidGenerator","Main","Router","path","exact","component","ToolsRouter","to","props","match","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAKaA,EAA4B,CACrCC,IAAK,iBACLC,KAAM,yBAGGC,EAAqB,CAC9BH,G,OCTSI,EAAmB,WAC5B,OACI,qCACI,yCACCD,EAAUE,KAAI,SAAAC,GAAC,OACZ,qCAAE,mBAAGC,KAAI,iBAAYD,EAAEL,KAArB,SAA6BK,EAAEJ,OAAjC,gB,OCPHM,EAA0B,WACnC,OACI,kDCAKC,EAAiB,WAC1B,OACI,qCACI,uCACCN,EAAUE,KAAI,SAAAC,GAAC,OACZ,8BACI,mBAAGC,KAAI,iBAAYD,EAAEL,KAArB,SAA6BK,EAAEJ,gBCHtCQ,EAAmB,WAC5B,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWJ,IACjC,cAAC,IAAD,CAAOE,KAAK,SAASE,UAAWC,IAChC,cAAC,IAAD,CAAUC,GAAG,UAKnBD,EAA6C,SAACE,GAChD,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOL,KAAI,UAAKK,EAAMC,MAAMhB,IAAjB,YAAwBD,EAAmBC,KAAOY,UAAWL,IACxE,cAAC,IAAD,CAAUO,GAAG,UCdV,SAASG,IACtB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OCPN,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2e64acca.chunk.js","sourcesContent":["export interface Route {\r\n    url: string,\r\n    name: string,\r\n}\r\n\r\nexport const GuidGeneratorRoute: Route = { \r\n    url: \"guid-generator\", \r\n    name: \"Online guid generator\", \r\n}\r\n\r\nexport const AllRoutes: Route[] = [\r\n    GuidGeneratorRoute,\r\n]","import { AllRoutes } from \"./Routes\"\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <>\r\n            <div>Header</div>\r\n            {AllRoutes.map(x => (\r\n                <><a href={`/tools/${x.url}`}>{x.name}</a> | </>\r\n            ))}\r\n        </>\r\n    )\r\n}","export const GuidGenerator: React.FC = () => {\r\n    return (\r\n        <div>Guid generator</div>\r\n    )\r\n}","import { AllRoutes } from \"../app/Routes\"\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <div>Main</div>\r\n            {AllRoutes.map(x => (\r\n                <div>\r\n                    <a href={`/tools/${x.url}`}>{x.name}</a>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}","import { Switch, Route, Redirect, RouteComponentProps } from \"react-router\";\r\nimport { GuidGenerator } from \"../guid-generator/GuidGenerator\";\r\nimport { Main } from \"../main/Main\";\r\nimport { GuidGeneratorRoute } from \"./Routes\";\r\n\r\nexport const Router: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Main} />\r\n            <Route path=\"/tools\" component={ToolsRouter} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst ToolsRouter: React.FC<RouteComponentProps> = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route path={`${props.match.url}/${GuidGeneratorRoute.url}`} component={GuidGenerator} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Header } from './Header';\r\nimport { Router } from './Router';\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Router />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}