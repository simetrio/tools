{"version":3,"sources":["app/Routes.ts","app/Header.tsx","app/Main.tsx","tools/translit-from-russian-to-english/TranslitFromRussianToEnglishUtils.ts","tools/translit-from-russian-to-english/TranslitFromRussianToEnglish.tsx","tools/guid-generator/GuidGeneratorUtils.ts","tools/guid-generator/GuidGenerator.tsx","tools/url-encode-decode/UrlEncodeDecode.tsx","tools/html-encode-decode/HtmlEncodeDecodeUtils.ts","tools/html-encode-decode/HtmlEncodeDecode.tsx","tools/base64-encode-decode/Base64EncodeDecodeUtils.ts","tools/base64-encode-decode/Base64EncodeDecode.tsx","tools/sha256-generator/Sha256GeneratorUtils.ts","tools/sha256-generator/Sha256Generator.tsx","tools/sha1-generator/Sha1GeneratorUtils.ts","tools/sha1-generator/Sha1Generator.tsx","tools/md5-generator/Md5GeneratorUtils.ts","tools/md5-generator/Md5Generator.tsx","tools/text-differences/TextDifferencesUtils.ts","tools/text-differences/TextDifferences.tsx","tools/json-formatter/JsonFormatterUtils.ts","tools/json-formatter/JsonFormatter.tsx","tools/json-viewer/JsonViewerUtils.ts","tools/json-viewer/JsonViewer.tsx","tools/unit-converter/UnitConverterUtils.ts","tools/unit-converter/UnitConverter.tsx","tools/loan-calculator/LoanCalculatorUtils.ts","tools/loan-calculator/LoanCalculator.tsx","tools/base64-encode-file-or-image/Base64EncodeFileOrImageUtils.ts","tools/base64-encode-file-or-image/Base64EncodeFileOrImage.tsx","app/Router.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["JsonViewerRoute","url","name","JsonFormatterRoute","TextDifferencesRoute","TranslitFromRussianToEnglishRoute","UnitConverterRoute","LoanCalculatorRoute","GuidGeneratorRoute","UrlEncodeDecodeRoute","HtmlEncodeDecodeRoute","Base64EncodeDecodeRoute","Base64EncodeFileOrImageRoute","Md5GeneratorRoute","Sha1GeneratorRoute","Sha256GeneratorRoute","AllRoutes","Header","useState","showBasic","setShowBasic","expand","dark","bgColor","fluid","href","className","icon","onClick","fas","navbar","show","right","fullWidth","tag","map","x","Main","search","formValue","setFormValue","routes","filter","value1","value2","toLocaleLowerCase","includes","label","value","onChange","e","currentTarget","md","TranslitFromRussianToEnglishUtils","result","i","length","char","charAt","translitChar","translitChars","undefined","translit","TranslitFromRussianToEnglish","decoded","encoded","textarea","rows","readonly","GuidGeneratorUtils","props","guids","count","push","newGuid","guid","replace","c","r","Math","random","toString","uppercase","toUpperCase","braces","hypens","GuidGenerator","generate","onChangeBoolean","newFormValue","target","checked","useEffect","id","defaultChecked","join","UrlEncodeDecode","encodeURIComponent","decodeURIComponent","HtmlEncodeDecodeUtils","encodeHtml","decodeEntity","decodeHtml","code","HTML_ENTITIES","n","substring","parseInt","isNaN","String","fromCharCode","HtmlEncodeDecode","Base64EncodeDecodeUtils","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","utf8Encode","base64Keys","encodeBase64","indexOf","c1","c2","utf8Decode","decodeBase64","Base64EncodeDecode","Sha256GeneratorUtils","binarray","hex_tab","str","binb2hex","array","a","b","d","f","g","h","T1","T2","K","HASH","W","Array","j","safeAdd","Gamma1256","Gamma0256","Sigma1256","Ch","Sigma0256","Maj","coreSha256","bin","mask","str2binb","utftext","encodeSha256","y","lsw","S","X","R","z","Sha256Generator","Sha1GeneratorUtils","blockstart","A","B","C","D","E","temp","H0","H1","H2","H3","H4","valueLength","words","rotateLeft","convertHex","encodeSha1","s","Sha1Generator","Md5GeneratorUtils","k","AA","BB","CC","DD","S11","S12","S13","S14","S21","S22","S23","S24","S31","S32","S33","S34","S41","S42","S43","S44","lWordCount","lMessageLength","lNumberOfWords_temp1","lNumberOfWords","lWordArray","lBytePosition","lByteCount","convertToWordArray","FF","GG","HH","II","addUnsigned","wordToHex","encodeMD5","lValue","iShiftBits","lX","lY","lX4","lY4","lX8","lY8","lResult","ac","F","G","H","I","lCount","wordToHexValue","wordToHexValueTemp","substr","Md5Generator","TextDifferencesUtils","before","after","TextDifferencer","findDifferencesBetweenStrings","insertElementAt","element","index","splice","insertElementsAt","elements","string0","string1","lengthOfShorterString","passagePairsMatchingAtExtremes","lengthOfMatchingSubstring","offsetForString0","offsetForString1","matchingSubstringAtExtreme","passagePairMatchingAtExtreme","TextPassagePair","TextPassage","passagePairsAll","passagePairsMatching","this","findPassagePairsMatchingBetweenStrings","insertPassagePairsDifferentBetweenMatching","TextDifferences","positionOffsets","longestCommonPassagePair","findLongestCommonPassagePair","lengthOfCommonPassage","passages","text","passage0","passage1","passagePairSetsMatchingBeforeAndAfter","position","returnValue","lengthOfString0","lengthOfString1","substringLengthsForRow","substringLengthsForRowPrev","lengthOfLongestCommonSubstringSoFar","cellValue","startIndex","longestCommonSubstringSoFar","passagePairsToInsertBetween","pMax","p","passagePairToInsertAfter","passagePairToInsertBefore","buildAndInsertPassagePairBetweenExisting","indexOfPassagePairFinal","passagePairFinal","doPassagesMatch","lengthOfPassageToInsertAfter","positionsForPassagePairDifferent","passageToInsert0","passageToInsert1","passagePairToInsert","passagePairs","escapeStringForHTML","stringToEscape","differences","findDifferences","action","window","setTimeout","style","height","dangerouslySetInnerHTML","__html","JsonFormatterUtils","formatValue","JSON","stringify","parse","parseJson","parseFloat","formatNumber","formatString","formatBoolean","_","formatNull","message","formatJson","JsonFormatter","formatValueHtml","JsonViewerUtils","getObject","parseJsonObject","values","getProperties","Object","keys","key","getValue","jsonValue","isArray","type","expanded","Unit","UnitType","JsonViewer","jsonObject","console","log","UnitConverterUtils","from","to","UnitValues","convertUnit","UnitGroups","DataStorage","bit","KB","MB","GB","TB","PB","EB","Time","tick","ms","m","M","UnitTypes","UnitConverter","border","background","units","UnitConverterRow","params","onConvert","onChangeUnit","UnitConverterUnitsDropDown","group","LoanCalculatorUtils","amount","term","rate","monthlyRate","monthlyPayment","pow","months","month","balance","now","Date","date","setMonth","getMonth","interest","principal","payment","calculateMonths","total","reduce","current","next","calculateTotal","calculate","timeout","LoanCalculator","clearTimeout","LoanCalculatorFrom","htmlFor","LoanCalculatorFromTerm","termPeriod","calculateAndSendChange","LoanCalculatorFromDropDown","LoanCalculatorTable","maxCount","small","hover","scope","slice","LoanCalculatorTableRowMemo","LoanCalculatorTableRow","memo","LoanCalculatorSummary","NumberView","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","DateView","parts","DateTimeFormat","dateStyle","formatToParts","find","year","NumberEdit","Base64EncodeFileOrImageUtils","Base64EncodeFileOrImage","uploadFileRef","createRef","click","color","disabled","navigator","clipboard","writeText","display","files","file","fileSizeMB","size","toFixed","reader","FileReader","readAsArrayBuffer","Blob","onload","arrayBuffer","bytes","Uint8Array","ref","Base64EncodeFileOrImageEncodedMemo","Base64EncodeFileOrImageEncoded","Router","path","exact","component","ToolsRouter","match","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAKaA,EAAyB,CAClCC,IAAK,cACLC,KAAM,eAGGC,EAA4B,CACrCF,IAAK,iBACLC,KAAM,kBAGGE,EAA8B,CACvCH,IAAK,mBACLC,KAAM,6BAGGG,EAA2C,CACpDJ,IAAK,mCACLC,KAAM,yBAGGI,EAA4B,CACrCL,IAAK,iBACLC,KAAM,kBAGGK,EAA6B,CACtCN,IAAK,kBACLC,KAAM,mBAGGM,EAA4B,CACrCP,IAAK,iBACLC,KAAM,kBAGGO,EAA8B,CACvCR,IAAK,oBACLC,KAAM,qBAGGQ,EAA+B,CACxCT,IAAK,qBACLC,KAAM,sBAGGS,EAAiC,CAC1CV,IAAK,uBACLC,KAAM,6BAGGU,EAAsC,CAC/CX,IAAK,8BACLC,KAAM,+BAGGW,EAA2B,CACpCZ,IAAK,gBACLC,KAAM,iBAGGY,EAA4B,CACrCb,IAAK,iBACLC,KAAM,kBAGGa,EAA8B,CACvCd,IAAK,mBACLC,KAAM,oBAGGc,EAAqB,CAC9BhB,EACAG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,G,cCvESE,EAAmB,WAC5B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACI,mCACI,cAAC,IAAD,CAAWC,OAAO,KAAKC,MAAI,EAACC,QAAQ,UAApC,SACI,eAAC,IAAD,CAAcC,OAAK,EAAnB,UACI,eAAC,IAAD,CAAgBC,KAAK,IAArB,UACI,cAAC,IAAD,CAASC,UAAU,eAAeC,KAAK,aAD3C,iBAKA,cAAC,IAAD,CACI,gBAAc,yBACd,gBAAc,QACd,aAAW,oBACXC,QAAS,kBAAMR,GAAcD,IAJjC,SAMI,cAAC,IAAD,CAASQ,KAAK,OAAOE,KAAG,MAG5B,cAAC,IAAD,CAAaC,QAAM,EAACC,KAAMZ,EAA1B,SACI,cAAC,IAAD,CAAca,OAAK,EAACC,WAAW,EAAOP,UAAU,eAAhD,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAmBQ,IAAI,IAAIR,UAAU,WAArC,0BAGA,cAAC,IAAD,UACKV,EAAUmB,KAAI,SAAAC,GAAC,OACZ,cAAC,IAAD,UACI,cAAC,IAAD,CAAiBX,KAAI,iBAAYW,EAAEnC,IAAd,KAArB,SAA4CmC,EAAElC,QAD5BkC,EAAEnC,2B,cCxCvDoC,EAAiB,WAC1B,MAAkCnB,mBAAoB,CAClDoB,OAAQ,KADZ,mBAAOC,EAAP,KAAkBC,EAAlB,KAaMC,EAASF,EAAUD,OACnBtB,EAAU0B,QAAO,SAAAN,GAAC,OALNO,EAKmBP,EAAElC,KALL0C,EAKWL,EAAUD,OAJ5CK,EAAOE,oBAAoBC,SAASF,EAAOC,qBADrC,IAACF,EAAgBC,KAM5B5B,EAEN,OACI,qCACI,qBAAKU,UAAU,MAAf,SACA,cAAC,IAAD,CACIqB,MAAM,SACNC,MAAOT,EAAUD,OACjBW,SAnBK,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiBD,OAAQU,UAoBjC,cAAC,IAAD,UACKP,EAAON,KAAI,SAAAC,GAAC,OACT,cAAC,IAAD,CAAQgB,GAAG,IAAI1B,UAAU,mBAAzB,SACI,cAAC,IAAD,CAAQD,KAAI,iBAAYW,EAAEnC,IAAd,KAAsBiC,IAAI,IAAtC,SAA2CE,EAAElC,kBCtCxDmD,EACD,SAACL,GAAD,OAGZ,SAAkBA,GAGhB,IAFA,IAAIM,EAAiB,GAEbC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAAK,CACpC,IAAME,EAAOT,EAAMU,OAAOH,GACpBI,EAAeC,EAAcH,GACnCH,QAA2BO,IAAjBF,EAA6BA,EAAeF,EAGxD,OAAOH,EAZ8BQ,CAASd,IAehD,IAAMY,EAAqB,CACzyC,WAClD,MAAkC7C,mBAAoB,CAClD8C,QAAS,GACTC,QAAS,KAFb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAUA,OACI,qCACI,0EACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQY,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,eACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SAfH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAOiB,QAASZ,EAAyCL,WAiBvF,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,2BACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAU0B,QACjBG,UAAU,a,OCjCrBC,EACC,SAACC,GAEP,IADA,IAAMC,EAAkB,GAChBhB,EAAI,EAAGA,EAAIe,EAAME,MAAOjB,IAC5BgB,EAAME,KAAKC,EAAQJ,IAEvB,OAAOC,GAIf,SAASG,EAAQJ,GACb,IAAIK,EAAO,uCAAuCC,QAAQ,SAAS,SAASC,GACxE,IAAMC,EAAoB,GAAhBC,KAAKC,SAAgB,EAE/B,OADgB,MAANH,EAAYC,EAAKA,GAAK,IACvBG,SAAS,OAetB,OAZIX,EAAMY,YACNP,EAAOA,EAAKQ,eAGZb,EAAMc,SACNT,EAAI,WAAOA,EAAP,MAGHL,EAAMe,SACPV,EAAOA,EAAKC,QAAQ,KAAM,KAGvBD,ECxBJ,IAAMW,EAA0B,WACnC,MAAkCpE,mBAAoB,CAClDsD,MAAO,EACPU,WAAW,EACXE,QAAQ,EACRC,QAAQ,EACRrC,MAAO,KALX,mBAAOT,EAAP,KAAkBC,EAAlB,KAQM+C,EAAW,SAACjB,GACd9B,EAAa,2BAAK8B,GAAN,IAAatB,MAAOqB,EAA4BC,OAS1DkB,EAAkB,SAACtC,GACrB,IAAMuC,EAAY,2BAAQlD,GAAR,kBAAoBW,EAAEwC,OAAOxF,KAAOgD,EAAEC,cAAcwC,UACtEnD,EAAaiD,GACbF,EAASE,IAUb,OAFAG,qBAAU,kBAAML,EAAShD,KAAY,IAGjC,qCACI,uDACA,cAAC,IAAD,CAAQa,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIsB,MAAOT,EAAUiC,MAAMS,WACvB/E,KAAK,QACL2F,GAAG,QACH9C,MAAM,YACNE,SA5BC,SAACC,GACd,IAAMuC,EAAY,2BAAQlD,GAAR,kBAAoBW,EAAEwC,OAAOxF,KAAOgD,EAAEC,cAAcH,QACtER,EAAaiD,GACbF,EAASE,QA6BL,cAAC,IAAD,CAAQrC,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIxB,KAAK,YACL2F,GAAG,YACH9C,MAAM,YACNnB,QAAS4D,EACTM,eAAgBvD,EAAU2C,cAIlC,cAAC,IAAD,CAAQ9B,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIxB,KAAK,SACL2F,GAAG,SACH9C,MAAM,SACNnB,QAAS4D,EACTM,eAAgBvD,EAAU6C,WAIlC,cAAC,IAAD,CAAQhC,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIxB,KAAK,SACL2F,GAAG,SACH9C,MAAM,SACNnB,QAAS4D,EACTM,eAAgBvD,EAAU8C,WAIlC,cAAC,IAAD,CAAQjC,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CAAQE,QAnDD,WACf2D,EAAShD,IAkDD,wBAGJ,cAAC,IAAD,CAAQa,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CAAUqB,MAAM,kBAAkBmB,UAAQ,EAACC,KAAM,GAAInB,MAAOT,EAAUS,MAAM+C,KAAK,cCpFpFC,EAA4B,WACrC,MAAkC9E,mBAAoB,CAClD8C,QAAS,GACTC,QAAS,KAFb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAeA,OACI,qCACI,0DACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQY,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,cACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SApBH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAOiB,QAASgC,mBAAmBjD,WAsBjE,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,cACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAU0B,QACjBhB,SAzBH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAASkC,mBAAmBlD,GAAQiB,QAASjB,iBCrBrEmD,EACD,SAACnD,GAAD,OAKZ,SAAoBA,GAChB,OAAOA,EACF4B,QAAQ,KAAM,SACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAXgBwB,CAAWpD,IADrCmD,EAGD,SAACnD,GAAD,OAYZ,SAAoBA,GAChB,OAAOA,EAAM4B,QAAQ,WAAYyB,GAbEC,CAAWtD,IAgBlD,SAASqD,EAAaE,GAEpB,GAAuB,MAAnBA,EAAK7C,OAAO,GACd,OAAO8C,EAAcD,IAASA,EAGhC,IAAIE,EAAG5B,EAAI0B,EAAK7C,OAAO,GASvB,MAPU,MAANmB,GAAmB,MAANA,GACfA,EAAI0B,EAAKG,UAAU,EAAGH,EAAK/C,OAAS,GACpCiD,EAAIE,SAAS9B,EAAG,MAEhBA,EAAI0B,EAAKG,UAAU,EAAGH,EAAK/C,OAAS,GACpCiD,EAAIE,SAAS9B,IAER+B,MAAMH,GAAKF,EAAOM,OAAOC,aAAaL,GAG/C,IAAMD,EAAqB,CACzB,SAAW,OACX,UAAY,OACZ,SAAW,OACX,UAAY,OACZ,WAAa,OACb,QAAU,OACV,WAAa,OACb,SAAW,OACX,QAAU,OACV,SAAW,OACX,SAAW,OACX,UAAY,OACZ,QAAU,OACV,QAAU,OACV,QAAU,OACV,SAAW,OACX,QAAU,OACV,WAAa,OACb,SAAW,OACX,SAAW,OACX,UAAY,OACZ,UAAY,OACZ,SAAW,OACX,WAAa,OACb,UAAY,OACZ,SAAW,OACX,SAAW,OACX,UAAY,OACZ,WAAa,OACb,WAAa,OACb,WAAa,OACb,WAAa,OACb,WAAa,OACb,WAAa,OACb,UAAY,OACZ,WAAa,OACb,SAAW,OACX,UAAY,OACZ,UAAY,OACZ,WAAa,OACb,WAAa,OACb,WAAa,OACb,UAAY,OACZ,SAAW,OACX,WAAa,OACb,WAAa,OACb,UAAY,OACZ,SAAW,OACX,QAAU,OACV,WAAa,OACb,WAAa,OACb,WAAa,OACb,UAAY,OACZ,WAAa,OACb,SAAW,OACX,UAAY,OACZ,WAAa,OACb,WAAa,OACb,WAAa,OACb,UAAY,OACZ,SAAW,OACX,WAAa,OACb,UAAY,OACZ,UAAY,OACZ,WAAa,OACb,WAAa,OACb,UAAY,OACZ,WAAa,OACb,SAAW,OACX,UAAY,OACZ,UAAY,OACZ,WAAa,OACb,WAAa,OACb,WAAa,OACb,UAAY,OACZ,SAAW,OACX,WAAa,OACb,WAAa,OACb,UAAY,OACZ,SAAW,OACX,QAAU,OACV,WAAa,OACb,WAAa,OACb,WAAa,OACb,UAAY,OACZ,WAAa,OACb,SAAW,OACX,WAAa,OACb,WAAa,OACb,WAAa,OACb,WAAa,OACb,UAAY,OACZ,SAAW,OACX,WAAa,OACb,UAAY,OACZ,SAAW,OACX,SAAW,IACX,QAAU,IACV,OAAS,IACT,OAAS,IACT,SAAW,IACX,UAAY,SACZ,UAAY,SACZ,WAAa,SACb,WAAa,SACb,SAAW,SACX,SAAW,SACX,UAAY,SACZ,SAAW,SACX,SAAW,SACX,WAAa,SACb,SAAW,SACX,QAAU,SACV,QAAU,SACV,QAAU,SACV,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,WAAa,SACb,WAAa,SACb,WAAa,SACb,WAAa,SACb,WAAa,SACb,SAAW,SACX,SAAW,SACX,UAAY,SACZ,SAAW,SACX,UAAY,SACZ,UAAY,SACZ,YAAc,SACd,SAAW,SACX,QAAU,SACV,UAAY,SACZ,SAAW,SACX,UAAY,SACZ,WAAa,SACb,OAAS,SACT,OAAS,SACT,OAAS,SACT,YAAc,SACd,OAAS,SACT,QAAU,SACV,UAAY,SACZ,QAAU,SACV,YAAc,SACd,QAAU,SACV,QAAU,SACV,QAAU,SACV,UAAY,SACZ,UAAY,SACZ,SAAW,SACX,UAAY,SACZ,UAAY,SACZ,YAAc,SACd,SAAW,SACX,QAAU,SACV,UAAY,SACZ,SAAW,SACX,UAAY,SACZ,WAAa,SACb,OAAS,SACT,OAAS,SACT,OAAS,SACT,YAAc,SACd,OAAS,SACT,QAAU,SACV,WAAa,SACb,UAAY,SACZ,QAAU,SACV,YAAc,SACd,QAAU,SACV,QAAU,SACV,QAAU,SACV,UAAY,SACZ,aAAe,SACf,UAAY,SACZ,QAAU,SACV,SAAW,SACX,WAAa,SACb,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,WAAa,SACb,UAAY,SACZ,SAAW,SACX,UAAY,SACZ,YAAc,SACd,SAAW,SACX,SAAW,SACX,SAAW,SACX,SAAW,SACX,SAAW,SACX,UAAY,SACZ,SAAW,SACX,SAAW,SACX,SAAW,SACX,SAAW,SACX,SAAW,SACX,WAAa,SACb,SAAW,SACX,UAAY,SACZ,UAAY,SACZ,UAAY,SACZ,SAAW,SACX,UAAY,SACZ,OAAS,SACT,SAAW,SACX,QAAU,SACV,UAAY,SACZ,WAAa,SACb,UAAY,SACZ,SAAW,SACX,UAAY,SACZ,QAAU,SACV,QAAU,SACV,OAAS,SACT,QAAU,SACV,QAAU,SACV,QAAU,SACV,WAAa,SACb,QAAU,SACV,SAAW,SACX,UAAY,SACZ,OAAS,SACT,UAAY,SACZ,OAAS,SACT,OAAS,SACT,QAAU,SACV,QAAU,SACV,SAAW,SACX,SAAW,SACX,SAAW,SACX,UAAY,SACZ,WAAa,SACb,SAAW,SACX,SAAW,SACX,UAAY,SACZ,UAAY,SACZ,WAAa,SACb,WAAa,SACb,SAAW,SACX,SAAW,SACX,QAAU,SACV,WAAa,SACb,UAAY,SACZ,WAAa,SACb,UAAY,UCzRDO,EAA6B,WACtC,MAAkC7F,mBAAoB,CAClD8C,QAAS,GACTC,QAAS,KAFb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAeA,OACI,qCACI,2DACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQY,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,eACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SApBH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAOiB,QAASkC,EAA6BnD,WAsB3E,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,eACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAU0B,QACjBhB,SAzBH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAASmC,EAA6BnD,GAAQiB,QAASjB,iBCtB/EgE,EACD,SAAChE,GAAD,OAOZ,SAAsBA,GACpB,IACIiE,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EADpCC,EAAS,GAETjE,EAAI,EAERP,EA6DF,SAAoBA,GAChBA,EAAQA,EAAM4B,QAAQ,QAAQ,MAG9B,IAFA,IAAI4C,EAAS,GAEJf,EAAI,EAAGA,EAAIzD,EAAMQ,OAAQiD,IAAK,CAErC,IAAI5B,EAAI7B,EAAMyE,WAAWhB,GAErB5B,EAAI,IACN2C,GAAUX,OAAOC,aAAajC,GAEvBA,EAAI,KAASA,EAAI,MACxB2C,GAAUX,OAAOC,aAAcjC,GAAK,EAAK,KACzC2C,GAAUX,OAAOC,aAAkB,GAAJjC,EAAU,OAGzC2C,GAAUX,OAAOC,aAAcjC,GAAK,GAAM,KAC1C2C,GAAUX,OAAOC,aAAejC,GAAK,EAAK,GAAM,KAChD2C,GAAUX,OAAOC,aAAkB,GAAJjC,EAAU,MAI7C,OAAO2C,EAnFDE,CAAW1E,GAEnB,KAAOO,EAAIP,EAAMQ,QAMf4D,GAJAH,EAAOjE,EAAMyE,WAAWlE,OAIT,EACf8D,GAAgB,EAAPJ,IAAa,GAJtBC,EAAOlE,EAAMyE,WAAWlE,OAIY,EACpC+D,GAAgB,GAAPJ,IAAc,GAJvBC,EAAOnE,EAAMyE,WAAWlE,OAIa,EACrCgE,EAAc,GAAPJ,EAEHP,MAAMM,GACRI,EAAOC,EAAO,GACLX,MAAMO,KACfI,EAAO,IAGTC,EAASA,EACPG,EAAWjE,OAAO0D,GAAQO,EAAWjE,OAAO2D,GAC5CM,EAAWjE,OAAO4D,GAAQK,EAAWjE,OAAO6D,GAGhD,OAAOC,EApC8BI,CAAa5E,IADvCgE,EAGD,SAAChE,GAAD,OAqCZ,SAAsBA,GACpB,IACIiE,EAAMC,EAAMC,EACNE,EAAMC,EAAMC,EAFlBC,EAAS,GAGTjE,EAAI,EAERP,EAAQA,EAAM4B,QAAQ,sBAAuB,IAE7C,KAAOrB,EAAIP,EAAMQ,QAOfyD,EALOU,EAAWE,QAAQ7E,EAAMU,OAAOH,OAKvB,GAJhB8D,EAAOM,EAAWE,QAAQ7E,EAAMU,OAAOH,QAIT,EAC9B2D,GAAgB,GAAPG,IAAc,GAJvBC,EAAOK,EAAWE,QAAQ7E,EAAMU,OAAOH,QAIF,EACrC4D,GAAgB,EAAPG,IAAa,GAJtBC,EAAOI,EAAWE,QAAQ7E,EAAMU,OAAOH,OAMvCiE,GAAkBX,OAAOC,aAAaG,GAEzB,KAATK,IACFE,GAAkBX,OAAOC,aAAaI,IAE3B,KAATK,IACFC,GAAkBX,OAAOC,aAAaK,IAK1C,OADAK,EA8BF,SAAoBxE,GAChB,IAAIwE,EAAS,GACTjE,EAAI,EACJsB,EAAI,EAAGiD,EAAK,EAAGC,EAAK,EAExB,KAAOxE,EAAIP,EAAMQ,SACfqB,EAAI7B,EAAMyE,WAAWlE,IAEb,KACNiE,GAAUX,OAAOC,aAAajC,GAC9BtB,KAEOsB,EAAI,KAASA,EAAI,KACxBiD,EAAK9E,EAAMyE,WAAWlE,EAAE,GACxBiE,GAAUX,OAAOC,cAAmB,GAAJjC,IAAW,EAAW,GAALiD,GACjDvE,GAAK,IAGLuE,EAAK9E,EAAMyE,WAAWlE,EAAE,GACxBwE,EAAK/E,EAAMyE,WAAWlE,EAAE,GACxBiE,GAAUX,OAAOC,cAAmB,GAAJjC,IAAW,IAAa,GAALiD,IAAY,EAAW,GAALC,GACrExE,GAAK,GAIT,OAAOiE,EAvDAQ,CAAWR,GACbA,EAnE8BS,CAAajF,IAG9C2E,EAAa,oECGZ,IAAMO,EAA+B,WACxC,MAAkChH,mBAAoB,CAClD8C,QAAS,GACTC,QAAS,KAFb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAeA,OACI,qCACI,kEACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQY,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,iBACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SApBH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAOiB,QAAS+C,EAA+BhE,WAsB7E,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,iBACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAU0B,QACjBhB,SAzBH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAASgD,EAA+BhE,GAAQiB,QAASjB,iBCtBjFmF,EACD,SAACnF,GAAD,OAMZ,SAAsBA,GAErB,OAsGD,SAAkBoF,GAGd,IAFA,IAAMC,EAAyC,mBAC3CC,EAAM,GACF/E,EAAI,EAAGA,EAAsB,EAAlB6E,EAAS5E,OAAYD,IACtC+E,GAAOD,EAAQ3E,OAAQ0E,EAAS7E,GAAG,IAAiB,GAAT,EAAIA,EAAE,GAAK,EAAM,IAC5D8E,EAAQ3E,OAAQ0E,EAAS7E,GAAG,IAAiB,GAAT,EAAIA,EAAE,GAAW,IAEvD,OAAO+E,EA7GHC,CAkBR,SAAqBC,EAAiBhF,GAClC,IAGIiF,EAAGC,EAAG7D,EAAG8D,EAAGzF,EAAG0F,EAAGC,EAAGC,EACrBC,EAAIC,EAJJC,EAAc,CAAC,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAW,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAW,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YACjwBC,EAAiB,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,YACtGC,EAAc,IAAIC,MAAM,IAI5BZ,EAAMhF,GAAU,IAAM,KAAS,GAAKA,EAAS,GAC7CgF,EAAkC,IAA1BhF,EAAS,IAAM,GAAM,IAAWA,EAExC,IAAK,IAAID,EAAI,EAAGA,EAAEiF,EAAMhF,OAAQD,GAAG,GAAI,CACrCkF,EAAIS,EAAK,GACTR,EAAIQ,EAAK,GACTrE,EAAIqE,EAAK,GACTP,EAAIO,EAAK,GACThG,EAAIgG,EAAK,GACTN,EAAIM,EAAK,GACTL,EAAIK,EAAK,GACTJ,EAAII,EAAK,GAET,IAAK,IAAIG,EAAI,EAAGA,EAAE,GAAIA,IACRF,EAAEE,GAAVA,EAAI,GAAWb,EAAMa,EAAI9F,GACjB+F,EAAQA,EAAQA,EAAQC,GAAUJ,EAAEE,EAAI,IAAKF,EAAEE,EAAI,IAAKG,GAAUL,EAAEE,EAAI,MAAOF,EAAEE,EAAI,KAEjGN,EAAKO,EAAQA,EAAQA,EAAQA,EAAQR,EAAGW,GAAUvG,IAAKwG,EAAGxG,EAAG0F,EAAGC,IAAKI,EAAEI,IAAKF,EAAEE,IAC9EL,EAAKM,EAAQK,EAAUlB,GAAImB,EAAInB,EAAGC,EAAG7D,IAErCiE,EAAID,EACJA,EAAID,EACJA,EAAI1F,EACJA,EAAIoG,EAAQX,EAAGI,GACfJ,EAAI9D,EACJA,EAAI6D,EACJA,EAAID,EACJA,EAAIa,EAAQP,EAAIC,GAGlBE,EAAK,GAAKI,EAAQb,EAAGS,EAAK,IAC1BA,EAAK,GAAKI,EAAQZ,EAAGQ,EAAK,IAC1BA,EAAK,GAAKI,EAAQzE,EAAGqE,EAAK,IAC1BA,EAAK,GAAKI,EAAQX,EAAGO,EAAK,IAC1BA,EAAK,GAAKI,EAAQpG,EAAGgG,EAAK,IAC1BA,EAAK,GAAKI,EAAQV,EAAGM,EAAK,IAC1BA,EAAK,GAAKI,EAAQT,EAAGK,EAAK,IAC1BA,EAAK,GAAKI,EAAQR,EAAGI,EAAK,IAE5B,OAAOA,EAhEMW,CAmEjB,SAAkB7G,GAGd,IAFA,IAAM8G,EAAgB,GAChBC,EAAO,IACLxG,EAAI,EAAGA,EA1EA,EA0EIP,EAAMQ,OAAmBD,GA1E7B,EA2EbuG,EAAIvG,GAAG,KAAOP,EAAMyE,WAAWlE,EA3ElB,GA2EkCwG,IAAU,GAAKxG,EAAE,GAElE,OAAOuG,EAzEiBE,CAD3BhH,EA6ED,SAAoBA,GAChBA,EAAQA,EAAM4B,QAAQ,QAAQ,MAG9B,IAFA,IAAIqF,EAAU,GAELxD,EAAI,EAAGA,EAAIzD,EAAMQ,OAAQiD,IAAK,CAErC,IAAM5B,EAAI7B,EAAMyE,WAAWhB,GAEvB5B,EAAI,IACNoF,GAAWpD,OAAOC,aAAajC,GAExBA,EAAI,KAASA,EAAI,MACxBoF,GAAWpD,OAAOC,aAAcjC,GAAK,EAAK,KAC1CoF,GAAWpD,OAAOC,aAAkB,GAAJjC,EAAU,OAG1CoF,GAAWpD,OAAOC,aAAcjC,GAAK,GAAM,KAC3CoF,GAAWpD,OAAOC,aAAejC,GAAK,EAAK,GAAM,KACjDoF,GAAWpD,OAAOC,aAAkB,GAAJjC,EAAU,MAK9C,OAAOoF,EApGFvC,CAAW1E,IAHD,EAI0BA,EAAMQ,SARZ0G,CAAalH,IAWpD,SAASsG,EAASlH,EAAW+H,GACzB,IAAIC,GAAW,MAAJhI,IAAmB,MAAJ+H,GAE1B,OADW/H,GAAK,KAAO+H,GAAK,KAAOC,GAAO,KAC3B,GAAa,MAANA,EAG1B,SAASC,EAAGC,EAAW7D,GAAqB,OAAS6D,IAAM7D,EAAO6D,GAAM,GAAK7D,EAC7E,SAAS8D,EAAGD,EAAW7D,GAAqB,OAAS6D,IAAM7D,EAC3D,SAASiD,EAAGtH,EAAW+H,EAAWK,GAAqB,OAASpI,EAAI+H,GAAQ/H,EAAKoI,EACjF,SAASZ,EAAIxH,EAAW+H,EAAWK,GAAqB,OAASpI,EAAI+H,EAAM/H,EAAIoI,EAAML,EAAIK,EACzF,SAASb,EAAUvH,GAAqB,OAAQiI,EAAEjI,EAAG,GAAKiI,EAAEjI,EAAG,IAAMiI,EAAEjI,EAAG,IAC1E,SAASqH,GAAUrH,GAAqB,OAAQiI,EAAEjI,EAAG,GAAKiI,EAAEjI,EAAG,IAAMiI,EAAEjI,EAAG,IAC1E,SAASoH,GAAUpH,GAAqB,OAAQiI,EAAEjI,EAAG,GAAKiI,EAAEjI,EAAG,IAAMmI,EAAEnI,EAAG,GAC1E,SAASmH,GAAUnH,GAAqB,OAAQiI,EAAEjI,EAAG,IAAMiI,EAAEjI,EAAG,IAAMmI,EAAEnI,EAAG,IChBpE,IAAMqI,GAA4B,WACrC,MAAkCvJ,mBAAoB,CAClD8C,QAAS,GACTC,QAAS,KAFb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAUA,OACI,qCACI,yDACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQY,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,OACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SAfH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAOiB,QAASkE,EAA4BnF,WAiB1E,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,SACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAU0B,QACjBG,UAAU,aCxCrBsG,GACD,SAAC1H,GAAD,OAGZ,SAAoBA,GAClB,IAAI2H,EACDpH,EAAG8F,EAOHuB,EAAGC,EAAGC,EAAGC,EAAGC,EACZC,EAPA9B,EAAI,IAAIC,MAAM,IACd8B,EAAK,WACLC,EAAK,WACLC,EAAK,WACLC,EAAK,UACLC,EAAK,WAMHC,GAFNvI,EA8GD,SAAoBA,GAClBA,EAAQA,EAAM4B,QAAQ,QAAQ,MAG9B,IAFA,IAAIqF,EAAU,GAELxD,EAAI,EAAGA,EAAIzD,EAAMQ,OAAQiD,IAAK,CACrC,IAAM5B,EAAI7B,EAAMyE,WAAWhB,GAEvB5B,EAAI,IACNoF,GAAWpD,OAAOC,aAAajC,GAExBA,EAAI,KAASA,EAAI,MACxBoF,GAAWpD,OAAOC,aAAcjC,GAAK,EAAK,KAC1CoF,GAAWpD,OAAOC,aAAkB,GAAJjC,EAAU,OAG1CoF,GAAWpD,OAAOC,aAAcjC,GAAK,GAAM,KAC3CoF,GAAWpD,OAAOC,aAAejC,GAAK,EAAK,GAAM,KACjDoF,GAAWpD,OAAOC,aAAkB,GAAJjC,EAAU,MAI9C,OAAOoF,EAnIAvC,CAAW1E,IAEOQ,OAEpBgI,EAAkB,GACxB,IAAIjI,EAAI,EAAGA,EAAIgI,EAAc,EAAGhI,GAAK,EACpC8F,EAAKrG,EAAMyE,WAAWlE,IAAI,GAAOP,EAAMyE,WAAWlE,EAAE,IAAI,GACvDP,EAAMyE,WAAWlE,EAAE,IAAI,EAAMP,EAAMyE,WAAWlE,EAAE,GACjDiI,EAAM/G,KAAK4E,GAGZ,OAAOkC,EAAc,GACpB,KAAK,EACJhI,EAAI,WACL,MACA,KAAK,EACJA,EAAKP,EAAMyE,WAAW8D,EAAY,IAAI,GAAM,QAC7C,MAEA,KAAK,EACJhI,EAAKP,EAAMyE,WAAW8D,EAAY,IAAI,GAAOvI,EAAMyE,WAAW8D,EAAY,IAAI,GAAM,MACrF,MAEA,KAAK,EACJhI,EAAKP,EAAMyE,WAAW8D,EAAY,IAAI,GAAOvI,EAAMyE,WAAW8D,EAAY,IAAI,GAAOvI,EAAMyE,WAAW8D,EAAY,IAAI,EAAK,IAI7HC,EAAM/G,KAAKlB,GAEX,KAAOiI,EAAMhI,OAAS,KAAQ,IAAIgI,EAAM/G,KAAM,GAK9C,IAHA+G,EAAM/G,KAAK8G,IAAc,IACzBC,EAAM/G,KAAM8G,GAAa,EAAG,YAEvBZ,EAAW,EAAGA,EAAWa,EAAMhI,OAAQmH,GAAY,GAAI,CAE3D,IAAIpH,EAAE,EAAGA,EAAE,GAAIA,IAAK4F,EAAE5F,GAAKiI,EAAMb,EAAWpH,GAC5C,IAAIA,EAAE,GAAIA,GAAG,GAAIA,IAAK4F,EAAE5F,GAAKkI,GAAWtC,EAAE5F,EAAE,GAAK4F,EAAE5F,EAAE,GAAK4F,EAAE5F,EAAE,IAAM4F,EAAE5F,EAAE,IAAK,GAQ7E,IANAqH,EAAIM,EACJL,EAAIM,EACJL,EAAIM,EACJL,EAAIM,EACJL,EAAIM,EAEA/H,EAAG,EAAGA,GAAG,GAAIA,IAChB0H,EAAQQ,GAAWb,EAAE,IAAOC,EAAEC,GAAOD,EAAEE,GAAMC,EAAI7B,EAAE5F,GAAK,WAAc,WACtEyH,EAAID,EACJA,EAAID,EACJA,EAAIW,GAAWZ,EAAE,IACjBA,EAAID,EACJA,EAAIK,EAGL,IAAI1H,EAAE,GAAIA,GAAG,GAAIA,IAChB0H,EAAQQ,GAAWb,EAAE,IAAMC,EAAIC,EAAIC,GAAKC,EAAI7B,EAAE5F,GAAK,WAAc,WACjEyH,EAAID,EACJA,EAAID,EACJA,EAAIW,GAAWZ,EAAE,IACjBA,EAAID,EACJA,EAAIK,EAGL,IAAI1H,EAAE,GAAIA,GAAG,GAAIA,IAChB0H,EAAQQ,GAAWb,EAAE,IAAOC,EAAEC,EAAMD,EAAEE,EAAMD,EAAEC,GAAMC,EAAI7B,EAAE5F,GAAK,WAAc,WAC7EyH,EAAID,EACJA,EAAID,EACJA,EAAIW,GAAWZ,EAAE,IACjBA,EAAID,EACJA,EAAIK,EAGL,IAAI1H,EAAE,GAAIA,GAAG,GAAIA,IAChB0H,EAAQQ,GAAWb,EAAE,IAAMC,EAAIC,EAAIC,GAAKC,EAAI7B,EAAE5F,GAAK,WAAc,WACjEyH,EAAID,EACJA,EAAID,EACJA,EAAIW,GAAWZ,EAAE,IACjBA,EAAID,EACJA,EAAIK,EAGLC,EAAMA,EAAKN,EAAK,WAChBO,EAAMA,EAAKN,EAAK,WAChBO,EAAMA,EAAKN,EAAK,WAChBO,EAAMA,EAAKN,EAAK,WAChBO,EAAMA,EAAKN,EAAK,WAIjB,OAAOU,GAAWR,GAAMQ,GAAWP,GAAMO,GAAWN,GAAMM,GAAWL,GAAMK,GAAWJ,GAzGhDK,CAAW3I,IA4GlD,SAASyI,GAAWhF,EAAWmF,GAC7B,OAASnF,GAAGmF,EAAOnF,IAAK,GAAGmF,EAG7B,SAASF,GAAW1I,GAClB,IACIO,EADA+E,EAAI,GAIR,IAAI/E,EAAE,EAAGA,GAAG,EAAGA,IAEb+E,IADKtF,IAAW,EAAFO,EAAM,IACX0B,SAAS,IAEpB,OAAOqD,ECjHF,IAAMuD,GAA0B,WACnC,MAAkC3K,mBAAoB,CAClD8C,QAAS,GACTC,QAAS,KAFb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAUA,OACI,qCACI,uDACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQY,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,OACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SAfH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAOiB,QAASyG,GAA0B1H,WAiBxE,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,OACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAU0B,QACjBG,UAAU,aCxCrB0H,GACD,SAAC9I,GAAD,OAGZ,SAAmBA,GAClB,IACI+I,EAAEC,EAAGC,EAAGC,EAAGC,EAAG1D,EAAEC,EAAE7D,EAAE8D,EADpBvG,EAAc,GAEdgK,EAAI,EAAGC,EAAI,GAAIC,EAAI,GAAIC,EAAI,GAC3BC,EAAI,EAAGC,EAAI,EAAIC,EAAI,GAAIC,EAAI,GAC3BC,EAAI,EAAGC,EAAI,GAAIC,EAAI,GAAIC,EAAI,GAC3BC,EAAI,EAAGC,EAAI,GAAIC,EAAI,GAAIC,EAAI,GAQ/B,IANAnK,EAoKD,SAAoBA,GAClBA,EAAQA,EAAM4B,QAAQ,QAAQ,MAG9B,IAFA,IAAIqF,EAAU,GAELxD,EAAI,EAAGA,EAAIzD,EAAMQ,OAAQiD,IAAK,CAErC,IAAM5B,EAAI7B,EAAMyE,WAAWhB,GAEvB5B,EAAI,IACNoF,GAAWpD,OAAOC,aAAajC,GAExBA,EAAI,KAASA,EAAI,MACxBoF,GAAWpD,OAAOC,aAAcjC,GAAK,EAAK,KAC1CoF,GAAWpD,OAAOC,aAAkB,GAAJjC,EAAU,OAG1CoF,GAAWpD,OAAOC,aAAcjC,GAAK,GAAM,KAC3CoF,GAAWpD,OAAOC,aAAejC,GAAK,EAAK,GAAM,KACjDoF,GAAWpD,OAAOC,aAAkB,GAAJjC,EAAU,MAK9C,OAAOoF,EA3LAvC,CAAW1E,GAEnBZ,EAiID,SAA4BY,GAC1B,IAAIoK,EACEC,EAAiBrK,EAAMQ,OACvB8J,EAAqBD,EAAiB,EAEtCE,EAA0C,KADpBD,EAAsBA,EAAuB,IAAK,GACjC,GACvCE,EAAuBpE,MAAMmE,EAAe,GAC9CE,EAAgB,EAChBC,EAAa,EACjB,KAAOA,EAAaL,GAElBI,EAAiBC,EAAa,EAAG,EACjCF,EAFAJ,GAAcM,EAAYA,EAAa,GAAI,GAEjBF,EAAWJ,GAAepK,EAAMyE,WAAWiG,IAAaD,EAClFC,IAOF,OAJAD,EAAiBC,EAAa,EAAG,EACjCF,EAFAJ,GAAcM,EAAYA,EAAa,GAAI,GAElBF,EAAWJ,GAAe,KAAMK,EACzDD,EAAWD,EAAe,GAAKF,GAAgB,EAC/CG,EAAWD,EAAe,GAAKF,IAAiB,GACzCG,EArJJG,CAAmB3K,GAEvByF,EAAI,WAAYC,EAAI,WAAY7D,EAAI,WAAY8D,EAAI,UAE/CoD,EAAE,EAAEA,EAAE3J,EAAEoB,OAAOuI,GAAG,GACtBC,EAAGvD,EAAGwD,EAAGvD,EAAGwD,EAAGrH,EAAGsH,EAAGxD,EACrBF,EAAEmF,GAAGnF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIK,EAAI,YACzBzD,EAAEiF,GAAGjF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIM,EAAI,YACzBxH,EAAE+I,GAAG/I,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,GAAIO,EAAI,WACzB5D,EAAEkF,GAAGlF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIQ,EAAI,YACzB9D,EAAEmF,GAAGnF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIK,EAAI,YACzBzD,EAAEiF,GAAGjF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIM,EAAI,YACzBxH,EAAE+I,GAAG/I,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,GAAIO,EAAI,YACzB5D,EAAEkF,GAAGlF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIQ,EAAI,YACzB9D,EAAEmF,GAAGnF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIK,EAAI,YACzBzD,EAAEiF,GAAGjF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIM,EAAI,YACzBxH,EAAE+I,GAAG/I,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,IAAIO,EAAI,YACzB5D,EAAEkF,GAAGlF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,IAAIQ,EAAI,YACzB9D,EAAEmF,GAAGnF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,IAAIK,EAAI,YACzBzD,EAAEiF,GAAGjF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,IAAIM,EAAI,YACzBxH,EAAE+I,GAAG/I,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,IAAIO,EAAI,YAEzB7D,EAAEoF,GAAGpF,EADLC,EAAEkF,GAAGlF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,IAAIQ,EAAI,YAChB1H,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIS,EAAI,YACzB7D,EAAEkF,GAAGlF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIU,EAAI,YACzB5H,EAAEgJ,GAAGhJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,IAAIW,EAAI,WACzBhE,EAAEmF,GAAGnF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIY,EAAI,YACzBlE,EAAEoF,GAAGpF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIS,EAAI,YACzB7D,EAAEkF,GAAGlF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,IAAIU,EAAI,UACzB5H,EAAEgJ,GAAGhJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,IAAIW,EAAI,YACzBhE,EAAEmF,GAAGnF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIY,EAAI,YACzBlE,EAAEoF,GAAGpF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIS,EAAI,WACzB7D,EAAEkF,GAAGlF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,IAAIU,EAAI,YACzB5H,EAAEgJ,GAAGhJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,GAAIW,EAAI,YACzBhE,EAAEmF,GAAGnF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIY,EAAI,YACzBlE,EAAEoF,GAAGpF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,IAAIS,EAAI,YACzB7D,EAAEkF,GAAGlF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIU,EAAI,YACzB5H,EAAEgJ,GAAGhJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,GAAIW,EAAI,YAEzBjE,EAAEqF,GAAGrF,EADLC,EAAEmF,GAAGnF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,IAAIY,EAAI,YAChB9H,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIa,EAAI,YACzBjE,EAAEmF,GAAGnF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIc,EAAI,YACzBhI,EAAEiJ,GAAGjJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,IAAIe,EAAI,YACzBpE,EAAEoF,GAAGpF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,IAAIgB,EAAI,YACzBtE,EAAEqF,GAAGrF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIa,EAAI,YACzBjE,EAAEmF,GAAGnF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIc,EAAI,YACzBhI,EAAEiJ,GAAGjJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,GAAIe,EAAI,YACzBpE,EAAEoF,GAAGpF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,IAAIgB,EAAI,YACzBtE,EAAEqF,GAAGrF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,IAAIa,EAAI,WACzBjE,EAAEmF,GAAGnF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIc,EAAI,YACzBhI,EAAEiJ,GAAGjJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,GAAIe,EAAI,YACzBpE,EAAEoF,GAAGpF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIgB,EAAI,UACzBtE,EAAEqF,GAAGrF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIa,EAAI,YACzBjE,EAAEmF,GAAGnF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,IAAIc,EAAI,YACzBhI,EAAEiJ,GAAGjJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,IAAIe,EAAI,WAEzBrE,EAAEsF,GAAGtF,EADLC,EAAEoF,GAAGpF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIgB,EAAI,YAChBlI,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIiB,EAAI,YACzBrE,EAAEoF,GAAGpF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIkB,EAAI,YACzBpI,EAAEkJ,GAAGlJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,IAAImB,EAAI,YACzBxE,EAAEqF,GAAGrF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIoB,EAAI,YACzB1E,EAAEsF,GAAGtF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,IAAIiB,EAAI,YACzBrE,EAAEoF,GAAGpF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,GAAIkB,EAAI,YACzBpI,EAAEkJ,GAAGlJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,IAAImB,EAAI,YACzBxE,EAAEqF,GAAGrF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIoB,EAAI,YACzB1E,EAAEsF,GAAGtF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIiB,EAAI,YACzBrE,EAAEoF,GAAGpF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,IAAIkB,EAAI,YACzBpI,EAAEkJ,GAAGlJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,GAAImB,EAAI,YACzBxE,EAAEqF,GAAGrF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,IAAIoB,EAAI,YACzB1E,EAAEsF,GAAGtF,EAAEC,EAAE7D,EAAE8D,EAAEvG,EAAE2J,EAAE,GAAIiB,EAAI,YACzBrE,EAAEoF,GAAGpF,EAAEF,EAAEC,EAAE7D,EAAEzC,EAAE2J,EAAE,IAAIkB,EAAI,YACzBpI,EAAEkJ,GAAGlJ,EAAE8D,EAAEF,EAAEC,EAAEtG,EAAE2J,EAAE,GAAImB,EAAI,WACzBxE,EAAEqF,GAAGrF,EAAE7D,EAAE8D,EAAEF,EAAErG,EAAE2J,EAAE,GAAIoB,EAAI,YACzB1E,EAAEuF,GAAYvF,EAAEuD,GAChBtD,EAAEsF,GAAYtF,EAAEuD,GAChBpH,EAAEmJ,GAAYnJ,EAAEqH,GAChBvD,EAAEqF,GAAYrF,EAAEwD,GAGjB,OAAO8B,GAAUxF,GAAGwF,GAAUvF,GAAGuF,GAAUpJ,GAAGoJ,GAAUtF,GAzFlBuF,CAAUlL,IA4FjD,SAASyI,GAAW0C,EAAgBC,GAClC,OAAQD,GAAQC,EAAeD,IAAU,GAAGC,EAG9C,SAASJ,GAAYK,EAAYC,GAC/B,IAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAMpB,OALAF,EAAY,WAALJ,EACPK,EAAY,WAALJ,EAGPK,GAAgB,WAALN,IAAuB,WAALC,IAF7BC,EAAY,WAALF,IACPG,EAAY,WAALF,GAGa,WAAVK,EAAuBF,EAAMC,EAEnCH,EAAMC,EACM,WAAVG,EACgB,WAAVA,EAAuBF,EAAMC,EAEnB,WAAVC,EAAuBF,EAAMC,EAG/BC,EAAUF,EAAMC,EAS5B,SAASd,GAAGnF,EAAWC,EAAW7D,EAAW8D,EAAWvG,EAAWwJ,EAAWgD,GAE5E,OADAnG,EAAIuF,GAAYvF,EAAGuF,GAAYA,GANjC,SAAW5L,EAAW+H,EAAWK,GAAqB,OAAQpI,EAAI+H,GAAQ/H,EAAKoI,EAMlCqE,CAAEnG,EAAG7D,EAAG8D,GAAIvG,GAAIwM,IACpDZ,GAAYvC,GAAWhD,EAAGmD,GAAIlD,GAGvC,SAASmF,GAAGpF,EAAWC,EAAW7D,EAAW8D,EAAWvG,EAAWwJ,EAAWgD,GAE5E,OADAnG,EAAIuF,GAAYvF,EAAGuF,GAAYA,GAVjC,SAAW5L,EAAW+H,EAAWK,GAAqB,OAAQpI,EAAIoI,EAAML,GAAMK,EAUjCsE,CAAEpG,EAAG7D,EAAG8D,GAAIvG,GAAIwM,IACpDZ,GAAYvC,GAAWhD,EAAGmD,GAAIlD,GAGvC,SAASoF,GAAGrF,EAAWC,EAAW7D,EAAW8D,EAAWvG,EAAWwJ,EAAWgD,GAE5E,OADAnG,EAAIuF,GAAYvF,EAAGuF,GAAYA,GAdjC,SAAW5L,EAAW+H,EAAWK,GAAqB,OAAQpI,EAAI+H,EAAIK,EAczBuE,CAAErG,EAAG7D,EAAG8D,GAAIvG,GAAIwM,IACpDZ,GAAYvC,GAAWhD,EAAGmD,GAAIlD,GAGvC,SAASqF,GAAGtF,EAAWC,EAAW7D,EAAW8D,EAAWvG,EAAWwJ,EAAWgD,GAE5E,OADAnG,EAAIuF,GAAYvF,EAAGuF,GAAYA,GAlBjC,SAAW5L,EAAW+H,EAAWK,GAAqB,OAAQL,GAAK/H,GAAMoI,GAkB5BwE,CAAEtG,EAAG7D,EAAG8D,GAAIvG,GAAIwM,IACpDZ,GAAYvC,GAAWhD,EAAGmD,GAAIlD,GA0BvC,SAASuF,GAAUE,GACjB,IAAyDc,EAArDC,EAAiB,GAAIC,EAAqB,GAC9C,IAAKF,EAAS,EAAEA,GAAQ,EAAEA,IAGxBC,IADAC,EAAqB,KADZhB,IAAiB,EAAPc,EAAa,KACChK,SAAS,KACWmK,OAAOD,EAAmB3L,OAAO,EAAE,GAE1F,OAAO0L,ECpKF,IAAMG,GAAyB,WAClC,MAAkCnO,mBAAoB,CAClD8C,QAAS,GACTC,QAAS,KAFb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAUA,OACI,qCACI,sDACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQY,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,OACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SAfH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAOiB,QAAS6H,GAAyB9I,WAiBvE,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,MACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAU0B,QACjBG,UAAU,a,kBCxCrBkL,GACQ,SAACC,EAAgBC,GACpC,OAAID,GAAWC,EAGND,IAAWC,EACHD,GAEV,IAAIE,IAAkBC,8BAA8BH,EAAQC,GAAOvK,WALlE,IASV,SAAS0K,GAAmBnH,EAAYoH,EAAYC,GACnDrH,EAAMsH,OAAOD,EAAO,EAAGD,GAGxB,SAASG,GAAoBvH,EAAYwH,EAAeH,GACvD,IAAK,IAAItM,EAAI,EAAGA,EAAIyM,EAASxM,OAAQD,IAEpCiF,EAAMsH,OAAOD,EAAQtM,EAAG,EAAGyM,EAASzM,I,IAQhCkM,G,+GACF,SAAqCQ,EAAiBC,GAOlD,IANA,IAAIC,EACCF,EAAQzM,QAAU0M,EAAQ1M,OAASyM,EAAQzM,OAAS0M,EAAQ1M,OAGnE4M,EAAoD,GAEzClN,EAAI,EAAGA,EAHC,EAGqBA,IACtC,CAGI,IAFA,IAAImN,EAA4B,EAEvB9M,EAAI,EAAGA,EAAI4M,EAAuB5M,IAC3C,CACI,IAAI+M,EAA0B,IAANpN,EAAUK,EAAI0M,EAAQzM,OAASD,EAAI,EACvDgN,EAA0B,IAANrN,EAAUK,EAAI2M,EAAQ1M,OAASD,EAAI,EAK3D,GAHsB0M,EAAQK,KACRJ,EAAQK,GAG9B,CACIF,EAA4B9M,EAC5B,OAIR,IAAIiN,OAAkC,EAE5B,IAANtN,GAEAsN,EAA6BP,EAAQb,OAAO,EAAGiB,GAC/CJ,EAAUA,EAAQb,OAAOiB,GACzBH,EAAUA,EAAQd,OAAOiB,KAGzBG,EAA6BP,EAAQb,OAAOa,EAAQzM,OAAS6M,GAC7DJ,EAAUA,EAAQb,OAAO,EAAGa,EAAQzM,OAAS6M,GAC7CH,EAAUA,EAAQd,OAAO,EAAGc,EAAQ1M,OAAS6M,IAGjD,IAAII,EAA+B,IAAIC,IAEnC,EACA,CACI,IAAIC,GAAYH,GAChB,IAAIG,GAAYH,KAIxBJ,EAA+B3L,KAE3BgM,GAIR,IAAIG,EAAqC,GAErCC,EAAuBC,KAAKC,uCAE5Bd,EAASC,EAAS,CAAE,EAAG,IAG3BY,KAAKE,2CAEDf,EACAC,EACAW,EACAD,GAGJ,IAAK,IAAI1N,EAAI,EAAGA,EAAIkN,EAA+B5M,OAAQN,IAC3D,CAEIyM,GAERiB,EAH2CR,EAA+BlN,GAKvD,IAANA,EAAU,EAAI0N,EAAgBpN,QAMvC,OAFkB,IAAIyN,GAAgBL,K,oDAK1C,SAA+CX,EAAiBC,EAAiBgB,GAC7E,IAAIL,EAA0C,GAE1CM,EAA2BL,KAAKM,6BAEhCnB,EACAC,GAIAmB,EAD2BF,EAAyBG,SAAS,GAAGC,KACf/N,OAErD,GAA8B,IAA1B6N,EAEA,OAAOR,EAGXA,EAAqBpM,KAAK0M,GA2C1B,IAzCA,IAAIG,EAAWH,EAAyBG,SACpCE,EAAWF,EAAS,GACpBG,EAAWH,EAAS,GAiCpBI,EACJ,CAhCuCZ,KAAKC,uCAExCd,EAAQb,OAAO,EAAGoC,EAASG,UAC3BzB,EAAQd,OAAO,EAAGqC,EAASE,UAC3B,CACIT,EAAgB,GAChBA,EAAgB,KAIcJ,KAAKC,uCAEvCd,EAAQb,OAEJoC,EAASG,SAAWN,GAExBnB,EAAQd,OAEJqC,EAASE,SAAWN,GAExB,CACIH,EAAgB,GACVM,EAASG,SACTN,EAENH,EAAgB,GACVO,EAASE,SACTN,KAUL9N,EAAI,EAAGA,EAAImO,EAAsClO,OAAQD,IAClE,CAEIwM,GAERc,EAHmCa,EAAsCnO,GAKtD,IAANA,EAAU,EAAIsN,EAAqBrN,QAI5C,IAAKD,EAAI,EAAGA,EAAI4N,EAAyBG,SAAS9N,OAAQD,IAC1D,CACkB4N,EAAyBG,SAAS/N,GACxCoO,UAAYT,EAAgB3N,GAGxC,OAAOsN,I,0CAGX,SAAqCZ,EAAiBC,GAwBlD,IAvBA,IAAIsB,EAAW,IAAIb,GAAY,GAAI,GAC/Bc,EAAW,IAAId,GAAY,GAAI,GAE/BiB,EAAc,IAAIlB,IAElB,EACA,CACIc,EAAUC,IAIdI,EAAkB5B,EAAQzM,OAC1BsO,EAAkB5B,EAAQ1M,OAE1BuO,EAAmC,GACnCC,EAAuC,GAEvCC,EAAsC,EAMjC1O,EAAI,EAAGA,EAAIsO,EAAiBtO,IACrC,CACIyO,EAA6BD,EAC7BA,EAAyB,GAEzB,IAAK,IAAI1I,EAAI,EAAGA,EAAIyI,EAAiBzI,IACrC,CAOQ,IAAI6I,EANR,GAAIjC,EAAQ1M,KAAO2M,EAAQ7G,GAEvB0I,EAAuB1I,GAAK,OAmB5B,GAVI6I,EAHM,IAAN3O,GAAiB,IAAN8F,EAGC,EAKA2I,EAA2B3I,EAAI,GAAK,EAGpD0I,EAAuB1I,GAAK6I,EAExBA,EAAYD,EAChB,CAEI,IAAIE,EAAa5O,GADjB0O,EAAsCC,GACqB,EACvDE,EAA8BnC,EAAQvJ,UAEtCyL,EACA5O,EAAI,GAGRiO,EAASD,KAAOa,EAChBZ,EAASG,SAAWQ,EAEpBV,EAASF,KAAOa,EAChBX,EAASE,SAAWtI,EAAI4I,EAAsC,IAM9E,OAAOL,I,wDAGX,SACI3B,EACAC,EACAmC,EACAzB,GAGAjB,GAEL0C,EACS,IAAI3B,IAEA,EACA,CACI,IAAIC,GAAY,GAAI,GACpB,IAAIA,GAAY,GAAI,KAG5B,GAGJ0B,EAA4B5N,KAExB,IAAIiM,IAEA,EACA,CACI,IAAIC,GAAY,GAAIV,EAAQzM,QAC5B,IAAImN,GAAY,GAAIT,EAAQ1M,WAOxC,IAFA,IAAI8O,EAAOD,EAA4B7O,OAAS,EAEvC+O,EAAI,EAAGA,EAAID,EAAMC,IAC1B,CACI,IAAIC,EAA2BH,EAA4BE,GACvDE,EAA4BJ,EAA4BE,EAAI,GAEhEzB,KAAK4B,yCAEDzC,EACAC,EACAuC,EACAD,EACA5B,GAGJA,EAAgBnM,KAAKgO,GAGzB,IA1SyB5C,EA0SrB8C,EAA0B/B,EAAgBpN,OAAS,EAEnDoP,EAAmBhC,EAAgB+B,IAIE,IAArCC,EAAiBC,iBAC+B,IAA7CD,EAAiBtB,SAAS,GAAGC,KAAK/N,SAjThBqM,EAoTK8C,EAAjB/B,EAnTdd,OAAOD,EAAO,M,sDAuTjB,SACII,EACAC,EACAuC,EACAD,EACA5B,GAGA,IAAIkC,EAA+BN,EAAyBlB,SAAS,GAAGC,KAAK/N,OAEzEuP,EACJ,CACI,CACIP,EAAyBlB,SAAS,GAAGK,SAC/BmB,EAENN,EAAyBlB,SAAS,GAAGK,SAC/BmB,GAEV,CACIL,EAA0BnB,SAAS,GAAGK,SACtCc,EAA0BnB,SAAS,GAAGK,WAI1CqB,EAAoB,IAAIrC,GAExBV,EAAQvJ,UAEJqM,EAAiC,GAAG,GACpCA,EAAiC,GAAG,IAExCA,EAAiC,GAAG,IAGpCE,EAAmB,IAAItC,GAEvBT,EAAQxJ,UAEJqM,EAAiC,GAAG,GACpCA,EAAiC,GAAG,IAExCA,EAAiC,GAAG,IAGpCG,EAAsB,IAAIxC,IAE1B,EACA,CACIsC,EACAC,KAMJC,EAAoB5B,SAAS,GAAGC,KAAK/N,OAAS,GAC3C0P,EAAoB5B,SAAS,GAAGC,KAAK/N,OAAS,IAGjDoN,EAAgBnM,KAAKyO,O,KAK3BjC,G,WACL,WAAYkC,GACX,0BAIMA,kBAJP,EACCrC,KAAKqC,aAAeA,E,6CAOlB,WAGI,IAFA,IAAIvB,EAAc,GAETW,EAAI,EAAGA,EAAIzB,KAAKqC,aAAa3P,OAAQ+O,IAC9C,CAIIX,GAHkBd,KAAKqC,aAAaZ,GACEtN,WAK1C,OAAO2M,M,KAITjB,GAEL,WAAYY,GAAqC,IAAvBI,EAAsB,uDAAH,EAAG,0BAKzCJ,UALyC,OAMzCI,cANyC,EAC/Cb,KAAKS,KAAOA,EACZT,KAAKa,SAAWA,GAOZjB,G,WAEL,WAAYmC,EAAsBvB,GAAgB,0BAK3CuB,qBAL0C,OAM1CvB,cAN0C,EAChDR,KAAK+B,gBAAkBA,EACvB/B,KAAKQ,SAAWA,E,6CAMjB,WACO,IAAIM,EAAc,GAgBlB,OAd6B,IAAzBd,KAAK+B,iBAELjB,EAAcd,KAAKQ,SAAS,GAAGC,KAC/BK,EAAcd,KAAKsC,oBAAoBxB,KAIhDA,GAAe,gCACfA,GAAed,KAAKsC,oBAAoBtC,KAAKQ,SAAS,GAAGC,MACzDK,GAAe,wCACfA,GAAed,KAAKsC,oBAAoBtC,KAAKQ,SAAS,GAAGC,MACzDK,GAAe,WAGHA,I,iCAGd,SAA2ByB,GAepB,OAdkBA,EAAezO,QAE7B,IAAK,SACPA,QAEE,IAAK,QACPA,QAEE,IAAK,QACPA,QAEE,KAAM,c,KCpdLqM,GAA4B,WACrC,IAmCoBjO,EAnCpB,EAAkC9B,mBAAoB,CAClDqO,OAAQ,GACRC,MAAO,GACP8D,YAAa,KAHjB,mBAAO/Q,EAAP,KAAkBC,EAAlB,KAUM+Q,EAAkB,SAAChE,EAAgBC,GAJpB,IAACgE,EAKlBhR,EAAa,2BACND,GADK,IAERgN,SACAC,QACA8D,YAAa,gBATCE,EAWL,WACThR,EAAa,2BACND,GADK,IAERgN,SACAC,QACA8D,YAAahE,GAAqCC,EAAQC,OAflEiE,OAAOC,WAAWF,EAAQ,IA8B9B,OACI,qCACI,0EACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQpQ,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,cACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUgN,OACjBtM,SApBG,SAACC,GACpBqQ,EAAgBrQ,EAAEC,cAAcH,OAAS,GAAIT,EAAUiN,YAuB/C,cAAC,IAAD,CAAQpM,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,aACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUiN,MACjBvM,SA1BE,SAACC,GACnBqQ,EAAgBhR,EAAUgN,OAAQrM,EAAEC,cAAcH,OAAS,YA6BvD,6CACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAQI,GAAG,KAAK1B,UAAU,OAA1B,SACI,qBAAKA,UAAU,gDAAgDiS,MAAO,CAACC,OAAQ,KAA/E,SACI,qBAAKC,wBAAyB,CAAEC,QA9BhC9Q,EA8BmDT,EAAU+Q,YA9B3CtQ,EAAM4B,QAAQ,MAAO,SAASA,QAAQ,QAAS,8BC9C5EmP,GACD,SAAC/Q,EAAegR,GAAhB,OAGZ,SAAoBhR,EAAegR,GACjC,IAAIhR,EACF,MAAO,GAGT,IACE,OAAOiR,KAAKC,UAYhB,SAAmBlR,GACjB,OAAOiR,KAAKE,MAAMnR,EAAM4B,QAAQ,MAAO,KAbfwP,CAAUpR,GAAQ,KAAM,GAC3C4B,QAAQ,mBAAmB,SAACxC,GAAD,OAelC,SAAsBY,EAAegR,GACnC,OAAOhR,EAAM4B,QAAQ,UAAU,SAACxC,GAAD,OAAO4R,EAAYK,WAAWjS,OAhBtBkS,CAAalS,EAAG4R,MAClDpP,QAAQ,aAAa,SAACxC,GAAD,OAkB5B,SAAsBY,EAAegR,GACnC,OAAOhR,EAAM4B,QAAQ,QAASoP,GAnBGO,CAAanS,EAAG4R,MAC5CpP,QAAQ,YAAY,SAACxC,GAAD,OAAOoS,GAAcpS,EAAG4R,MAC5CpP,QAAQ,aAAa,SAACxC,GAAD,OAAOoS,GAAcpS,EAAG4R,MAC7CpP,QAAQ,YAAY,SAACxC,GAAD,OAuB3B,SAAoBY,EAAegR,GACjC,OAAOhR,EAAM4B,QAAQ,QAAQ,SAAC6P,GAAD,OAAOT,EAAY,SAxBhBU,CAAWtS,EAAG4R,MAE5C,MAAM9Q,GACN,OAAQA,EAAYyR,SAjBiFC,CAAW5R,EAAOgR,IAiC3H,SAASQ,GAAcxR,EAAegR,GACpC,OAAOhR,EAAM4B,QAAQ,QAAQ,SAAC6P,GAAD,OAAOT,GAAY,MAAOpP,QAAQ,SAAS,SAAC6P,GAAD,OAAOT,GAAY,MC1BtF,IAAMa,GAA0B,WACnC,IAyBoB7R,EAzBpB,EAAkC9B,mBAAoB,CAClD8C,QAAS,GACTC,QAAS,KAFb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAKMsS,EAAkB,SAAC9R,EAAkCtB,GACvD,MAAM,eAAN,OAAsBA,EAAtB,YAAmCsB,EAAnC,YAGEgR,EAAc,SAAChR,GACjB,OAAc,OAAVA,EACO8R,EAAgB,OAAQ,eAM5BA,EAAgB9R,EAHO,kBAAVA,GAAuC,mBAAVA,EAC3C,cACA,iBAWV,OACI,qCACI,uDACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,OACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SAjBH,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAOiB,QAAS8P,GAA0B/Q,EAAOgR,WAmB/E,cAAC,IAAD,CAAQ5Q,GAAG,IAAI1B,UAAU,OAAzB,SACI,qBAAKA,UAAU,gDAAgDiS,MAAO,CAACC,OAAQ,KAA/E,SACI,qBAAKC,wBAAyB,CAAEC,QAlBhC9Q,EAkBmDT,EAAU0B,QAlB3CjB,EAAM4B,QAAQ,MAAO,SAASA,QAAQ,QAAS,+BCnC5EmQ,GACF,SAAC/R,GAAD,OAoBX,SAAyBA,GACvB,IAAKA,EACH,OAAO,KAGT,IACE,OAAOgS,GAMX,SAAmBhS,GACjB,OAAOiR,KAAKE,MAAMnR,EAAM4B,QAAQ,MAAO,KAPpBwP,CAAUpR,IAC3B,MAAME,GACN,OAAO,MA5BsC+R,CAAgBjS,IAoCjE,SAASgS,GAAUhS,GACjB,MAAO,CACLkS,OAAQC,GAAcnS,IAI1B,SAASmS,GAAcnS,GACrB,OAAOoS,OAAOC,KAAKrS,GAAOb,KAAI,SAAAmT,GAAG,MAAK,CACpCpV,KAAMoV,EACNtS,MAAOuS,GAASvS,EAAMsS,QAI1B,SAASC,GAASvS,GAChB,GAAc,OAAVA,EACF,OAAOwS,GAAU,KAAM,QAEzB,GAAIpM,MAAMqM,QAAQzS,GAChB,OAAOwS,GAAWxS,EAAab,IAAIoT,IAAW,SAEhD,IAAMG,SAAc1S,EACpB,MAAa,WAAT0S,GAA8B,WAATA,GAA8B,WAATA,GAA8B,YAATA,EAC1DF,GAAUxS,EAAO,SAEnBwS,GAAUR,GAAUhS,GAAQ,UAGrC,SAASwS,GAAUxS,EAAY0S,GAC7B,MAAO,CACL1S,QACA0S,OACAC,UAAU,GC3DP,I,MCEKC,GAsBAC,GDxBCC,GAAuB,WAChC,MAAkC5U,mBAAoB,CAClD8C,QAAS,GACT+R,WAAY,OAFhB,mBAAOxT,EAAP,KAAkBC,EAAlB,KAWA,OADAwT,QAAQC,IAAI1T,EAAUwT,YAElB,qCACI,oDACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQ3S,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIqB,MAAM,OACNmB,UAAQ,EACRC,KAAM,GACNnB,MAAOT,EAAUyB,QACjBf,SAhBD,SAACC,GAChB,IAAMF,EAAQE,EAAEC,cAAcH,OAAS,GACvCR,EAAa,2BAAKD,GAAN,IAAiByB,QAAShB,EAAO+S,WAAYhB,GAAsB/R,WAkBvE,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,qBAAKA,UAAU,gDAAgDiS,MAAO,CAACC,OAAQ,gBCpCtFsC,GACA,SAAClT,EAAemT,EAAYC,GAA5B,OAGb,SAAqBpT,EAAemT,EAAYC,GAC/C,GAAIxP,MAAM5D,GACT,OAAO,EAER,OAAOA,EAAQqT,GAAWF,GAAQE,GAAWD,GAPgBE,CAAYtT,EAAOmT,EAAMC,K,SAU3ER,K,cAAAA,E,aAAAA,E,mBAAAA,E,mBAAAA,E,mBAAAA,E,mBAAAA,E,mBAAAA,E,kBAAAA,E,gBAAAA,E,sBAAAA,E,eAAAA,E,eAAAA,E,aAAAA,E,YAAAA,E,cAAAA,E,cAAAA,Q,cAsBAC,K,2BAAAA,E,aAAAA,Q,KAKL,IAAMU,IAA0C,qBACrDV,GAASW,YAAc,CAACZ,GAAKa,IAAKb,GAAKlN,EAAGkN,GAAKc,GAAId,GAAKe,GAAIf,GAAKgB,GAAIhB,GAAKiB,GAAIjB,GAAKkB,GAAIlB,GAAKmB,KADvC,eAErDlB,GAASmB,KAAO,CAACpB,GAAKqB,KAAMrB,GAAKsB,GAAItB,GAAKhK,EAAGgK,GAAKuB,EAAGvB,GAAK9M,EAAG8M,GAAKjN,EAAGiN,GAAKwB,EAAGxB,GAAKzL,IAF7B,IAM1CkN,GAAYjC,OAAOC,KAAKkB,IAE/BF,IAAsC,qBAE1CT,GAAKa,IAAM,GAF+B,eAG1Cb,GAAKlN,EAAI,GAHiC,eAI1CkN,GAAKc,GAAK,MAJgC,eAK1Cd,GAAKe,GAAK,SALgC,eAM1Cf,GAAKgB,GAAK,YANgC,eAO1ChB,GAAKiB,GAAK,eAPgC,eAQ1CjB,GAAKkB,GAAK,kBARgC,eAS1ClB,GAAKmB,GAAK,oBATgC,eAY1CnB,GAAKqB,KAAO,GAZ8B,eAa1CrB,GAAKsB,GAAK,KAbgC,eAc1CtB,GAAKhK,EAAI,KAdiC,eAe1CgK,GAAKuB,EAAI,KAfiC,eAgB1CvB,GAAK9M,EAAI,MAhBiC,eAiB1C8M,GAAKjN,EAAI,OAjBiC,eAkB1CiN,GAAKwB,EAAI,WAlBiC,eAmB1CxB,GAAKzL,EAAI,YAnBiC,IC1C/BmN,GAA0B,WACnC,OACI,qCACI,uDACCD,GAAUlV,KAAI,SAAAC,GAAC,OACZ,eAAC,IAAD,CAASmV,OAAO,UAAU7V,UAAU,OAApC,UACI,cAAC,IAAD,CAAe8V,WAAW,UAAU9V,UAAU,aAA9C,SAA4DU,IAC5D,cAAC,IAAD,CAAaV,UAAU,OAAvB,SACI,cAAC,GAAD,CAAkB+V,MAAOlB,GAAWnU,iBAmBtDsV,GAAqD,SAACC,GACxD,MAAkCzW,mBAAoB,CAClD8B,MAAO,EACPmT,KAAMwB,EAAOF,MAAM,GACnBrB,GAAIuB,EAAOF,MAAM,GACjBnU,OAAQ,IAJZ,mBAAOf,EAAP,KAAkBC,EAAlB,KAOMoV,EAAY,SAAC1U,GACf,IAAMuC,EAAY,2BAAQlD,GAAR,kBAAoBW,EAAEwC,OAAOxF,KAAOgD,EAAEC,cAAcH,QACtER,EAAa,2BAAKiD,GAAN,IAAoBnC,OAAQ4S,GAA2BzQ,EAAazC,MAAOyC,EAAa0Q,KAAM1Q,EAAa2Q,QAGrHyB,EAAe,SAAC3X,EAAc8C,GAChC4U,EAAU,CACNlS,OAAQ,CAACxF,QACTiD,cAAe,CAACH,YAIxB,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQI,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIxB,KAAK,QACL6C,MAAM,QACNC,MAAOT,EAAUS,MAAMiC,WACvBhC,SAAU2U,EACVlC,KAAK,aAIb,cAAC,IAAD,CAAQtS,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,GAAD,CACIxB,KAAK,OACLuX,MAAOE,EAAOF,MACdxU,SAAU4U,MAIlB,cAAC,IAAD,CAAQzU,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,IAAD,CACIxB,KAAK,SACL6C,MAAM,SACNC,MAAOT,EAAUe,OAAO2B,WACxByQ,KAAK,SACLtR,UAAU,MAIlB,cAAC,IAAD,CAAQhB,GAAG,IAAI1B,UAAU,OAAzB,SACI,cAAC,GAAD,CACIxB,KAAK,KACLuX,MAAOE,EAAOF,MACdxU,SAAU4U,YAkB5BC,GAAyE,SAACH,GAC5E,MAAkCzW,mBAAwB,CACtD8B,MAAO2U,EAAOF,MAAM,KADxB,mBAAOlV,EAAP,KAAkBC,EAAlB,KASA,OACI,mCACI,eAAC,IAAD,CAAauV,OAAK,EAACrW,UAAU,QAA7B,UACI,cAAC,IAAD,UAAoBa,EAAUS,QAC9B,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAiBd,IAAI,SAASwT,KAAK,SAAShU,UAAU,uBAEzDiW,EAAOF,MAAMtV,KAAI,SAAAC,GAAC,OACf,cAAC,IAAD,UACI,cAAC,IAAD,CACIF,IAAI,SACJwT,KAAK,SACL9T,QAAS,kBAlBnBoB,EAkBkCZ,EAjBhDI,EAAa,2BAAKD,GAAN,IAAiBS,gBAC7B2U,EAAO1U,SAAS0U,EAAOzX,KAAM8C,GAFhB,IAACA,GAmBUtB,UAAWa,EAAUS,QAAUZ,EAAI,SAAW,GAC9C,eAAcG,EAAUS,QAAUZ,EAAI,OAAS,GALnD,SAOKA,kBC3GpB4V,GACE,SAAC1T,GAAD,OAGf,SAAmBA,GACf,IAAKA,EAAM2T,SAAW3T,EAAM4T,OAAS5T,EAAM6T,KACvC,OAAO,KAGX,IAAMC,EAAc9T,EAAM6T,KAAO,GAAK,IAChCE,EAAiB/T,EAAM2T,QAAUG,EAAcA,GAAerT,KAAKuT,IAAI,EAAIF,EAAa9T,EAAM4T,MAAQ,IACtGK,EAaV,SAAyBH,EAAqBH,EAAgBC,EAAcG,GAIxE,IAHA,IAAMG,EAAqB,GACvBC,EAAUR,EAEL1U,EAAI,EAAGA,GAAK2U,EAAM3U,IAAK,CAC5B,IAAMmV,EAAM,IAAIC,KACVC,EAAO,IAAID,KAAKD,EAAIG,SAASH,EAAII,WAAavV,IAC9CwV,EAAWN,EAAUL,EACrBY,EAAYP,EAAUJ,EAAiBU,EAAWV,EAAiBU,EAAWN,EAC9EQ,EAAUD,EAAYD,EAC5BN,GAAWO,EAEXR,EAAM/T,KAAK,CACPoL,MAAOtM,EACPqV,OACAK,UACAD,YACAD,WACAN,YAIR,OAAOD,EAnCQU,CAAgBd,EAAa9T,EAAM2T,OAAQ3T,EAAM4T,KAAMG,GAChEc,EAqCV,SAAwBZ,GACpB,OAAOA,EAAOa,QAAO,SAACC,EAASC,GAAV,mBAAC,eACfD,GADc,IAEjBJ,QAASI,EAAQJ,QAAUK,EAAKL,QAChCD,UAAWK,EAAQL,UAAYM,EAAKN,UACpCD,SAAUM,EAAQN,SAAWO,EAAKP,cA1CxBQ,CAAehB,GAE7B,MAAO,CACHN,OAAQ3T,EAAM2T,OACdC,KAAM5T,EAAM4T,KACZC,KAAM7T,EAAM6T,KACZE,iBACAE,SACAY,SAnBwCK,CAAUlV,ICd1D,IAAImV,GAAU,EAEDC,GAA2B,WACpC,MAAkCxY,mBAAoB,CAClD+W,OAAQ,IACRC,KAAM,GACNC,KAAM,IACN7U,OAAQ,OAJZ,mBAAOf,EAAP,KAAkBC,EAAlB,KAQAoD,qBAAU,kBAAM4T,EAAUjX,KAAY,IAEtC,IAOMiX,EAAY,SAACjX,GACf,IAAMe,EAAS0U,GAAA,eAAkCzV,IACjDC,EAAa,2BAAKD,GAAN,IAAiBe,aASjC,OACI,qCACI,iDACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQF,GAAG,IAAX,SACI,cAAC,GAAD,CACI6U,OAAQ1V,EAAU0V,OAClBC,KAAM3V,EAAU2V,KAChBC,KAAM5V,EAAU4V,KAChBlV,SAfH,SAAC/C,EAAc8C,GAC5B,IAbkBwQ,EAaZ/N,EAAY,2BAAQlD,GAAR,kBAAoBrC,EAAO8C,IAC7CR,EAAa,eAAKiD,IAdA+N,EAeL,kBAAMgG,EAAU/T,IAdzBgU,IACAhG,OAAOkG,aAAaF,IAExBA,GAAUhG,OAAOC,WAAWF,EAAQ,UA0B3BjR,EAAUe,QACP,cAAC,IAAD,CAAQF,GAAG,IAAX,SACI,cAAC,GAAD,CAAuBE,OAAQf,EAAUe,cAIpDf,EAAUe,QACP,cAAC,IAAD,UACI,cAAC,IAAD,CAAQF,GAAG,KAAX,SACI,cAAC,GAAD,CAAqBE,OAAQf,EAAUe,iBAezDsW,GAAwD,SAACtV,GAC3D,OACI,qCACI,eAAC,IAAD,CAAQlB,GAAG,KAAK1B,UAAU,OAA1B,UACI,uBAAOmY,QAAQ,SAASnY,UAAU,aAAlC,yBAGA,cAAC,IAAD,UACI,cAAC,GAAD,CACIsB,MAAOsB,EAAM2T,OACb/X,KAAK,SACL+C,SAAUqB,EAAMrB,gBAK5B,cAAC,IAAD,CAAQG,GAAG,KAAK1B,UAAU,OAA1B,SACI,cAAC,GAAD,CAAwBxB,KAAK,OAAO8C,MAAOsB,EAAM4T,KAAMjV,SAAUqB,EAAMrB,aAG3E,eAAC,IAAD,CAAQG,GAAG,KAAK1B,UAAU,OAA1B,UACI,uBAAOmY,QAAQ,SAASnY,UAAU,aAAlC,oCAGA,eAAC,IAAD,WACI,cAAC,GAAD,CACIsB,MAAOsB,EAAM6T,KACbjY,KAAK,OACL+C,SAAUqB,EAAMrB,WAEpB,cAAC,IAAD,0BAkBd6W,GAAgE,SAACxV,GACnE,MAAkCpD,mBAAsC,CACpEgX,KAAM5T,EAAMtB,MAAQ,GACpB+W,WAAY,UAFhB,mBAAOxX,EAAP,KAAkBC,EAAlB,KAUMS,EAAW,SAAC/C,EAAc8C,GAC5B,IAAMyC,EAAY,2BAAQlD,GAAR,kBAAoBrC,EAAO8C,IAC7CR,EAAa,eAAKiD,IAPS,SAACyS,EAAc6B,GAC1C,IAAM/W,EAAuB,UAAf+W,EAAgC,GAAP7B,EAAYA,EACnD5T,EAAMrB,SAASqB,EAAMpE,KAAM8C,GAM3BgX,CAAuBvU,EAAayS,KAAMzS,EAAasU,aAG3D,OACI,qCACI,uBAAOF,QAAQ,OAAOnY,UAAU,aAAhC,uBAGA,eAAC,IAAD,WACI,cAAC,GAAD,CACIsB,MAAOT,EAAU2V,KACjBhY,KAAK,OACL+C,SAAUA,IAEd,cAAC,GAAD,CACI/C,KAAK,aACLgV,OAAQ,CAAC,QAAS,UAClBxT,UAAU,wBACVuB,SAAUA,WAkBxBgX,GAAyE,SAAC3V,GAC5E,MAAkCpD,mBAAwB,CACtD8B,MAAOsB,EAAM4Q,OAAO,KADxB,mBAAO3S,EAAP,KAAkBC,EAAlB,KASA,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAmBd,UAAW4C,EAAM5C,UAApC,SAAgDa,EAAUS,QAC1D,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAiBd,IAAI,SAASwT,KAAK,SAAShU,UAAU,uBAEzD4C,EAAM4Q,OAAO/S,KAAI,SAAAC,GAAC,OACf,cAAC,IAAD,UACI,cAAC,IAAD,CACIF,IAAI,SACJwT,KAAK,SACL9T,QAAS,kBAjBfoB,EAiB8BZ,EAhB5CI,EAAa,2BAAKD,GAAN,IAAiBS,gBAC7BsB,EAAMrB,SAASqB,EAAMpE,KAAM8C,GAFd,IAACA,GAkBMtB,UAAWa,EAAUS,QAAUZ,EAAI,SAAW,GAC9C,eAAcG,EAAUS,QAAUZ,EAAI,OAAS,GALnD,SAOKA,KARaA,aA2BpC8X,GAA2D,SAAC5V,GAC9D,MAAkCpD,mBAAmC,CACjEiZ,SAJa,MAGjB,mBAAO5X,EAAP,KAAkBC,EAAlB,KAkBA,OAdAoD,qBAAU,WACN6N,OAAOC,YAAW,WACdpP,EAAMhB,OAAOiV,OAAO/U,OAASjB,EAAU4X,UACnC3X,EAAa,2BAAKD,GAAN,IAAiB4X,SAAU5X,EAAU4X,SAV5C,SAYV,OAEJ,CAAC5X,IAEJqD,qBAAU,WACNpD,EAAa,2BAAKD,GAAN,IAAiB4X,SAjBhB,SAmBd,CAAC7V,EAAMhB,SAGN,eAAC,IAAD,CAAU8W,OAAK,EAACC,OAAK,EAArB,UACI,cAAC,IAAD,UACI,+BACI,oBAAIC,MAAM,QACV,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,0BAGR,eAAC,IAAD,WACI,+BACI,uBACA,6BAAI,cAAC,GAAD,CAAUtX,MAAO,IAAI2V,SACzB,wCACA,wCACA,wCACA,6BAAI,cAAC,GAAD,CAAY3V,MAAOsB,EAAMhB,OAAO2U,cAEvC3T,EAAMhB,OAAOiV,OAAOgC,MAAM,EAAGhY,EAAU4X,UAAUhY,KAAI,SAAAC,GAAC,OACnD,cAACoY,GAAD,eAAwDpY,GAAvBA,EAAEwW,KAAK3T,eAE3CX,EAAMhB,OAAOiV,OAAO/U,QAAUjB,EAAU4X,UACrC,qBAAIzY,UAAU,gBAAd,UACI,uBACA,uBACA,6BAAI,cAAC,GAAD,CAAYsB,MAAOsB,EAAMhB,OAAO6V,MAAMF,YAC1C,6BAAI,cAAC,GAAD,CAAYjW,MAAOsB,EAAMhB,OAAO6V,MAAMH,cAC1C,6BAAI,cAAC,GAAD,CAAYhW,MAAOsB,EAAMhB,OAAO6V,MAAMJ,aAC1C,iCAQlB0B,GAA8C,SAACrY,GACjD,OACI,+BACI,6BAAKA,EAAEyN,QACP,6BAAI,cAAC,GAAD,CAAU7M,MAAOZ,EAAEwW,SACvB,6BAAI,cAAC,GAAD,CAAY5V,MAAOZ,EAAE6W,YACzB,6BAAI,cAAC,GAAD,CAAYjW,MAAOZ,EAAE4W,cACzB,6BAAI,cAAC,GAAD,CAAYhW,MAAOZ,EAAE2W,aACzB,6BAAI,cAAC,GAAD,CAAY/V,MAAOZ,EAAEqW,gBAK/B+B,GAA6BE,eAAKD,IAMlCE,GAA+D,SAACrW,GAClE,OACI,cAAC,IAAD,CAAU8V,OAAK,EAAf,SACI,eAAC,IAAD,WACI,+BACI,oBAAI1Y,UAAU,KAAd,8BACA,oBAAIA,UAAU,KAAd,SAAmB,cAAC,GAAD,CAAYsB,MAAOsB,EAAMhB,OAAO+U,sBAEvD,+BACI,oBAAI3W,UAAU,KAAd,kCACA,oBAAIA,UAAU,KAAd,SAAmB,cAAC,GAAD,CAAYsB,MAAOsB,EAAMhB,OAAO6V,MAAMH,iBAE7D,+BACI,oBAAItX,UAAU,KAAd,iCACA,oBAAIA,UAAU,KAAd,SAAmB,cAAC,GAAD,CAAYsB,MAAOsB,EAAMhB,OAAO6V,MAAMJ,gBAE7D,+BACI,oBAAIrX,UAAU,KAAd,4BACA,oBAAIA,UAAU,KAAd,SAAmB,cAAC,GAAD,CAAYsB,MAAOsB,EAAMhB,OAAO6V,MAAMF,qBAWvE2B,GAA2C,SAACtW,GAK9C,OAAO,mCAAG,IAAIuW,KAAKC,kBAAajX,EAJU,CACtCkX,sBAAuB,EACvBC,sBAAuB,IAEyBC,OAAO3W,EAAMtB,UAG/DkY,GAAuC,SAAC5W,GAA6B,IAAD,IAKhE6W,EAAQ,IAAIN,KAAKO,eAAe,QAJU,CAC5CC,UAAW,SAG6CC,cAAchX,EAAMtB,OAC1EwV,EAAK,UAAG2C,EAAMI,MAAK,SAAAnZ,GAAC,MAAe,UAAXA,EAAEsT,eAArB,aAAG,EAAqC1S,MAC7CwY,EAAI,UAAGL,EAAMI,MAAK,SAAAnZ,GAAC,MAAe,SAAXA,EAAEsT,eAArB,aAAG,EAAoC1S,MAEjD,OAAO,qCAAGwV,EAAH,IAAWgD,MAahBC,GAA2C,SAACnX,GAC9C,MAAkCpD,mBAAoB,CAClD8B,MAAOsB,EAAMtB,MAAMiC,aADvB,mBAAO1C,EAAP,KAAkBC,EAAlB,KAUA,OACI,cAAC,IAAD,CACIkT,KAAK,OACL1S,MAAOT,EAAUS,MACjB9C,KAAMoE,EAAMpE,KACZ2F,GAAIvB,EAAMpE,KACV+C,SAZS,SAACC,GACd,IAAMF,EAAQE,EAAEC,cAAcH,MAC9BR,EAAa,2BAAKD,GAAN,IAAiBS,WAC7BsB,EAAMrB,SAASqB,EAAMpE,KAAMmU,WAAWrR,EAAM4B,QAAQ,IAAK,WC7WpD8W,GACD,SAAC1Y,GAAD,OAKZ,SAAsBA,GACpB,IACIiE,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EADpCC,EAAS,GAETjE,EAAI,EAER,KAAOA,EAAIP,EAAMQ,QAMf4D,GAJAH,EAAOjE,EAAMO,OAIE,EACf8D,GAAgB,EAAPJ,IAAa,GAJtBC,EAAOlE,EAAMO,OAIuB,EACpC+D,GAAgB,GAAPJ,IAAc,GAJvBC,EAAOnE,EAAMO,OAIwB,EACrCgE,EAAc,GAAPJ,EAEHP,MAAMM,GACRI,EAAOC,EAAO,GACLX,MAAMO,KACfI,EAAO,IAGTC,EAASA,EACPG,GAAWjE,OAAO0D,GAAQO,GAAWjE,OAAO2D,GAC5CM,GAAWjE,OAAO4D,GAAQK,GAAWjE,OAAO6D,GAGhD,OAAOC,EAhCgCI,CAAa5E,IAGhD2E,GAAa,oECInB,IAEagU,GAAoC,WAC7C,MAAkCza,mBAAoB,CAClD+C,QAAS,KADb,mBAAO1B,EAAP,KAAkBC,EAAlB,KAIMoZ,EAAqBC,sBA+B3B,OACI,qCACI,oEACA,sBAAKna,UAAU,OAAf,UACI,cAAC,IAAD,CAAQE,QAZC,WACjBga,EAAcvC,SAAWuC,EAAcvC,QAAQyC,SAWvC,yBACA,cAAC,IAAD,CACIpa,UAAU,OACVqa,MAAM,UACNC,UAAWzZ,EAAU0B,QACrBrC,QAbU,WACtBqa,UAAUC,UAAUC,UAAU5Z,EAAU0B,UAQhC,+BAQA,uBACIyR,KAAK,OACL/B,MAAO,CAACyI,QAAS,QACjBnZ,SA7CC,SAACC,GACd,GAAIA,EAAEwC,OAAO2W,MAAM7Y,OAAS,EAAG,CAC3BhB,EAAa,CAAEyB,QAAS,eAExB,IAAMqY,EAAOpZ,EAAEwC,OAAO2W,MAAM,GACtBE,EAAaD,EAAKE,KAAO,KAAO,KACtC,GAAID,EAfE,EAiBF,YADA/Z,EAAa,CAAEyB,QAAQ,iCAAD,OAhBpB,EAgBoB,0BAA8DsY,EAAWE,QAAQ,GAAjF,SAI1B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,kBAAkB,IAAIC,KAAK,CAACP,KACnCI,EAAOI,OAAS,WACZ,IAAIC,EAAcL,EAAOpZ,OACrB0Z,EAAQ,IAAIC,WAAWF,GAC3Bva,EAAa,CAAEyB,QAASyX,GAAoCsB,QA8BxDE,IAAKtB,OAGb,qBAAKla,UAAU,OAAf,SACI,cAACyb,GAAD,CAAoCna,MAAOT,EAAU0B,gBAU/DmZ,GAAgF,SAAC9Y,GACnF,OACI,qBAAK5C,UAAU,gDAAgDiS,MAAO,CAACC,OAAQ,KAA/E,SACI,qBAAKC,wBAAyB,CAAEC,OAAQxP,EAAMtB,YAKpDma,GAAqCzC,eAAK0C,ICpDnCC,GAAmB,WAC5B,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWnb,IACjC,cAAC,IAAD,CAAOib,KAAK,SAASE,UAAWC,KAChC,cAAC,IAAD,CAAUrH,GAAG,UAKnBqH,GAA6C,SAACnZ,GAChD,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgZ,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBD,EAAgBC,KAAOud,UAAW1H,KACrE,cAAC,IAAD,CAAOwH,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBE,EAAmBF,KAAOud,UAAW3I,KACxE,cAAC,IAAD,CAAOyI,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBG,EAAqBH,KAAOud,UAAWvM,KAC1E,cAAC,IAAD,CAAOqM,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBI,EAAkCJ,KAAOud,UAAWzZ,IACvF,cAAC,IAAD,CAAOuZ,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBK,EAAmBL,KAAOud,UAAWlG,KACxE,cAAC,IAAD,CAAOgG,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBM,EAAoBN,KAAOud,UAAW9D,KACzE,cAAC,IAAD,CAAO4D,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBO,EAAmBP,KAAOud,UAAWlY,IACxE,cAAC,IAAD,CAAOgY,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBQ,EAAqBR,KAAOud,UAAWxX,IAC1E,cAAC,IAAD,CAAOsX,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBS,EAAsBT,KAAOud,UAAWzW,IAC3E,cAAC,IAAD,CAAOuW,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBU,EAAwBV,KAAOud,UAAWtV,IAC7E,cAAC,IAAD,CAAOoV,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBW,EAA6BX,KAAOud,UAAW7B,KAClF,cAAC,IAAD,CAAO2B,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBY,EAAkBZ,KAAOud,UAAWnO,KACvE,cAAC,IAAD,CAAOiO,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBa,EAAmBb,KAAOud,UAAW3R,KACxE,cAAC,IAAD,CAAOyR,KAAI,UAAKhZ,EAAMoZ,MAAMzd,IAAjB,YAAwBc,EAAqBd,KAAOud,UAAW/S,KAC1E,cAAC,IAAD,CAAU2L,GAAG,UCrDV,SAASuH,KACtB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAcnc,OAAK,EAACE,UAAU,OAA9B,SACE,cAAC,GAAD,SCVR,IAYekc,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,GAAD,MAEFa,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.0e429a16.chunk.js","sourcesContent":["export interface Route {\r\n    url: string,\r\n    name: string,\r\n}\r\n\r\nexport const JsonViewerRoute: Route = { \r\n    url: \"json-viewer\", \r\n    name: \"Json Viewer\", \r\n}\r\n\r\nexport const JsonFormatterRoute: Route = { \r\n    url: \"json-formatter\", \r\n    name: \"Json Formatter\", \r\n}\r\n\r\nexport const TextDifferencesRoute: Route = { \r\n    url: \"text-differences\", \r\n    name: \"Differences Between Texts\", \r\n}\r\n\r\nexport const TranslitFromRussianToEnglishRoute: Route = { \r\n    url: \"translit-from-russian-to-english\", \r\n    name: \"Translit From Russian\", \r\n}\r\n\r\nexport const UnitConverterRoute: Route = { \r\n    url: \"unit-converter\", \r\n    name: \"Unit Converter\", \r\n}\r\n\r\nexport const LoanCalculatorRoute: Route = { \r\n    url: \"loan-calculator\", \r\n    name: \"Loan Calculator\", \r\n}\r\n\r\nexport const GuidGeneratorRoute: Route = { \r\n    url: \"guid-generator\", \r\n    name: \"Guid Generator\", \r\n}\r\n\r\nexport const UrlEncodeDecodeRoute: Route = { \r\n    url: \"url-encode-decode\", \r\n    name: \"Url Encode/Decode\", \r\n}\r\n\r\nexport const HtmlEncodeDecodeRoute: Route = { \r\n    url: \"html-encode-decode\", \r\n    name: \"Html Encode/Decode\", \r\n}\r\n\r\nexport const Base64EncodeDecodeRoute: Route = { \r\n    url: \"base64-encode-decode\", \r\n    name: \"Base64 Encode/Decode Text\", \r\n}\r\n\r\nexport const Base64EncodeFileOrImageRoute: Route = { \r\n    url: \"base64-encode-file-or-image\", \r\n    name: \"Base64 Encode File Or Image\", \r\n}\r\n\r\nexport const Md5GeneratorRoute: Route = { \r\n    url: \"md5-generator\", \r\n    name: \"MD5 Generator\", \r\n}\r\n\r\nexport const Sha1GeneratorRoute: Route = { \r\n    url: \"sha1-generator\", \r\n    name: \"SHA1 Generator\", \r\n}\r\n\r\nexport const Sha256GeneratorRoute: Route = { \r\n    url: \"sha256-generator\", \r\n    name: \"SHA256 Generator\", \r\n}\r\n\r\nexport const AllRoutes: Route[] = [\r\n    JsonViewerRoute,\r\n    JsonFormatterRoute,\r\n    TextDifferencesRoute,\r\n    TranslitFromRussianToEnglishRoute,\r\n    UnitConverterRoute,\r\n    LoanCalculatorRoute,\r\n    GuidGeneratorRoute,\r\n    UrlEncodeDecodeRoute,\r\n    HtmlEncodeDecodeRoute,\r\n    Base64EncodeDecodeRoute,\r\n    Base64EncodeFileOrImageRoute,\r\n    Md5GeneratorRoute,\r\n    Sha1GeneratorRoute,\r\n    Sha256GeneratorRoute,\r\n]","import { useState } from \"react\";\r\nimport { AllRoutes } from \"./Routes\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarToggler,\r\n    MDBNavbarBrand,\r\n    MDBCollapse,\r\n    MDBDropdown,\r\n    MDBDropdownToggle,\r\n    MDBDropdownMenu,\r\n    MDBDropdownItem,\r\n    MDBDropdownLink\r\n  } from \"mdb-react-ui-kit\";\r\n\r\nexport const Header: React.FC = () => {\r\n    const [showBasic, setShowBasic] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <MDBNavbar expand=\"lg\" dark bgColor=\"primary\">\r\n                <MDBContainer fluid>\r\n                    <MDBNavbarBrand href=\"/\">\r\n                        <MDBIcon className=\"mx-2 fa-1-5x\" icon=\"envelope\" />\r\n                        Olrix Tools\r\n                    </MDBNavbarBrand>\r\n\r\n                    <MDBNavbarToggler\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                        onClick={() => setShowBasic(!showBasic)}\r\n                    >\r\n                        <MDBIcon icon=\"bars\" fas />\r\n                    </MDBNavbarToggler>\r\n\r\n                    <MDBCollapse navbar show={showBasic}>\r\n                        <MDBNavbarNav right fullWidth={false} className=\"mb-2 mb-lg-0\">\r\n                            <MDBNavbarItem>\r\n                                <MDBDropdown>\r\n                                    <MDBDropdownToggle tag=\"a\" className=\"nav-link\">\r\n                                        Choose tools\r\n                                    </MDBDropdownToggle>\r\n                                    <MDBDropdownMenu>\r\n                                        {AllRoutes.map(x => (\r\n                                            <MDBDropdownItem key={x.url}>\r\n                                                <MDBDropdownLink href={`/tools/${x.url}/`}>{x.name}</MDBDropdownLink>\r\n                                            </MDBDropdownItem>\r\n                                        ))}\r\n                                    </MDBDropdownMenu>\r\n                                </MDBDropdown>\r\n                            </MDBNavbarItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </>\r\n    )\r\n}","import { MDBBtn, MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\"\r\nimport { useState } from \"react\";\r\nimport { AllRoutes } from \"./Routes\"\r\n\r\ninterface FormValue {\r\n    search: string,\r\n}\r\n\r\nexport const Main: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        search: \"\",\r\n    });\r\n\r\n    const onSearch = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, search: value });\r\n    }\r\n\r\n    const contains = (value1: string, value2: string) => {\r\n        return value1.toLocaleLowerCase().includes(value2.toLocaleLowerCase());\r\n    }\r\n\r\n    const routes = formValue.search\r\n        ? AllRoutes.filter(x => contains(x.name, formValue.search))\r\n        : AllRoutes;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-4\">\r\n            <MDBInput\r\n                label=\"Search\" \r\n                value={formValue.search}\r\n                onChange={onSearch} \r\n            />\r\n            </div>\r\n            <MDBRow>\r\n                {routes.map(x => (\r\n                    <MDBCol md=\"3\" className=\"text-center my-2\">\r\n                        <MDBBtn href={`/tools/${x.url}/`} tag=\"a\">{x.name}</MDBBtn>\r\n                    </MDBCol>\r\n                ))}\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const TranslitFromRussianToEnglishUtils = {\r\n    encode: (value: string): string => translit(value),\r\n}\r\n\r\nfunction translit(value: string): string {\r\n  let result: string = \"\";\r\n  \r\n  for(let i = 0; i < value.length; i++) {\r\n    const char = value.charAt(i);\r\n    const translitChar = translitChars[char];\r\n    result += translitChar !== undefined ? translitChar : char;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst translitChars: any = {\r\n  \"а\": \"a\",\r\n  \"б\": \"b\",\r\n  \"в\": \"v\",\r\n  \"г\": \"g\",\r\n  \"д\": \"d\",\r\n  \"е\": \"e\",\r\n  \"ё\": \"jo\",\r\n  \"ж\": \"zh\",\r\n  \"з\": \"z\",\r\n  \"и\": \"i\",\r\n  \"й\": \"j\",\r\n  \"к\": \"k\",\r\n  \"л\": \"l\",\r\n  \"м\": \"m\",\r\n  \"н\": \"n\",\r\n  \"о\": \"o\",\r\n  \"п\": \"p\",\r\n  \"р\": \"r\",\r\n  \"с\": \"s\",\r\n  \"т\": \"t\",\r\n  \"у\": \"u\",\r\n  \"ф\": \"f\",\r\n  \"х\": \"h\",\r\n  \"ц\": \"c\",\r\n  \"ч\": \"ch\",\r\n  \"ш\": \"sh\",\r\n  \"щ\": \"shh\",\r\n  \"ъ\": \"\",\r\n  \"ы\": \"y\",\r\n  \"ь\": \"\",\r\n  \"э\": \"je\",\r\n  \"ю\": \"yu\",\r\n  \"я\": \"ya\",\r\n\r\n  \"А\": \"A\",\r\n  \"Б\": \"B\",\r\n  \"В\": \"V\",\r\n  \"Г\": \"G\",\r\n  \"Д\": \"D\",\r\n  \"Е\": \"E\",\r\n  \"Ё\": \"Jo\",\r\n  \"Ж\": \"Zh\",\r\n  \"З\": \"Z\",\r\n  \"И\": \"I\",\r\n  \"Й\": \"J\",\r\n  \"К\": \"K\",\r\n  \"Л\": \"L\",\r\n  \"М\": \"M\",\r\n  \"Н\": \"N\",\r\n  \"О\": \"O\",\r\n  \"П\": \"P\",\r\n  \"Р\": \"R\",\r\n  \"С\": \"S\",\r\n  \"Т\": \"T\",\r\n  \"У\": \"U\",\r\n  \"Ф\": \"F\",\r\n  \"Х\": \"H\",\r\n  \"Ц\": \"C\",\r\n  \"Ч\": \"Ch\",\r\n  \"Ш\": \"Sh\",\r\n  \"Щ\": \"Shh\",\r\n  \"Ъ\": \"\",\r\n  \"Ы\": \"Y\",\r\n  \"Ь\": \"\",\r\n  \"Э\": \"Je\",\r\n  \"Ю\": \"Yu\",\r\n  \"Я\": \"Ya\",\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { TranslitFromRussianToEnglishUtils } from \"./TranslitFromRussianToEnglishUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const TranslitFromRussianToEnglish: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: TranslitFromRussianToEnglishUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Translint From Russian To English</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Russian text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Translit to English text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","interface Props {\r\n    count: number,\r\n    uppercase: boolean,\r\n    braces: boolean,\r\n    hypens: boolean,\r\n}\r\n\r\nexport const GuidGeneratorUtils = {\r\n    generate: (props: Props): string[] => {\r\n        const guids: string[] = [];\r\n        for(let i = 0; i < props.count; i++) {\r\n            guids.push(newGuid(props));\r\n        }\r\n        return guids;\r\n    }\r\n}\r\n\r\nfunction newGuid(props: Props): string {\r\n    let guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n        const r = Math.random() * 16 | 0;\r\n        const v = c === \"x\" ? r : (r && 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n\r\n    if (props.uppercase) {\r\n        guid = guid.toUpperCase();\r\n    }\r\n\r\n    if (props.braces) {\r\n        guid = `{${guid}}`;\r\n    }\r\n\r\n    if (!props.hypens) {\r\n        guid = guid.replace(/-/g, \"\");\r\n    }\r\n\r\n    return guid;\r\n}","import { MDBBtn, MDBCheckbox, MDBCol, MDBInput } from \"mdb-react-ui-kit\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { GuidGeneratorUtils } from \"./GuidGeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    count: number,\r\n    uppercase: boolean,\r\n    braces: boolean,\r\n    hypens: boolean,\r\n    value: string[],\r\n}\r\n\r\nexport const GuidGenerator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        count: 1,\r\n        uppercase: false,\r\n        braces: false,\r\n        hypens: true,\r\n        value: [],\r\n    });\r\n\r\n    const generate = (props: FormValue) => {\r\n        setFormValue({ ...props, value: GuidGeneratorUtils.generate(props) });\r\n    }\r\n\r\n    const onChange = (e: any) => {\r\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.value };\r\n        setFormValue(newFormValue);\r\n        generate(newFormValue);\r\n    };\r\n\r\n    const onChangeBoolean = (e: any) => {\r\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.checked };\r\n        setFormValue(newFormValue);\r\n        generate(newFormValue);\r\n    };\r\n\r\n    const onGenerate = () => {\r\n        generate(formValue);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => generate(formValue), []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Guid Generator</h1>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBInput\r\n                    value={formValue.count.toString()}\r\n                    name=\"count\"\r\n                    id=\"count\"\r\n                    label=\"How many?\"\r\n                    onChange={onChange}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"uppercase\" \r\n                    id=\"uppercase\" \r\n                    label=\"Uppercase\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.uppercase}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"braces\" \r\n                    id=\"braces\" \r\n                    label=\"Braces\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.braces}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"hypens\"\r\n                    id=\"hypens\" \r\n                    label=\"Hypens\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.hypens}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBBtn onClick={onGenerate}>Generate</MDBBtn>\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBInput label=\"Generated Guids\" textarea rows={10} value={formValue.value.join(\"\\n\")} />\r\n            </MDBCol>\r\n        </>\r\n    )\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const UrlEncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: encodeURIComponent(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: decodeURIComponent(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Url Encode/Decode</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Url\" \r\n                        textarea \r\n                        rows={10} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Url\" \r\n                        textarea \r\n                        rows={10} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const HtmlEncodeDecodeUtils = {\r\n    encode: (value: string): string => encodeHtml(value),\r\n\r\n    decode: (value: string): string => decodeHtml(value),\r\n}\r\n\r\nfunction encodeHtml(value: string): string {\r\n    return value\r\n        .replace(/&/g, \"&amp;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/'/g, \"&apos;\")\r\n        .replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\");\r\n}\r\n\r\nfunction decodeHtml(value: string): string {\r\n    return value.replace(/&#?\\w+;/g, decodeEntity);\r\n}\r\n\r\nfunction decodeEntity(code: string) {\r\n  // name type\r\n  if (code.charAt(1) !== \"#\") {\r\n    return HTML_ENTITIES[code] || code;\r\n  }\r\n\r\n  var n, c = code.charAt(2);\r\n  // hex number\r\n  if (c === \"x\" || c === \"X\") {\r\n    c = code.substring(3, code.length - 1);\r\n    n = parseInt(c, 16);\r\n  } else {\r\n    c = code.substring(2, code.length - 1);\r\n    n = parseInt(c);\r\n  }\r\n  return isNaN(n) ? code : String.fromCharCode(n);\r\n}\r\n\r\nconst HTML_ENTITIES: any = {\r\n  \"&nbsp;\" : \"\\u00A0\",\r\n  \"&iexcl;\" : \"\\u00A1\",\r\n  \"&cent;\" : \"\\u00A2\",\r\n  \"&pound;\" : \"\\u00A3\",\r\n  \"&curren;\" : \"\\u00A4\",\r\n  \"&yen;\" : \"\\u00A5\",\r\n  \"&brvbar;\" : \"\\u00A6\",\r\n  \"&sect;\" : \"\\u00A7\",\r\n  \"&uml;\" : \"\\u00A8\",\r\n  \"&copy;\" : \"\\u00A9\",\r\n  \"&ordf;\" : \"\\u00AA\",\r\n  \"&laquo;\" : \"\\u00AB\",\r\n  \"&not;\" : \"\\u00AC\",\r\n  \"&shy;\" : \"\\u00AD\",\r\n  \"&reg;\" : \"\\u00AE\",\r\n  \"&macr;\" : \"\\u00AF\",\r\n  \"&deg;\" : \"\\u00B0\",\r\n  \"&plusmn;\" : \"\\u00B1\",\r\n  \"&sup2;\" : \"\\u00B2\",\r\n  \"&sup3;\" : \"\\u00B3\",\r\n  \"&acute;\" : \"\\u00B4\",\r\n  \"&micro;\" : \"\\u00B5\",\r\n  \"&para;\" : \"\\u00B6\",\r\n  \"&middot;\" : \"\\u00B7\",\r\n  \"&cedil;\" : \"\\u00B8\",\r\n  \"&sup1;\" : \"\\u00B9\",\r\n  \"&ordm;\" : \"\\u00BA\",\r\n  \"&raquo;\" : \"\\u00BB\",\r\n  \"&frac14;\" : \"\\u00BC\",\r\n  \"&frac12;\" : \"\\u00BD\",\r\n  \"&frac34;\" : \"\\u00BE\",\r\n  \"&iquest;\" : \"\\u00BF\",\r\n  \"&Agrave;\" : \"\\u00C0\",\r\n  \"&Aacute;\" : \"\\u00C1\",\r\n  \"&Acirc;\" : \"\\u00C2\",\r\n  \"&Atilde;\" : \"\\u00C3\",\r\n  \"&Auml;\" : \"\\u00C4\",\r\n  \"&Aring;\" : \"\\u00C5\",\r\n  \"&AElig;\" : \"\\u00C6\",\r\n  \"&Ccedil;\" : \"\\u00C7\",\r\n  \"&Egrave;\" : \"\\u00C8\",\r\n  \"&Eacute;\" : \"\\u00C9\",\r\n  \"&Ecirc;\" : \"\\u00CA\",\r\n  \"&Euml;\" : \"\\u00CB\",\r\n  \"&Igrave;\" : \"\\u00CC\",\r\n  \"&Iacute;\" : \"\\u00CD\",\r\n  \"&Icirc;\" : \"\\u00CE\",\r\n  \"&Iuml;\" : \"\\u00CF\",\r\n  \"&ETH;\" : \"\\u00D0\",\r\n  \"&Ntilde;\" : \"\\u00D1\",\r\n  \"&Ograve;\" : \"\\u00D2\",\r\n  \"&Oacute;\" : \"\\u00D3\",\r\n  \"&Ocirc;\" : \"\\u00D4\",\r\n  \"&Otilde;\" : \"\\u00D5\",\r\n  \"&Ouml;\" : \"\\u00D6\",\r\n  \"&times;\" : \"\\u00D7\",\r\n  \"&Oslash;\" : \"\\u00D8\",\r\n  \"&Ugrave;\" : \"\\u00D9\",\r\n  \"&Uacute;\" : \"\\u00DA\",\r\n  \"&Ucirc;\" : \"\\u00DB\",\r\n  \"&Uuml;\" : \"\\u00DC\",\r\n  \"&Yacute;\" : \"\\u00DD\",\r\n  \"&THORN;\" : \"\\u00DE\",\r\n  \"&szlig;\" : \"\\u00DF\",\r\n  \"&agrave;\" : \"\\u00E0\",\r\n  \"&aacute;\" : \"\\u00E1\",\r\n  \"&acirc;\" : \"\\u00E2\",\r\n  \"&atilde;\" : \"\\u00E3\",\r\n  \"&auml;\" : \"\\u00E4\",\r\n  \"&aring;\" : \"\\u00E5\",\r\n  \"&aelig;\" : \"\\u00E6\",\r\n  \"&ccedil;\" : \"\\u00E7\",\r\n  \"&egrave;\" : \"\\u00E8\",\r\n  \"&eacute;\" : \"\\u00E9\",\r\n  \"&ecirc;\" : \"\\u00EA\",\r\n  \"&euml;\" : \"\\u00EB\",\r\n  \"&igrave;\" : \"\\u00EC\",\r\n  \"&iacute;\" : \"\\u00ED\",\r\n  \"&icirc;\" : \"\\u00EE\",\r\n  \"&iuml;\" : \"\\u00EF\",\r\n  \"&eth;\" : \"\\u00F0\",\r\n  \"&ntilde;\" : \"\\u00F1\",\r\n  \"&ograve;\" : \"\\u00F2\",\r\n  \"&oacute;\" : \"\\u00F3\",\r\n  \"&ocirc;\" : \"\\u00F4\",\r\n  \"&otilde;\" : \"\\u00F5\",\r\n  \"&ouml;\" : \"\\u00F6\",\r\n  \"&divide;\" : \"\\u00F7\",\r\n  \"&oslash;\" : \"\\u00F8\",\r\n  \"&ugrave;\" : \"\\u00F9\",\r\n  \"&uacute;\" : \"\\u00FA\",\r\n  \"&ucirc;\" : \"\\u00FB\",\r\n  \"&uuml;\" : \"\\u00FC\",\r\n  \"&yacute;\" : \"\\u00FD\",\r\n  \"&thorn;\" : \"\\u00FE\",\r\n  \"&yuml;\" : \"\\u00FF\",\r\n  \"&quot;\" : \"\\u0022\",\r\n  \"&amp;\" : \"\\u0026\",\r\n  \"&lt;\" : \"\\u003C\",\r\n  \"&gt;\" : \"\\u003E\",\r\n  \"&apos;\" : \"\\u0027\",\r\n  \"&OElig;\" : \"\\u0152\",\r\n  \"&oelig;\" : \"\\u0153\",\r\n  \"&Scaron;\" : \"\\u0160\",\r\n  \"&scaron;\" : \"\\u0161\",\r\n  \"&Yuml;\" : \"\\u0178\",\r\n  \"&circ;\" : \"\\u02C6\",\r\n  \"&tilde;\" : \"\\u02DC\",\r\n  \"&ensp;\" : \"\\u2002\",\r\n  \"&emsp;\" : \"\\u2003\",\r\n  \"&thinsp;\" : \"\\u2009\",\r\n  \"&zwnj;\" : \"\\u200C\",\r\n  \"&zwj;\" : \"\\u200D\",\r\n  \"&lrm;\" : \"\\u200E\",\r\n  \"&rlm;\" : \"\\u200F\",\r\n  \"&ndash;\" : \"\\u2013\",\r\n  \"&mdash;\" : \"\\u2014\",\r\n  \"&lsquo;\" : \"\\u2018\",\r\n  \"&rsquo;\" : \"\\u2019\",\r\n  \"&sbquo;\" : \"\\u201A\",\r\n  \"&ldquo;\" : \"\\u201C\",\r\n  \"&rdquo;\" : \"\\u201D\",\r\n  \"&bdquo;\" : \"\\u201E\",\r\n  \"&dagger;\" : \"\\u2020\",\r\n  \"&Dagger;\" : \"\\u2021\",\r\n  \"&permil;\" : \"\\u2030\",\r\n  \"&lsaquo;\" : \"\\u2039\",\r\n  \"&rsaquo;\" : \"\\u203A\",\r\n  \"&euro;\" : \"\\u20AC\",\r\n  \"&fnof;\" : \"\\u0192\",\r\n  \"&Alpha;\" : \"\\u0391\",\r\n  \"&Beta;\" : \"\\u0392\",\r\n  \"&Gamma;\" : \"\\u0393\",\r\n  \"&Delta;\" : \"\\u0394\",\r\n  \"&Epsilon;\" : \"\\u0395\",\r\n  \"&Zeta;\" : \"\\u0396\",\r\n  \"&Eta;\" : \"\\u0397\",\r\n  \"&Theta;\" : \"\\u0398\",\r\n  \"&Iota;\" : \"\\u0399\",\r\n  \"&Kappa;\" : \"\\u039A\",\r\n  \"&Lambda;\" : \"\\u039B\",\r\n  \"&Mu;\" : \"\\u039C\",\r\n  \"&Nu;\" : \"\\u039D\",\r\n  \"&Xi;\" : \"\\u039E\",\r\n  \"&Omicron;\" : \"\\u039F\",\r\n  \"&Pi;\" : \"\\u03A0\",\r\n  \"&Rho;\" : \"\\u03A1\",\r\n  \"&Sigma;\" : \"\\u03A3\",\r\n  \"&Tau;\" : \"\\u03A4\",\r\n  \"&Upsilon;\" : \"\\u03A5\",\r\n  \"&Phi;\" : \"\\u03A6\",\r\n  \"&Chi;\" : \"\\u03A7\",\r\n  \"&Psi;\" : \"\\u03A8\",\r\n  \"&Omega;\" : \"\\u03A9\",\r\n  \"&alpha;\" : \"\\u03B1\",\r\n  \"&beta;\" : \"\\u03B2\",\r\n  \"&gamma;\" : \"\\u03B3\",\r\n  \"&delta;\" : \"\\u03B4\",\r\n  \"&epsilon;\" : \"\\u03B5\",\r\n  \"&zeta;\" : \"\\u03B6\",\r\n  \"&eta;\" : \"\\u03B7\",\r\n  \"&theta;\" : \"\\u03B8\",\r\n  \"&iota;\" : \"\\u03B9\",\r\n  \"&kappa;\" : \"\\u03BA\",\r\n  \"&lambda;\" : \"\\u03BB\",\r\n  \"&mu;\" : \"\\u03BC\",\r\n  \"&nu;\" : \"\\u03BD\",\r\n  \"&xi;\" : \"\\u03BE\",\r\n  \"&omicron;\" : \"\\u03BF\",\r\n  \"&pi;\" : \"\\u03C0\",\r\n  \"&rho;\" : \"\\u03C1\",\r\n  \"&sigmaf;\" : \"\\u03C2\",\r\n  \"&sigma;\" : \"\\u03C3\",\r\n  \"&tau;\" : \"\\u03C4\",\r\n  \"&upsilon;\" : \"\\u03C5\",\r\n  \"&phi;\" : \"\\u03C6\",\r\n  \"&chi;\" : \"\\u03C7\",\r\n  \"&psi;\" : \"\\u03C8\",\r\n  \"&omega;\" : \"\\u03C9\",\r\n  \"&thetasym;\" : \"\\u03D1\",\r\n  \"&upsih;\" : \"\\u03D2\",\r\n  \"&piv;\" : \"\\u03D6\",\r\n  \"&bull;\" : \"\\u2022\",\r\n  \"&hellip;\" : \"\\u2026\",\r\n  \"&prime;\" : \"\\u2032\",\r\n  \"&Prime;\" : \"\\u2033\",\r\n  \"&oline;\" : \"\\u203E\",\r\n  \"&frasl;\" : \"\\u2044\",\r\n  \"&weierp;\" : \"\\u2118\",\r\n  \"&image;\" : \"\\u2111\",\r\n  \"&real;\" : \"\\u211C\",\r\n  \"&trade;\" : \"\\u2122\",\r\n  \"&alefsym;\" : \"\\u2135\",\r\n  \"&larr;\" : \"\\u2190\",\r\n  \"&uarr;\" : \"\\u2191\",\r\n  \"&rarr;\" : \"\\u2192\",\r\n  \"&darr;\" : \"\\u2193\",\r\n  \"&harr;\" : \"\\u2194\",\r\n  \"&crarr;\" : \"\\u21B5\",\r\n  \"&lArr;\" : \"\\u21D0\",\r\n  \"&uArr;\" : \"\\u21D1\",\r\n  \"&rArr;\" : \"\\u21D2\",\r\n  \"&dArr;\" : \"\\u21D3\",\r\n  \"&hArr;\" : \"\\u21D4\",\r\n  \"&forall;\" : \"\\u2200\",\r\n  \"&part;\" : \"\\u2202\",\r\n  \"&exist;\" : \"\\u2203\",\r\n  \"&empty;\" : \"\\u2205\",\r\n  \"&nabla;\" : \"\\u2207\",\r\n  \"&isin;\" : \"\\u2208\",\r\n  \"&notin;\" : \"\\u2209\",\r\n  \"&ni;\" : \"\\u220B\",\r\n  \"&prod;\" : \"\\u220F\",\r\n  \"&sum;\" : \"\\u2211\",\r\n  \"&minus;\" : \"\\u2212\",\r\n  \"&lowast;\" : \"\\u2217\",\r\n  \"&radic;\" : \"\\u221A\",\r\n  \"&prop;\" : \"\\u221D\",\r\n  \"&infin;\" : \"\\u221E\",\r\n  \"&ang;\" : \"\\u2220\",\r\n  \"&and;\" : \"\\u2227\",\r\n  \"&or;\" : \"\\u2228\",\r\n  \"&cap;\" : \"\\u2229\",\r\n  \"&cup;\" : \"\\u222A\",\r\n  \"&int;\" : \"\\u222B\",\r\n  \"&there4;\" : \"\\u2234\",\r\n  \"&sim;\" : \"\\u223C\",\r\n  \"&cong;\" : \"\\u2245\",\r\n  \"&asymp;\" : \"\\u2248\",\r\n  \"&ne;\" : \"\\u2260\",\r\n  \"&equiv;\" : \"\\u2261\",\r\n  \"&le;\" : \"\\u2264\",\r\n  \"&ge;\" : \"\\u2265\",\r\n  \"&sub;\" : \"\\u2282\",\r\n  \"&sup;\" : \"\\u2283\",\r\n  \"&nsub;\" : \"\\u2284\",\r\n  \"&sube;\" : \"\\u2286\",\r\n  \"&supe;\" : \"\\u2287\",\r\n  \"&oplus;\" : \"\\u2295\",\r\n  \"&otimes;\" : \"\\u2297\",\r\n  \"&perp;\" : \"\\u22A5\",\r\n  \"&sdot;\" : \"\\u22C5\",\r\n  \"&lceil;\" : \"\\u2308\",\r\n  \"&rceil;\" : \"\\u2309\",\r\n  \"&lfloor;\" : \"\\u230A\",\r\n  \"&rfloor;\" : \"\\u230B\",\r\n  \"&lang;\" : \"\\u2329\",\r\n  \"&rang;\" : \"\\u232A\",\r\n  \"&loz;\" : \"\\u25CA\",\r\n  \"&spades;\" : \"\\u2660\",\r\n  \"&clubs;\" : \"\\u2663\",\r\n  \"&hearts;\" : \"\\u2665\",\r\n  \"&diams;\" : \"\\u2666\"\r\n};","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { HtmlEncodeDecodeUtils } from \"./HtmlEncodeDecodeUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const HtmlEncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: HtmlEncodeDecodeUtils.encode(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: HtmlEncodeDecodeUtils.decode(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Html Encode/Decode</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Html\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Html\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const Base64EncodeDecodeUtils = {\r\n    encode: (value: string): string => encodeBase64(value),\r\n\r\n    decode: (value: string): string => decodeBase64(value),\r\n}\r\n\r\nconst base64Keys = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n \r\nfunction encodeBase64(value: string): string {\r\n  let output = \"\";\r\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n  let i = 0;\r\n\r\n  value = utf8Encode(value);\r\n\r\n  while (i < value.length) {\r\n\r\n    chr1 = value.charCodeAt(i++);\r\n    chr2 = value.charCodeAt(i++);\r\n    chr3 = value.charCodeAt(i++);\r\n\r\n    enc1 = chr1 >> 2;\r\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n    enc4 = chr3 & 63;\r\n\r\n    if (isNaN(chr2)) {\r\n      enc3 = enc4 = 64;\r\n    } else if (isNaN(chr3)) {\r\n      enc4 = 64;\r\n    }\r\n\r\n    output = output +\r\n      base64Keys.charAt(enc1) + base64Keys.charAt(enc2) +\r\n      base64Keys.charAt(enc3) + base64Keys.charAt(enc4);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction decodeBase64(value: string): string {\r\n  let output = \"\";\r\n  let chr1, chr2, chr3;\r\n  let enc1, enc2, enc3, enc4;\r\n  let i = 0;\r\n\r\n  value = value.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); //eslint-disable-line\r\n\r\n  while (i < value.length) {\r\n\r\n    enc1 = base64Keys.indexOf(value.charAt(i++));\r\n    enc2 = base64Keys.indexOf(value.charAt(i++));\r\n    enc3 = base64Keys.indexOf(value.charAt(i++));\r\n    enc4 = base64Keys.indexOf(value.charAt(i++));\r\n\r\n    chr1 = (enc1 << 2) | (enc2 >> 4);\r\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n    chr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n    output = output + String.fromCharCode(chr1);\r\n\r\n    if (enc3 !== 64) {\r\n      output = output + String.fromCharCode(chr2);\r\n    }\r\n    if (enc4 !== 64) {\r\n      output = output + String.fromCharCode(chr3);\r\n    }\r\n  }\r\n\r\n  output = utf8Decode(output);\r\n  return output;\r\n}\r\n\r\n// private method for UTF-8 encoding\r\nfunction utf8Encode(value: string): string {\r\n    value = value.replace(/\\r\\n/g,\"\\n\");\r\n    var output = \"\";\r\n\r\n    for (var n = 0; n < value.length; n++) {\r\n\r\n      var c = value.charCodeAt(n);\r\n\r\n      if (c < 128) {\r\n        output += String.fromCharCode(c);\r\n      }\r\n      else if((c > 127) && (c < 2048)) {\r\n        output += String.fromCharCode((c >> 6) | 192);\r\n        output += String.fromCharCode((c & 63) | 128);\r\n      }\r\n      else {\r\n        output += String.fromCharCode((c >> 12) | 224);\r\n        output += String.fromCharCode(((c >> 6) & 63) | 128);\r\n        output += String.fromCharCode((c & 63) | 128);\r\n      }\r\n    }\r\n\r\n    return output;\r\n}\r\n\r\nfunction utf8Decode(value: string): string {\r\n    let output = \"\";\r\n    let i = 0;\r\n    let c = 0, c1 = 0, c2 = 0;\r\n\r\n    while (i < value.length) {\r\n      c = value.charCodeAt(i);\r\n\r\n      if (c < 128) {\r\n        output += String.fromCharCode(c);\r\n        i++;\r\n      }\r\n      else if((c > 191) && (c < 224)) {\r\n        c1 = value.charCodeAt(i+1);\r\n        output += String.fromCharCode(((c & 31) << 6) | (c1 & 63));\r\n        i += 2;\r\n      }\r\n      else {\r\n        c1 = value.charCodeAt(i+1);\r\n        c2 = value.charCodeAt(i+2);\r\n        output += String.fromCharCode(((c & 15) << 12) | ((c1 & 63) << 6) | (c2 & 63));\r\n        i += 3;\r\n      }\r\n    }\r\n\r\n    return output;\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Base64EncodeDecodeUtils } from \"./Base64EncodeDecodeUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Base64EncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Base64EncodeDecodeUtils.encode(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: Base64EncodeDecodeUtils.decode(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Base64 Encode/Decode Text</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Base64\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Base64\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const Sha256GeneratorUtils = {\r\n    encode: (value: string): string => encodeSha256(value),\r\n}\r\n\r\nconst hexcase = 0;\r\nconst charSize   = 8;\r\n \r\nfunction encodeSha256(value: string): string {\r\n\tvalue = utf8Encode(value);\r\n\treturn binb2hex(coreSha256(str2binb(value), value.length * charSize));\r\n}\r\n \r\nfunction safeAdd (x: number, y: number): number {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n\r\nfunction S (X: number, n: number): number { return ( X >>> n ) | (X << (32 - n)); }\r\nfunction R (X: number, n: number): number { return ( X >>> n ); }\r\nfunction Ch(x: number, y: number, z: number): number { return ((x & y) ^ ((~x) & z)); }\r\nfunction Maj(x: number, y: number, z: number): number { return ((x & y) ^ (x & z) ^ (y & z)); }\r\nfunction Sigma0256(x: number): number { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }\r\nfunction Sigma1256(x: number): number { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }\r\nfunction Gamma0256(x: number): number { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }\r\nfunction Gamma1256(x: number): number { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }\r\n\r\nfunction coreSha256 (array: number[], length: number): number[] {\r\n    let K: number[] = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];\r\n    let HASH: number[] = [0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19];\r\n    let W: number[] = new Array(64);\r\n    let a, b, c, d, e, f, g, h;\r\n    let T1, T2;\r\n\r\n    array[length >> 5] |= 0x80 << (24 - length % 32);\r\n    array[((length + 64 >> 9) << 4) + 15] = length;\r\n\r\n    for (let i = 0; i<array.length; i+=16) {\r\n      a = HASH[0];\r\n      b = HASH[1];\r\n      c = HASH[2];\r\n      d = HASH[3];\r\n      e = HASH[4];\r\n      f = HASH[5];\r\n      g = HASH[6];\r\n      h = HASH[7];\r\n\r\n      for (let j = 0; j<64; j++) {\r\n        if (j < 16) W[j] = array[j + i];\r\n        else W[j] = safeAdd(safeAdd(safeAdd(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\r\n\r\n        T1 = safeAdd(safeAdd(safeAdd(safeAdd(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\r\n        T2 = safeAdd(Sigma0256(a), Maj(a, b, c));\r\n\r\n        h = g;\r\n        g = f;\r\n        f = e;\r\n        e = safeAdd(d, T1);\r\n        d = c;\r\n        c = b;\r\n        b = a;\r\n        a = safeAdd(T1, T2);\r\n      }\r\n\r\n      HASH[0] = safeAdd(a, HASH[0]);\r\n      HASH[1] = safeAdd(b, HASH[1]);\r\n      HASH[2] = safeAdd(c, HASH[2]);\r\n      HASH[3] = safeAdd(d, HASH[3]);\r\n      HASH[4] = safeAdd(e, HASH[4]);\r\n      HASH[5] = safeAdd(f, HASH[5]);\r\n      HASH[6] = safeAdd(g, HASH[6]);\r\n      HASH[7] = safeAdd(h, HASH[7]);\r\n    }\r\n    return HASH;\r\n}\r\n\r\nfunction str2binb(value: string): number[] {\r\n    const bin: number[] = [];\r\n    const mask = (1 << charSize) - 1;\r\n    for(let i = 0; i < value.length * charSize; i += charSize) {\r\n      bin[i>>5] |= (value.charCodeAt(i / charSize) & mask) << (24 - i%32);\r\n    }\r\n    return bin;\r\n}\r\n\r\nfunction utf8Encode(value: string): string {\r\n    value = value.replace(/\\r\\n/g,\"\\n\");\r\n    let utftext = \"\";\r\n\r\n    for (let n = 0; n < value.length; n++) {\r\n\r\n      const c = value.charCodeAt(n);\r\n\r\n      if (c < 128) {\r\n        utftext += String.fromCharCode(c);\r\n      }\r\n      else if((c > 127) && (c < 2048)) {\r\n        utftext += String.fromCharCode((c >> 6) | 192);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n      else {\r\n        utftext += String.fromCharCode((c >> 12) | 224);\r\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n\r\n    }\r\n\r\n    return utftext;\r\n}\r\n\r\nfunction binb2hex(binarray: number[]): string {\r\n    const hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n    let str = \"\";\r\n    for(var i = 0; i < binarray.length * 4; i++) {\r\n      str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\r\n      hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\r\n    }\r\n    return str;\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Sha256GeneratorUtils } from \"./Sha256GeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Sha256Generator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Sha256GeneratorUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online SHA256 Generator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"SHA256\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const Sha1GeneratorUtils = {\r\n    encode: (value: string): string => encodeSha1(value),\r\n}\r\n\r\nfunction encodeSha1(value: string): string {\r\n \tlet blockstart;\r\n\tlet i, j;\r\n\tlet W = new Array(80);\r\n\tlet H0 = 0x67452301;\r\n\tlet H1 = 0xEFCDAB89;\r\n\tlet H2 = 0x98BADCFE;\r\n\tlet H3 = 0x10325476;\r\n\tlet H4 = 0xC3D2E1F0;\r\n\tlet A, B, C, D, E;\r\n\tlet temp;\r\n \r\n\tvalue = utf8Encode(value);\r\n \r\n\tconst valueLength = value.length;\r\n \r\n\tconst words: number[] = [];\r\n\tfor(i = 0; i < valueLength - 3; i += 4) {\r\n\t\tj = (value.charCodeAt(i)<<24) | (value.charCodeAt(i+1)<<16) |\r\n\t\t(value.charCodeAt(i+2)<<8) | (value.charCodeAt(i+3));\r\n\t\twords.push(j);\r\n\t}\r\n \r\n\tswitch(valueLength % 4) {\r\n\t\tcase 0:\r\n\t\t\ti = 0x080000000;\r\n\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\ti = (value.charCodeAt(valueLength-1)<<24) | 0x0800000;\r\n\t\tbreak;\r\n \r\n\t\tcase 2:\r\n\t\t\ti = (value.charCodeAt(valueLength-2)<<24) | (value.charCodeAt(valueLength-1)<<16) | 0x08000;\r\n\t\tbreak;\r\n \r\n\t\tcase 3:\r\n\t\t\ti = (value.charCodeAt(valueLength-3)<<24) | (value.charCodeAt(valueLength-2)<<16) | (value.charCodeAt(valueLength-1)<<8) | 0x80;\r\n\t\tbreak;\r\n\t}\r\n \r\n\twords.push(i);\r\n \r\n\twhile((words.length % 16) !== 14) words.push( 0 );\r\n \r\n\twords.push(valueLength>>>29);\r\n\twords.push((valueLength<<3)&0x0ffffffff);\r\n \r\n\tfor (blockstart=0; blockstart<words.length; blockstart+=16) {\r\n \r\n\t\tfor(i=0; i<16; i++) W[i] = words[blockstart+i];\r\n\t\tfor(i=16; i<=79; i++) W[i] = rotateLeft(W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16], 1);\r\n \r\n\t\tA = H0;\r\n\t\tB = H1;\r\n\t\tC = H2;\r\n\t\tD = H3;\r\n\t\tE = H4;\r\n \r\n\t\tfor(i= 0; i<=19; i++) {\r\n\t\t\ttemp = (rotateLeft(A,5) + ((B&C) | (~B&D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotateLeft(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n \r\n\t\tfor(i=20; i<=39; i++) {\r\n\t\t\ttemp = (rotateLeft(A,5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotateLeft(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n \r\n\t\tfor(i=40; i<=59; i++) {\r\n\t\t\ttemp = (rotateLeft(A,5) + ((B&C) | (B&D) | (C&D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotateLeft(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n \r\n\t\tfor(i=60; i<=79; i++) {\r\n\t\t\ttemp = (rotateLeft(A,5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotateLeft(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n \r\n\t\tH0 = (H0 + A) & 0x0ffffffff;\r\n\t\tH1 = (H1 + B) & 0x0ffffffff;\r\n\t\tH2 = (H2 + C) & 0x0ffffffff;\r\n\t\tH3 = (H3 + D) & 0x0ffffffff;\r\n\t\tH4 = (H4 + E) & 0x0ffffffff;\r\n \r\n\t}\r\n \r\n\treturn convertHex(H0) + convertHex(H1) + convertHex(H2) + convertHex(H3) + convertHex(H4);\r\n}\r\n\r\nfunction rotateLeft(n: number, s: number): number {\r\n  return ( n<<s ) | (n>>>(32-s));\r\n};\r\n\r\nfunction convertHex(value: number): string {\r\n  let str=\"\";\r\n  let i;\r\n  let v;\r\n\r\n  for(i=7; i>=0; i--) {\r\n    v = (value>>>(i*4))&0x0f;\r\n    str += v.toString(16);\r\n  }\r\n  return str;\r\n};\r\n\r\n\r\nfunction utf8Encode(value: string) {\r\n  value = value.replace(/\\r\\n/g,\"\\n\");\r\n  let utftext = \"\";\r\n\r\n  for (let n = 0; n < value.length; n++) {\r\n    const c = value.charCodeAt(n);\r\n\r\n    if (c < 128) {\r\n      utftext += String.fromCharCode(c);\r\n    }\r\n    else if((c > 127) && (c < 2048)) {\r\n      utftext += String.fromCharCode((c >> 6) | 192);\r\n      utftext += String.fromCharCode((c & 63) | 128);\r\n    }\r\n    else {\r\n      utftext += String.fromCharCode((c >> 12) | 224);\r\n      utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n      utftext += String.fromCharCode((c & 63) | 128);\r\n    }\r\n  }\r\n\r\n  return utftext;\r\n};","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Sha1GeneratorUtils } from \"./Sha1GeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Sha1Generator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Sha1GeneratorUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online SHA1 Generator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"SHA1\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const Md5GeneratorUtils = {\r\n    encode: (value: string): string => encodeMD5(value),\r\n}\r\n\r\nfunction encodeMD5(value: string): string {\r\n\tlet x: number[] = [];\r\n\tlet k,AA,BB,CC,DD,a,b,c,d;\r\n\tlet S11=7, S12=12, S13=17, S14=22;\r\n\tlet S21=5, S22=9 , S23=14, S24=20;\r\n\tlet S31=4, S32=11, S33=16, S34=23;\r\n\tlet S41=6, S42=10, S43=15, S44=21;\r\n \r\n\tvalue = utf8Encode(value);\r\n \r\n\tx = convertToWordArray(value);\r\n \r\n\ta = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\r\n \r\n\tfor (k=0;k<x.length;k+=16) {\r\n\t\tAA=a; BB=b; CC=c; DD=d;\r\n\t\ta=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\r\n\t\td=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\r\n\t\tc=FF(c,d,a,b,x[k+2], S13,0x242070DB);\r\n\t\tb=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\r\n\t\ta=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\r\n\t\td=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\r\n\t\tc=FF(c,d,a,b,x[k+6], S13,0xA8304613);\r\n\t\tb=FF(b,c,d,a,x[k+7], S14,0xFD469501);\r\n\t\ta=FF(a,b,c,d,x[k+8], S11,0x698098D8);\r\n\t\td=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\r\n\t\tc=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\r\n\t\tb=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\r\n\t\ta=FF(a,b,c,d,x[k+12],S11,0x6B901122);\r\n\t\td=FF(d,a,b,c,x[k+13],S12,0xFD987193);\r\n\t\tc=FF(c,d,a,b,x[k+14],S13,0xA679438E);\r\n\t\tb=FF(b,c,d,a,x[k+15],S14,0x49B40821);\r\n\t\ta=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\r\n\t\td=GG(d,a,b,c,x[k+6], S22,0xC040B340);\r\n\t\tc=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\r\n\t\tb=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\r\n\t\ta=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\r\n\t\td=GG(d,a,b,c,x[k+10],S22,0x2441453);\r\n\t\tc=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\r\n\t\tb=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\r\n\t\ta=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\r\n\t\td=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\r\n\t\tc=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\r\n\t\tb=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\r\n\t\ta=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\r\n\t\td=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\r\n\t\tc=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\r\n\t\tb=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\r\n\t\ta=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\r\n\t\td=HH(d,a,b,c,x[k+8], S32,0x8771F681);\r\n\t\tc=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\r\n\t\tb=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\r\n\t\ta=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\r\n\t\td=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\r\n\t\tc=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\r\n\t\tb=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\r\n\t\ta=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\r\n\t\td=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\r\n\t\tc=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\r\n\t\tb=HH(b,c,d,a,x[k+6], S34,0x4881D05);\r\n\t\ta=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\r\n\t\td=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\r\n\t\tc=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\r\n\t\tb=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\r\n\t\ta=II(a,b,c,d,x[k+0], S41,0xF4292244);\r\n\t\td=II(d,a,b,c,x[k+7], S42,0x432AFF97);\r\n\t\tc=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\r\n\t\tb=II(b,c,d,a,x[k+5], S44,0xFC93A039);\r\n\t\ta=II(a,b,c,d,x[k+12],S41,0x655B59C3);\r\n\t\td=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\r\n\t\tc=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\r\n\t\tb=II(b,c,d,a,x[k+1], S44,0x85845DD1);\r\n\t\ta=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\r\n\t\td=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\r\n\t\tc=II(c,d,a,b,x[k+6], S43,0xA3014314);\r\n\t\tb=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\r\n\t\ta=II(a,b,c,d,x[k+4], S41,0xF7537E82);\r\n\t\td=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\r\n\t\tc=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\r\n\t\tb=II(b,c,d,a,x[k+9], S44,0xEB86D391);\r\n\t\ta=addUnsigned(a,AA);\r\n\t\tb=addUnsigned(b,BB);\r\n\t\tc=addUnsigned(c,CC);\r\n\t\td=addUnsigned(d,DD);\r\n\t}\r\n \r\n\treturn wordToHex(a)+wordToHex(b)+wordToHex(c)+wordToHex(d);\r\n}\r\n\r\nfunction rotateLeft(lValue: number, iShiftBits: number): number {\r\n  return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\r\n}\r\n\r\nfunction addUnsigned(lX: number, lY: number): number {\r\n  let lX4,lY4,lX8,lY8,lResult;\r\n  lX8 = (lX & 0x80000000);\r\n  lY8 = (lY & 0x80000000);\r\n  lX4 = (lX & 0x40000000);\r\n  lY4 = (lY & 0x40000000);\r\n  lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\r\n  if (lX4 & lY4) {\r\n    return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\r\n  }\r\n  if (lX4 | lY4) {\r\n    if (lResult & 0x40000000) {\r\n      return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\r\n    } else {\r\n      return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\r\n    }\r\n  } else {\r\n    return (lResult ^ lX8 ^ lY8);\r\n  }\r\n }\r\n\r\nfunction F(x: number, y: number, z: number): number { return (x & y) | ((~x) & z); }\r\nfunction G(x: number, y: number, z: number): number { return (x & z) | (y & (~z)); }\r\nfunction H(x: number, y: number, z: number): number { return (x ^ y ^ z); }\r\nfunction I(x: number, y: number, z: number): number { return (y ^ (x | (~z))); }\r\n\r\nfunction FF(a: number, b: number, c: number, d: number, x: number, s: number, ac: number): number {\r\n  a = addUnsigned(a, addUnsigned(addUnsigned(F(b, c, d), x), ac));\r\n  return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nfunction GG(a: number, b: number, c: number, d: number, x: number, s: number, ac: number): number {\r\n  a = addUnsigned(a, addUnsigned(addUnsigned(G(b, c, d), x), ac));\r\n  return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nfunction HH(a: number, b: number, c: number, d: number, x: number, s: number, ac: number): number {\r\n  a = addUnsigned(a, addUnsigned(addUnsigned(H(b, c, d), x), ac));\r\n  return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nfunction II(a: number, b: number, c: number, d: number, x: number, s: number, ac: number): number {\r\n  a = addUnsigned(a, addUnsigned(addUnsigned(I(b, c, d), x), ac));\r\n  return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nfunction convertToWordArray(value: string): number[] {\r\n  let lWordCount;\r\n  const lMessageLength = value.length;\r\n  const lNumberOfWords_temp1=lMessageLength + 8;\r\n  const lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\r\n  const lNumberOfWords = (lNumberOfWords_temp2+1)*16;\r\n  const lWordArray: number[] = Array(lNumberOfWords-1);\r\n  let lBytePosition = 0;\r\n  let lByteCount = 0;\r\n  while (lByteCount < lMessageLength) {\r\n    lWordCount = (lByteCount-(lByteCount % 4))/4;\r\n    lBytePosition = (lByteCount % 4)*8;\r\n    lWordArray[lWordCount] = (lWordArray[lWordCount] | (value.charCodeAt(lByteCount)<<lBytePosition));\r\n    lByteCount++;\r\n  }\r\n  lWordCount = (lByteCount-(lByteCount % 4))/4;\r\n  lBytePosition = (lByteCount % 4)*8;\r\n  lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\r\n  lWordArray[lNumberOfWords-2] = lMessageLength<<3;\r\n  lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\r\n  return lWordArray;\r\n};\r\n\r\nfunction wordToHex(lValue: number): string {\r\n  let wordToHexValue = \"\", wordToHexValueTemp = \"\", lByte, lCount;\r\n  for (lCount = 0;lCount<=3;lCount++) {\r\n    lByte = (lValue>>>(lCount*8)) & 255;\r\n    wordToHexValueTemp = \"0\" + lByte.toString(16);\r\n    wordToHexValue = wordToHexValue + wordToHexValueTemp.substr(wordToHexValueTemp.length-2,2);\r\n  }\r\n  return wordToHexValue;\r\n};\r\n\r\nfunction utf8Encode(value: string): string {\r\n  value = value.replace(/\\r\\n/g,\"\\n\");\r\n  let utftext = \"\";\r\n\r\n  for (let n = 0; n < value.length; n++) {\r\n\r\n    const c = value.charCodeAt(n);\r\n\r\n    if (c < 128) {\r\n      utftext += String.fromCharCode(c);\r\n    }\r\n    else if((c > 127) && (c < 2048)) {\r\n      utftext += String.fromCharCode((c >> 6) | 192);\r\n      utftext += String.fromCharCode((c & 63) | 128);\r\n    }\r\n    else {\r\n      utftext += String.fromCharCode((c >> 12) | 224);\r\n      utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n      utftext += String.fromCharCode((c & 63) | 128);\r\n    }\r\n\r\n  }\r\n\r\n  return utftext;\r\n};","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Md5GeneratorUtils } from \"./Md5GeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Md5Generator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Md5GeneratorUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online MD5 Generator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"MD5\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const TextDifferencesUtils = {\r\n    findDifferences: (before: string, after: string): string => {\r\n\t\tif(!before || !after) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n        if(before === after) {\r\n            return before;\r\n        }\r\n\t\treturn new TextDifferencer().findDifferencesBetweenStrings(before, after).toString();\r\n\t},\r\n}\r\n\r\nfunction insertElementAt<T>(array: T[], element: T, index: number): void {\r\n\tarray.splice(index, 0, element);\r\n}\r\n\r\nfunction insertElementsAt<T>(array: T[], elements: T[], index: number) {\r\n\tfor (let i = 0; i < elements.length; i++)\r\n\t{\r\n\t\tarray.splice(index + i, 0, elements[i]);\r\n\t}\r\n}\r\n\r\nfunction removeAt<T>(array: T[], index: number) {\r\n\tarray.splice(index, 1);\r\n}\r\n\r\nclass TextDifferencer {\r\n    public findDifferencesBetweenStrings(string0: string, string1: string): TextDifferences {\r\n        let lengthOfShorterString: number = \r\n            (string0.length <= string1.length ? string0.length : string1.length);\r\n \r\n\t\tlet numberOfExtremes = 2;   \r\n\t\tlet passagePairsMatchingAtExtremes: TextPassagePair[] = [];\r\n     \r\n        for (let e = 0; e < numberOfExtremes; e++)\r\n        {\r\n            let lengthOfMatchingSubstring = 0;\r\n     \r\n            for (let i = 0; i < lengthOfShorterString; i++)\r\n            {\r\n                let offsetForString0 = (e === 0 ? i : string0.length - i - 1); \r\n                let offsetForString1 = (e === 0 ? i : string1.length - i - 1);\r\n \r\n                let charFromString0 = string0[offsetForString0];\r\n                let charFromString1 = string1[offsetForString1];\r\n     \r\n                if (charFromString0 !== charFromString1)\r\n                {\r\n                    lengthOfMatchingSubstring = i;\r\n                    break;          \r\n                }   \r\n            }\r\n     \r\n            let matchingSubstringAtExtreme: string;\r\n \r\n            if (e === 0)\r\n            {\r\n                matchingSubstringAtExtreme = string0.substr(0, lengthOfMatchingSubstring);\r\n                string0 = string0.substr(lengthOfMatchingSubstring);\r\n                string1 = string1.substr(lengthOfMatchingSubstring);\r\n            } else // if (e === 1)\r\n            {\r\n                matchingSubstringAtExtreme = string0.substr(string0.length - lengthOfMatchingSubstring);\r\n                string0 = string0.substr(0, string0.length - lengthOfMatchingSubstring);\r\n                string1 = string1.substr(0, string1.length - lengthOfMatchingSubstring);                \r\n            }\r\n \r\n            let passagePairMatchingAtExtreme = new TextPassagePair\r\n            (\r\n                true, // doPassagesMatch\r\n                [\r\n                    new TextPassage(matchingSubstringAtExtreme),\r\n                    new TextPassage(matchingSubstringAtExtreme),\r\n                ]\r\n            );\r\n \r\n            passagePairsMatchingAtExtremes.push\r\n            (\r\n                passagePairMatchingAtExtreme\r\n            );\r\n        }\r\n \r\n        let passagePairsAll: TextPassagePair[] = [];\r\n  \r\n        var passagePairsMatching = this.findPassagePairsMatchingBetweenStrings\r\n        (\r\n            string0, string1, [ 0, 0 ]\r\n        );\r\n  \r\n        this.insertPassagePairsDifferentBetweenMatching\r\n        (\r\n            string0,\r\n            string1,\r\n            passagePairsMatching,\r\n            passagePairsAll\r\n        );\r\n \r\n        for (var e = 0; e < passagePairsMatchingAtExtremes.length; e++)\r\n        {\r\n            var passagePairMatchingAtExtreme = passagePairsMatchingAtExtremes[e];\r\n            insertElementAt\r\n            (\r\n\t\t\t\tpassagePairsAll,\r\n                passagePairMatchingAtExtreme, \r\n                (e === 0 ? 0 : passagePairsAll.length)\r\n            );\r\n        }\r\n          \r\n        var returnValue = new TextDifferences(passagePairsAll);\r\n  \r\n        return returnValue;\r\n    }\r\n  \r\n    private findPassagePairsMatchingBetweenStrings(string0: string, string1: string, positionOffsets: number[]): TextPassagePair[] {\r\n        var passagePairsMatching: TextPassagePair[] = [];\r\n  \r\n        var longestCommonPassagePair = this.findLongestCommonPassagePair\r\n        (\r\n            string0, \r\n            string1\r\n        );\r\n  \r\n        var longestCommonPassageText = longestCommonPassagePair.passages[0].text;\r\n        var lengthOfCommonPassage = longestCommonPassageText.length;\r\n  \r\n        if (lengthOfCommonPassage === 0)\r\n        {\r\n            return passagePairsMatching;    \r\n        }\r\n  \r\n        passagePairsMatching.push(longestCommonPassagePair);\r\n  \r\n        var passages = longestCommonPassagePair.passages;\r\n        var passage0 = passages[0];\r\n        var passage1 = passages[1];\r\n  \r\n        var passagePairsMatchingBeforeCommon = this.findPassagePairsMatchingBetweenStrings\r\n        (\r\n            string0.substr(0, passage0.position),\r\n            string1.substr(0, passage1.position),\r\n            [\r\n                positionOffsets[0], \r\n                positionOffsets[1]\r\n            ]\r\n        );\r\n  \r\n        var passagePairsMatchingAfterCommon = this.findPassagePairsMatchingBetweenStrings\r\n        (\r\n            string0.substr\r\n            (\r\n                passage0.position + lengthOfCommonPassage\r\n            ),\r\n            string1.substr\r\n            (\r\n                passage1.position + lengthOfCommonPassage\r\n            ),\r\n            [\r\n                positionOffsets[0] \r\n                    + passage0.position \r\n                    + lengthOfCommonPassage,\r\n  \r\n                positionOffsets[1] \r\n                    + passage1.position \r\n                    + lengthOfCommonPassage\r\n            ]\r\n        );\r\n  \r\n        var passagePairSetsMatchingBeforeAndAfter = \r\n        [\r\n            passagePairsMatchingBeforeCommon,\r\n            passagePairsMatchingAfterCommon\r\n        ];\r\n  \r\n        for (var i = 0; i < passagePairSetsMatchingBeforeAndAfter.length; i++)\r\n        {\r\n            var passagePairsToInsert = passagePairSetsMatchingBeforeAndAfter[i];\r\n            insertElementsAt\r\n            (          \r\n\t\t\t\tpassagePairsMatching,\r\n                passagePairsToInsert,\r\n                (i === 0 ? 0 : passagePairsMatching.length)\r\n            );\r\n        }\r\n  \r\n        for (i = 0; i < longestCommonPassagePair.passages.length; i++)\r\n        {\r\n            var passage = longestCommonPassagePair.passages[i];\r\n            passage.position += positionOffsets[i];\r\n        }\r\n  \r\n        return passagePairsMatching;\r\n    }\r\n  \r\n    private findLongestCommonPassagePair(string0: string, string1: string): TextPassagePair {\r\n        var passage0 = new TextPassage(\"\", 0);\r\n        var passage1 = new TextPassage(\"\", 0);\r\n  \r\n        var returnValue = new TextPassagePair\r\n        (\r\n            true, // doPassagesMatch\r\n            [\r\n                passage0, passage1\r\n            ]\r\n        );\r\n  \r\n        var lengthOfString0 = string0.length;\r\n        var lengthOfString1 = string1.length;\r\n  \r\n        var substringLengthsForRow: number[] = [];\r\n        var substringLengthsForRowPrev: number[] = [];\r\n  \r\n        var lengthOfLongestCommonSubstringSoFar = 0;\r\n  \r\n        // Build a table whose y-axis is chars from string0,\r\n        // and whose x-axis is chars from string1.\r\n        // Put length of the longest substring in each cell.\r\n  \r\n        for (var i = 0; i < lengthOfString0; i++)\r\n        {\r\n            substringLengthsForRowPrev = substringLengthsForRow;\r\n            substringLengthsForRow = [];\r\n  \r\n            for (var j = 0; j < lengthOfString1; j++)\r\n            {\r\n                if (string0[i] !== string1[j])\r\n                {\r\n                    substringLengthsForRow[j] = 0;\r\n                }\r\n                else \r\n                {\r\n                    var cellValue;\r\n  \r\n                    if (i === 0 || j === 0)\r\n                    {\r\n                        // first row or column\r\n                        cellValue = 1;\r\n                    }\r\n                    else\r\n                    {\r\n                        // Copy cell to upper left, add 1.\r\n                        cellValue = substringLengthsForRowPrev[j - 1] + 1;\r\n                    }\r\n  \r\n                    substringLengthsForRow[j] = cellValue;\r\n  \r\n                    if (cellValue > lengthOfLongestCommonSubstringSoFar)\r\n                    {\r\n                        lengthOfLongestCommonSubstringSoFar = cellValue;\r\n                        var startIndex = i - lengthOfLongestCommonSubstringSoFar + 1;\r\n                        var longestCommonSubstringSoFar = string0.substring // not \"substr\"!\r\n                        (\r\n                            startIndex, \r\n                            i + 1\r\n                        );\r\n  \r\n                        passage0.text = longestCommonSubstringSoFar;\r\n                        passage0.position = startIndex;\r\n  \r\n                        passage1.text = longestCommonSubstringSoFar;\r\n                        passage1.position = j - lengthOfLongestCommonSubstringSoFar + 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n  \r\n        return returnValue;\r\n    }\r\n  \r\n    private insertPassagePairsDifferentBetweenMatching(\r\n        string0: string,\r\n        string1: string,\r\n        passagePairsToInsertBetween: TextPassagePair[],\r\n        passagePairsAll: TextPassagePair[]\r\n    )\r\n    {   \r\n        insertElementAt\r\n        (\r\n\t\t\tpassagePairsToInsertBetween,\r\n            new TextPassagePair\r\n            (\r\n                true, // doPassagesMatch\r\n                [\r\n                    new TextPassage(\"\", 0),\r\n                    new TextPassage(\"\", 0)\r\n                ]\r\n            ),\r\n            0\r\n        );\r\n  \r\n        passagePairsToInsertBetween.push\r\n        (\r\n            new TextPassagePair\r\n            (\r\n                true, // doPassagesMatch\r\n                [\r\n                    new TextPassage(\"\", string0.length),\r\n                    new TextPassage(\"\", string1.length)\r\n                ]\r\n            )\r\n        );\r\n  \r\n        var pMax = passagePairsToInsertBetween.length - 1;\r\n  \r\n        for (var p = 0; p < pMax; p++)\r\n        {\r\n            let passagePairToInsertAfter = passagePairsToInsertBetween[p];\r\n            let passagePairToInsertBefore = passagePairsToInsertBetween[p + 1];\r\n  \r\n            this.buildAndInsertPassagePairBetweenExisting\r\n            (\r\n                string0,\r\n                string1,\r\n                passagePairToInsertBefore,\r\n                passagePairToInsertAfter,\r\n                passagePairsAll\r\n            );\r\n  \r\n            passagePairsAll.push(passagePairToInsertBefore);\r\n        }\r\n  \r\n        var indexOfPassagePairFinal = passagePairsAll.length - 1;\r\n  \r\n        var passagePairFinal = passagePairsAll[indexOfPassagePairFinal];\r\n  \r\n        if \r\n        (\r\n            passagePairFinal.doPassagesMatch === true \r\n            && passagePairFinal.passages[0].text.length === 0\r\n        )\r\n        {\r\n            removeAt(passagePairsAll, indexOfPassagePairFinal);\r\n        }\r\n    }\r\n  \r\n    private buildAndInsertPassagePairBetweenExisting(\r\n        string0: string, \r\n        string1: string, \r\n        passagePairToInsertBefore: TextPassagePair, \r\n        passagePairToInsertAfter: TextPassagePair,\r\n        passagePairsAll: TextPassagePair[]\r\n    )\r\n    {\r\n        var lengthOfPassageToInsertAfter = passagePairToInsertAfter.passages[0].text.length;\r\n  \r\n        var positionsForPassagePairDifferent = \r\n        [\r\n            [\r\n                passagePairToInsertAfter.passages[0].position \r\n                    + lengthOfPassageToInsertAfter,\r\n  \r\n                passagePairToInsertAfter.passages[1].position \r\n                    + lengthOfPassageToInsertAfter\r\n            ],        \r\n            [\r\n                passagePairToInsertBefore.passages[0].position,\r\n                passagePairToInsertBefore.passages[1].position\r\n            ]          \r\n        ];\r\n  \r\n        var passageToInsert0 =  new TextPassage\r\n        (\r\n            string0.substring // not \"substr\"!\r\n            (\r\n                positionsForPassagePairDifferent[0][0], \r\n                positionsForPassagePairDifferent[1][0]\r\n            ),\r\n            positionsForPassagePairDifferent[0][0]\r\n        );\r\n  \r\n        var passageToInsert1 = new TextPassage\r\n        (\r\n            string1.substring  // not \"substr\"!\r\n            (\r\n                positionsForPassagePairDifferent[0][1], \r\n                positionsForPassagePairDifferent[1][1]\r\n            ),\r\n            positionsForPassagePairDifferent[0][1]\r\n        );\r\n  \r\n        var passagePairToInsert = new TextPassagePair\r\n        (\r\n            false, // doPassagesMatch\r\n            [\r\n                passageToInsert0,\r\n                passageToInsert1\r\n            ]\r\n        );\r\n  \r\n        if \r\n        (\r\n            passagePairToInsert.passages[0].text.length > 0\r\n            || passagePairToInsert.passages[1].text.length > 0\r\n        )\r\n        {\r\n            passagePairsAll.push(passagePairToInsert);\r\n        }\r\n    } \r\n}\r\n\r\nclass TextDifferences {\r\n\tconstructor(passagePairs: any)\r\n\t{\r\n\t\tthis.passagePairs = passagePairs;\r\n\t}\r\n\r\n\tpublic passagePairs: any;\r\n\r\n    // instance methods\r\n  \r\n    public toString() {\r\n        var returnValue = \"\";\r\n  \r\n        for (var p = 0; p < this.passagePairs.length; p++)\r\n        {\r\n            var passagePair = this.passagePairs[p];\r\n            var passagePairAsString = passagePair.toString();\r\n  \r\n            returnValue += passagePairAsString;\r\n        }\r\n  \r\n        return returnValue; \r\n    }   \r\n}\r\n\r\nclass TextPassage\r\n{\r\n\tconstructor(text: string, position: number = 0) {\r\n\t\tthis.text = text;\r\n\t\tthis.position = position;\r\n\t}\r\n    \r\n\tpublic text: string;\r\n\tpublic position: number;\r\n}\r\n  \r\nclass TextPassagePair\r\n{\r\n\tconstructor(doPassagesMatch: any, passages: any) {\r\n\t\tthis.doPassagesMatch = doPassagesMatch;\r\n\t\tthis.passages = passages;   \r\n\t}\r\n\r\n\tpublic doPassagesMatch: any;\r\n\tpublic passages: any;\r\n\r\n\tpublic toString() {\r\n        var returnValue = \"\";\r\n  \r\n        if (this.doPassagesMatch === true)\r\n        {\r\n            returnValue = this.passages[0].text;\r\n            returnValue = this.escapeStringForHTML(returnValue);\r\n        }\r\n        else\r\n        {\r\n\t\t\treturnValue += \"<mark class='bg-danger px-0'>\";\r\n\t\t\treturnValue += this.escapeStringForHTML(this.passages[0].text);\r\n\t\t\treturnValue += \"</mark><mark class='bg-success px-0'>\";\r\n\t\t\treturnValue += this.escapeStringForHTML(this.passages[1].text);\r\n\t\t\treturnValue += \"</mark>\"; \r\n        }\r\n  \r\n        return returnValue;\r\n    }\r\n\r\n\tpublic escapeStringForHTML(stringToEscape: string) {\r\n        var returnValue = stringToEscape.replace\r\n        (\r\n            \"&\", \"&amp;\"\r\n        ).replace\r\n        (\r\n            \"<\", \"&lt;\"\r\n        ).replace\r\n        (\r\n            \">\", \"&gt;\"\r\n        ).replace\r\n        (\r\n            \"\\n\", \"<br />\"\r\n        );\r\n \r\n        return returnValue;\r\n    }\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { TextDifferencesUtils } from \"./TextDifferencesUtils\";\r\n\r\ninterface FormValue {\r\n    before: string,\r\n    after: string,\r\n    differences: string,\r\n}\r\n\r\nexport const TextDifferences: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        before: '',\r\n        after: '',\r\n        differences: '',\r\n    });\r\n\r\n    const executeAsync = (action: () => void): void => {\r\n        window.setTimeout(action, 1);\r\n    }\r\n\r\n    const findDifferences = (before: string, after: string): void => {\r\n        setFormValue({ \r\n            ...formValue, \r\n            before,\r\n            after,\r\n            differences: \"loading...\" \r\n        });\r\n        executeAsync(() => {\r\n            setFormValue({ \r\n                ...formValue, \r\n                before,\r\n                after,\r\n                differences: TextDifferencesUtils.findDifferences(before, after) \r\n            })\r\n        });\r\n    }\r\n\r\n    const onChangeBefore = (e: any) => {\r\n        findDifferences(e.currentTarget.value || \"\", formValue.after);\r\n    }\r\n\r\n    const onChangeAfter = (e: any) => {\r\n        findDifferences(formValue.before, e.currentTarget.value || \"\");\r\n    }\r\n\r\n    const formatHtml = (value: string) => value.replace(/\\n/g, \"<br/>\").replace(/\\s\\s/g, \"&nbsp;&nbsp;\");\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Finding Differences Between Texts</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text Before\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.before}\r\n                        onChange={onChangeBefore} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text After\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.after}\r\n                        onChange={onChangeAfter}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <h3>Differences</h3>\r\n            <MDBRow>\r\n                <MDBCol md=\"12\" className=\"mb-3\">\r\n                    <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{height: 385}}>\r\n                        <div dangerouslySetInnerHTML={{ __html: formatHtml(formValue.differences) }} />\r\n                    </div>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const JsonFormatterUtils = {\r\n    format: (value: string, formatValue: (value: string | number | boolean | null) => string): string => formatJson(value, formatValue),\r\n}\r\n\r\nfunction formatJson(value: string, formatValue: (value: string | number | boolean | null) => string) {\r\n  if(!value) {\r\n    return \"\";\r\n  }\r\n\r\n  try {\r\n    return JSON.stringify(parseJson(value), null, 4)\r\n      .replace(/\": [\\d.]+[,\\n]/g, (x) => formatNumber(x, formatValue))\r\n      .replace(/\": \".+\\n/g, (x) => formatString(x, formatValue))\r\n      .replace(/\": true/g, (x) => formatBoolean(x, formatValue))\r\n      .replace(/\": false/g, (x) => formatBoolean(x, formatValue))\r\n      .replace(/\": null/g, (x) => formatNull(x, formatValue))\r\n      ;\r\n  } catch(e: any) {\r\n    return (e as Error).message;\r\n  }\r\n}\r\n\r\nfunction parseJson(value: string): any {\r\n  return JSON.parse(value.replace(/\\n/g, \"\"));\r\n}\r\n\r\nfunction formatNumber(value: string, formatValue: (value: number) => string): string {\r\n  return value.replace(/[\\d.]+/, (x) => formatValue(parseFloat(x)));\r\n}\r\n\r\nfunction formatString(value: string, formatValue: (value: string) => string): string {\r\n  return value.replace(/ \".+\"/, formatValue);\r\n}\r\n\r\nfunction formatBoolean(value: string, formatValue: (value: boolean) => string): string {\r\n  return value.replace(/true/, (_) => formatValue(true)).replace(/false/, (_) => formatValue(false));\r\n}\r\n\r\nfunction formatNull(value: string, formatValue: (value: any) => string): string {\r\n  return value.replace(/null/, (_) => formatValue(null));\r\n}\r\n\r\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { JsonFormatterUtils } from \"./JsonFormatterUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const JsonFormatter: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const formatValueHtml = (value: string | number | boolean, className: \"text-danger\" | \"text-success\"): string => {\r\n        return `<span class=${className}>${value}</span>`;\r\n    };\r\n\r\n    const formatValue = (value: string | number | boolean | null): string => {\r\n        if (value === null) {\r\n            return formatValueHtml(\"null\", \"text-danger\");\r\n        }\r\n\r\n        const type = typeof value === \"number\" || typeof value === \"boolean\"\r\n            ? \"text-danger\" \r\n            : \"text-success\";\r\n        return formatValueHtml(value, type);\r\n    };\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: JsonFormatterUtils.format(value, formatValue) });\r\n    }\r\n\r\n    const formatHtml = (value: string) => value.replace(/\\n/g, \"<br/>\").replace(/\\s\\s/g, \"&nbsp;&nbsp;\");\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Json Formatter</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Json\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{height: 385}}>\r\n                        <div dangerouslySetInnerHTML={{ __html: formatHtml(formValue.encoded) }} />\r\n                    </div>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const JsonViewerUtils = {\r\n    parse: (value: string): JsonObject | null => parseJsonObject(value),\r\n}\r\n\r\nexport type JsonValueType = \"null\" | \"value\" | \"array\" | \"object\";\r\n\r\ninterface JsonValue {\r\n  value: any,\r\n  type: JsonValueType,\r\n  expanded: boolean,\r\n}\r\n\r\ninterface JsonProperty {\r\n  name: string,\r\n  value: JsonValue,\r\n}\r\n\r\nexport interface JsonObject {\r\n  values: JsonProperty[],\r\n}\r\n\r\nfunction parseJsonObject(value: string): JsonObject | null {\r\n  if (!value) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    return getObject(parseJson(value));\r\n  } catch(e: any) {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction parseJson(value: string): any {\r\n  return JSON.parse(value.replace(/\\n/g, \"\"));\r\n}\r\n\r\nfunction getObject(value: any): JsonObject {\r\n  return {\r\n    values: getProperties(value),\r\n  }\r\n}\r\n\r\nfunction getProperties(value: any): JsonProperty[] {\r\n  return Object.keys(value).map(key => ({\r\n    name: key,\r\n    value: getValue(value[key]),\r\n  }))\r\n}\r\n\r\nfunction getValue(value: any): JsonValue {\r\n  if (value === null) {\r\n    return jsonValue(null, \"null\");\r\n  }\r\n  if (Array.isArray(value)) {\r\n    return jsonValue((value as []).map(getValue), \"array\");\r\n  }\r\n  const type = typeof value;\r\n  if (type === \"string\" || type === \"number\" || type === \"bigint\" || type === \"boolean\") {\r\n    return jsonValue(value, \"value\");\r\n  }\r\n  return jsonValue(getObject(value), \"object\");\r\n}\r\n\r\nfunction jsonValue(value: any, type: JsonValueType): JsonValue {\r\n  return {\r\n    value,\r\n    type,\r\n    expanded: false,\r\n  }\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { JsonObject, JsonViewerUtils } from \"./JsonViewerUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    jsonObject: JsonObject | null,\r\n}\r\n\r\nexport const JsonViewer: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        jsonObject: null,\r\n    });\r\n\r\n    const onViewJson = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, jsonObject: JsonViewerUtils.parse(value) });\r\n    }\r\n\r\n    console.log(formValue.jsonObject);\r\n    return (\r\n        <>\r\n            <h1>Online Json Viewer</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Json\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onViewJson} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{height: 385}}>\r\n                        \r\n                    </div>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const UnitConverterUtils = {\r\n    convert: (value: number, from: Unit, to: Unit): number => convertUnit(value, from, to),\r\n}\r\n\r\nfunction convertUnit(value: number, from: Unit, to: Unit): number {\r\n\tif (isNaN(value)) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn value * UnitValues[from] / UnitValues[to];\r\n}\r\n\r\nexport enum Unit {\r\n\t// Data storage\r\n\tbit = \"Bit (b)\",\r\n\tb = \"Byte (B)\",\r\n\tKB = \"Kilobyte (KB)\",\r\n\tMB = \"Megabyte (MB)\",\r\n\tGB = \"Gigabyte (MB)\",\r\n\tTB = \"Terabyte (MB)\",\r\n\tPB = \"Petabyte (MB)\",\r\n\tEB = \"Exabyte (MB)\",\r\n\r\n\t// Time\r\n\ttick = \"Tick (t)\",\r\n\tms = \"Milissecond (ms)\",\r\n\ts = \"Second (s)\",\r\n\tm = \"Minute (m)\",\r\n\th = \"Hour (h)\",\r\n\td = \"Day (d)\",\r\n\tM = \"Month (M)\",\r\n\ty = \"Year (y)\",\r\n}\r\n\r\nexport enum UnitType {\r\n\tDataStorage = \"Data Storage\",\r\n\tTime = \"Time\",\r\n}\r\n\r\nexport const UnitGroups: { [unitType: string]: Unit[] } = {\r\n\t[UnitType.DataStorage]: [Unit.bit, Unit.b, Unit.KB, Unit.MB, Unit.GB, Unit.TB, Unit.PB, Unit.EB,],\r\n\t[UnitType.Time]: [Unit.tick, Unit.ms, Unit.s, Unit.m, Unit.h, Unit.d, Unit.M, Unit.y,],\r\n\t// [UnitType.]: [Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit.,],\r\n}\r\n\r\nexport const UnitTypes = Object.keys(UnitGroups);\r\n\r\nconst UnitValues: { [unit: string]: number } = {\r\n\t// Data storage\r\n\t[Unit.bit]: 1,\r\n\t[Unit.b]: 8,\r\n\t[Unit.KB]: 8 * 1024,\r\n\t[Unit.MB]: 8 * 1024 * 1024,\r\n\t[Unit.GB]: 8 * 1024 * 1024 * 1024,\r\n\t[Unit.TB]: 8 * 1024 * 1024 * 1024 * 1024,\r\n\t[Unit.PB]: 8 * 1024 * 1024 * 1024 * 1024 * 1024,\r\n\t[Unit.EB]: 8 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024,\r\n\r\n\t// Time\r\n\t[Unit.tick]: 1,\r\n\t[Unit.ms]: 100,\r\n\t[Unit.s]: 100 * 1000,\r\n\t[Unit.m]: 100 * 1000 * 60,\r\n\t[Unit.h]: 100 * 1000 * 60 * 60,\r\n\t[Unit.d]: 100 * 1000 * 60 * 60 * 24,\r\n\t[Unit.M]: 100 * 1000 * 60 * 60 * 24 * 30.43,\r\n\t[Unit.y]: 100 * 1000 * 60 * 60 * 24 * 30.43 * 12,\r\n\r\n\t// ****\r\n\t// [Unit.]: 1,\r\n\t// [Unit.]: 1000,\r\n\t// [Unit.]: 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\r\n}","import { MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBDropdown, MDBDropdownItem, MDBDropdownLink, MDBDropdownMenu, MDBDropdownToggle, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Unit, UnitConverterUtils, UnitGroups, UnitTypes } from \"./UnitConverterUtils\";\r\n\r\nexport const UnitConverter: React.FC = () => {\r\n    return (\r\n        <>\r\n            <h1>Online Unit Converter</h1>\r\n            {UnitTypes.map(x => (\r\n                <MDBCard border=\"primary\" className=\"mb-3\">\r\n                    <MDBCardHeader background=\"primary\" className=\"text-white\">{x}</MDBCardHeader>\r\n                    <MDBCardBody className=\"pb-2\">\r\n                        <UnitConverterRow units={UnitGroups[x]} />\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\ninterface FormValue {\r\n    value: number,\r\n    from: Unit,\r\n    to: Unit,\r\n    result: number,\r\n}\r\n\r\ninterface UnitConverterRowParams {\r\n    units: Unit[],\r\n}\r\n\r\nconst UnitConverterRow: React.FC<UnitConverterRowParams> = (params: UnitConverterRowParams) => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        value: 0,\r\n        from: params.units[0],\r\n        to: params.units[0],\r\n        result: 0,\r\n    });\r\n\r\n    const onConvert = (e: any) => {\r\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.value };\r\n        setFormValue({ ...newFormValue, result: UnitConverterUtils.convert(newFormValue.value, newFormValue.from, newFormValue.to) });\r\n    }\r\n\r\n    const onChangeUnit = (name: string, value: Unit) => {\r\n        onConvert({\r\n            target: {name},\r\n            currentTarget: {value},\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MDBRow>\r\n                <MDBCol md=\"3\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        name=\"value\"\r\n                        label=\"Value\" \r\n                        value={formValue.value.toString()}\r\n                        onChange={onConvert} \r\n                        type=\"number\"\r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"3\" className=\"mb-3\">\r\n                    <UnitConverterUnitsDropDown \r\n                        name=\"from\"\r\n                        units={params.units}\r\n                        onChange={onChangeUnit} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"3\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        name=\"result\"\r\n                        label=\"Result\" \r\n                        value={formValue.result.toString()}\r\n                        type=\"number\"\r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"3\" className=\"mb-3\">\r\n                    <UnitConverterUnitsDropDown \r\n                        name=\"to\"\r\n                        units={params.units}\r\n                        onChange={onChangeUnit} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface DropDownValue {\r\n    value: Unit,\r\n}\r\n\r\ninterface UnitConverterUnitsDropDownParams {\r\n    name: string,\r\n    units: Unit[],\r\n    onChange: (name: string, unit: Unit) => void,\r\n}\r\n\r\nconst UnitConverterUnitsDropDown: React.FC<UnitConverterUnitsDropDownParams> = (params: UnitConverterUnitsDropDownParams) => {\r\n    const [formValue, setFormValue] = useState<DropDownValue>({\r\n        value: params.units[0],\r\n    });\r\n\r\n    const onChange = (value: Unit) => {\r\n        setFormValue({ ...formValue, value });\r\n        params.onChange(params.name, value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MDBDropdown group className=\"w-100\">\r\n                <MDBDropdownToggle>{formValue.value}</MDBDropdownToggle>\r\n                <MDBDropdownMenu>\r\n                    <MDBDropdownItem>\r\n                        <MDBDropdownLink tag=\"button\" type=\"button\" className=\"bg-light p-0 m-0\"></MDBDropdownLink>\r\n                    </MDBDropdownItem>\r\n                    {params.units.map(x => (\r\n                        <MDBDropdownItem>\r\n                            <MDBDropdownLink \r\n                                tag=\"button\" \r\n                                type=\"button\" \r\n                                onClick={() => onChange(x)}\r\n                                className={formValue.value === x ? \"active\" : \"\"}\r\n                                aria-current={formValue.value === x ? \"true\" : \"\"}\r\n                            >\r\n                                {x}\r\n                            </MDBDropdownLink>\r\n                        </MDBDropdownItem>\r\n                    ))}\r\n                </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n        </>\r\n    )\r\n}","interface Props {\r\n    amount: number,\r\n    term: number,\r\n    rate: number,\r\n}\r\n\r\nexport interface Result {\r\n    amount: number,\r\n    term: number,\r\n    rate: number,\r\n    monthlyPayment: number,\r\n    months: ResultRow[],\r\n    total: ResultRow,\r\n}\r\n\r\nexport interface ResultRow {\r\n    index: number,\r\n    date: Date,\r\n    payment: number,\r\n    principal: number,\r\n    interest: number,\r\n    balance: number,\r\n}\r\n\r\nexport const LoanCalculatorUtils = {\r\n    calculate: (props: Props): Result | null => calculate(props),\r\n}\r\n\r\nfunction calculate(props: Props): Result | null {\r\n    if (!props.amount || !props.term || !props.rate) {\r\n        return null;\r\n    }\r\n\r\n    const monthlyRate = props.rate / 12 / 100;\r\n    const monthlyPayment = props.amount * (monthlyRate + monthlyRate / (Math.pow(1 + monthlyRate, props.term) - 1));\r\n    const months = calculateMonths(monthlyRate, props.amount, props.term, monthlyPayment);\r\n    const total = calculateTotal(months);\r\n    \r\n    return {\r\n        amount: props.amount,\r\n        term: props.term,\r\n        rate: props.rate,\r\n        monthlyPayment,\r\n        months,\r\n        total\r\n    }\r\n}\r\n\r\nfunction calculateMonths(monthlyRate: number, amount: number, term: number, monthlyPayment: number): ResultRow[] {\r\n    const month: ResultRow[] = [];\r\n    let balance = amount;\r\n\r\n    for (let i = 1; i <= term; i++) {\r\n        const now = new Date();\r\n        const date = new Date(now.setMonth(now.getMonth() + i));\r\n        const interest = balance * monthlyRate;\r\n        const principal = balance > monthlyPayment - interest ? monthlyPayment - interest : balance;\r\n        const payment = principal + interest;\r\n        balance -= principal;\r\n\r\n        month.push({\r\n            index: i,\r\n            date,\r\n            payment,\r\n            principal,\r\n            interest,\r\n            balance,\r\n        })\r\n    }\r\n\r\n    return month;\r\n}\r\n\r\nfunction calculateTotal(months: ResultRow[]): ResultRow {\r\n    return months.reduce((current, next) => ({\r\n        ...current,\r\n        payment: current.payment + next.payment,\r\n        principal: current.principal + next.principal,\r\n        interest: current.interest + next.interest,\r\n    }));\r\n}","import { MDBCol, MDBDropdown, MDBDropdownItem, MDBDropdownLink, MDBDropdownMenu, MDBDropdownToggle, MDBInputGroup, MDBInputGroupElement, MDBInputGroupText, MDBRow, MDBTable, MDBTableBody, MDBTableHead } from \"mdb-react-ui-kit\";\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport { LoanCalculatorUtils, Result, ResultRow } from \"./LoanCalculatorUtils\";\r\n\r\ninterface FormValue {\r\n    amount: number,\r\n    term: number,\r\n    rate: number,\r\n    result: Result | null,\r\n}\r\n\r\nlet timeout = 0;\r\n\r\nexport const LoanCalculator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        amount: 5000,\r\n        term: 60,\r\n        rate: 4.5,\r\n        result: null,\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => calculate(formValue), []);\r\n\r\n    const executeAsync = (action: () => void) => {\r\n        if (timeout) {\r\n            window.clearTimeout(timeout);\r\n        }\r\n        timeout = window.setTimeout(action, 1000);\r\n    }\r\n\r\n    const calculate = (formValue: FormValue) => {\r\n        const result = LoanCalculatorUtils.calculate({...formValue});\r\n        setFormValue({ ...formValue, result });\r\n    };\r\n\r\n    const onChange = (name: string, value: any) => {\r\n        const newFormValue = { ...formValue, [name]: value };\r\n        setFormValue({ ...newFormValue });\r\n        executeAsync(() => calculate(newFormValue));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Loan Calculator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <LoanCalculatorFrom\r\n                        amount={formValue.amount}\r\n                        term={formValue.term}\r\n                        rate={formValue.rate}\r\n                        onChange={onChange}\r\n                    />\r\n                </MDBCol>\r\n                {formValue.result && (\r\n                    <MDBCol md=\"6\">\r\n                        <LoanCalculatorSummary result={formValue.result} />\r\n                    </MDBCol>\r\n                )}\r\n            </MDBRow>\r\n            {formValue.result && (\r\n                <MDBRow>\r\n                    <MDBCol md=\"12\">\r\n                        <LoanCalculatorTable result={formValue.result} />\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\ninterface LoanCalculatorFromProps {\r\n    amount: number,\r\n    term: number,\r\n    rate: number,\r\n    onChange: (name: string, value: number) => void,\r\n}\r\n\r\nconst LoanCalculatorFrom: React.FC<LoanCalculatorFromProps> = (props: LoanCalculatorFromProps) => {\r\n    return (\r\n        <>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n                <label htmlFor=\"amount\" className=\"form-label\">\r\n                    Loan amount\r\n                </label>\r\n                <MDBInputGroup>\r\n                    <NumberEdit\r\n                        value={props.amount}\r\n                        name=\"amount\"\r\n                        onChange={props.onChange}\r\n                    />\r\n                </MDBInputGroup>\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n                <LoanCalculatorFromTerm name=\"term\" value={props.term} onChange={props.onChange} />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n                <label htmlFor=\"amount\" className=\"form-label\">\r\n                    Interest rate per year\r\n                </label>\r\n                <MDBInputGroup>\r\n                    <NumberEdit \r\n                        value={props.rate}\r\n                        name=\"rate\"\r\n                        onChange={props.onChange}\r\n                    />\r\n                    <MDBInputGroupText>%</MDBInputGroupText>\r\n                </MDBInputGroup>\r\n            </MDBCol>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface LoanCalculatorFromTermProps {\r\n    name: string,\r\n    value: number,\r\n    onChange: (name: string, value: number) => void,\r\n}\r\n\r\ninterface LoanCalculatorFromTermValue {\r\n    term: number,\r\n    termPeriod: string,\r\n}\r\n\r\nconst LoanCalculatorFromTerm: React.FC<LoanCalculatorFromTermProps> = (props: LoanCalculatorFromTermProps) => {\r\n    const [formValue, setFormValue] = useState<LoanCalculatorFromTermValue>({\r\n        term: props.value / 12,\r\n        termPeriod: \"years\",\r\n    });\r\n\r\n    const calculateAndSendChange = (term: number, termPeriod: string) => {\r\n        const value = termPeriod === \"years\" ? term * 12 : term;\r\n        props.onChange(props.name, value);\r\n    }\r\n    \r\n    const onChange = (name: string, value: any) => {\r\n        const newFormValue = { ...formValue, [name]: value };\r\n        setFormValue({ ...newFormValue });\r\n        calculateAndSendChange(newFormValue.term, newFormValue.termPeriod)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor=\"term\" className=\"form-label\">\r\n                Loan term\r\n            </label>\r\n            <MDBInputGroup>\r\n                <NumberEdit\r\n                    value={formValue.term}\r\n                    name=\"term\"\r\n                    onChange={onChange}\r\n                />\r\n                <LoanCalculatorFromDropDown \r\n                    name=\"termPeriod\"\r\n                    values={[\"years\", \"months\"]}\r\n                    className=\"group-drop-down-right\"\r\n                    onChange={onChange}\r\n                />\r\n            </MDBInputGroup>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface DropDownValue {\r\n    value: string,\r\n}\r\n\r\ninterface LoanCalculatorFromDropDownParams {\r\n    name: string,\r\n    values: string[],\r\n    className?: string,\r\n    onChange: (name: string, value: any) => void,\r\n}\r\n\r\nconst LoanCalculatorFromDropDown: React.FC<LoanCalculatorFromDropDownParams> = (props: LoanCalculatorFromDropDownParams) => {\r\n    const [formValue, setFormValue] = useState<DropDownValue>({\r\n        value: props.values[0],\r\n    });\r\n\r\n    const onChange = (value: string) => {\r\n        setFormValue({ ...formValue, value });\r\n        props.onChange(props.name, value);\r\n    }\r\n\r\n    return (\r\n        <MDBDropdown>\r\n            <MDBDropdownToggle className={props.className}>{formValue.value}</MDBDropdownToggle>\r\n            <MDBDropdownMenu>\r\n                <MDBDropdownItem>\r\n                    <MDBDropdownLink tag=\"button\" type=\"button\" className=\"bg-light p-0 m-0\"></MDBDropdownLink>\r\n                </MDBDropdownItem>\r\n                {props.values.map(x => (\r\n                    <MDBDropdownItem key={x}>\r\n                        <MDBDropdownLink \r\n                            tag=\"button\" \r\n                            type=\"button\" \r\n                            onClick={() => onChange(x)}\r\n                            className={formValue.value === x ? \"active\" : \"\"}\r\n                            aria-current={formValue.value === x ? \"true\" : \"\"}\r\n                        >\r\n                            {x}\r\n                        </MDBDropdownLink>\r\n                    </MDBDropdownItem>\r\n                ))}\r\n            </MDBDropdownMenu>\r\n        </MDBDropdown>\r\n    )\r\n}\r\n\r\ninterface LoanCalculatorTableValue {\r\n    maxCount: number,\r\n}\r\n\r\ninterface LoanCalculatorTableParams {\r\n    result: Result,\r\n}\r\n\r\nconst maxCountStep = 300;\r\n\r\nconst LoanCalculatorTable: React.FC<LoanCalculatorTableParams> = (props: LoanCalculatorTableParams) => {\r\n    const [formValue, setFormValue] = useState<LoanCalculatorTableValue>({\r\n        maxCount: maxCountStep,\r\n    });\r\n    \r\n    useEffect(() => {\r\n        window.setTimeout(() => {\r\n        if (props.result.months.length > formValue.maxCount) {\r\n                setFormValue({ ...formValue, maxCount: formValue.maxCount + maxCountStep });\r\n            }\r\n        }, 1000);\r\n    // eslint-disable-next-line\r\n    }, [formValue])\r\n\r\n    useEffect(() => {\r\n        setFormValue({ ...formValue, maxCount: maxCountStep });\r\n    // eslint-disable-next-line\r\n    }, [props.result])\r\n\r\n    return (\r\n        <MDBTable small hover>\r\n            <MDBTableHead>\r\n                <tr>\r\n                    <th scope=\"col\"></th>\r\n                    <th scope=\"col\">Date</th>\r\n                    <th scope=\"col\">Payment</th>\r\n                    <th scope=\"col\">Principal</th>\r\n                    <th scope=\"col\">Interest</th>\r\n                    <th scope=\"col\">Balance</th>\r\n                </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n                <tr>\r\n                    <td></td>\r\n                    <td><DateView value={new Date()} /></td>\r\n                    <td>&ndash;</td>\r\n                    <td>&ndash;</td>\r\n                    <td>&ndash;</td>\r\n                    <td><NumberView value={props.result.amount} /></td>\r\n                </tr>\r\n                {props.result.months.slice(0, formValue.maxCount).map(x => (\r\n                    <LoanCalculatorTableRowMemo key={x.date.toString()} {...x} />\r\n                ))}\r\n                {props.result.months.length <= formValue.maxCount && (\r\n                    <tr className=\"table-success\">\r\n                        <td></td>\r\n                        <td></td>\r\n                        <th><NumberView value={props.result.total.payment} /></th>\r\n                        <th><NumberView value={props.result.total.principal} /></th>\r\n                        <th><NumberView value={props.result.total.interest} /></th>\r\n                        <td></td>\r\n                    </tr>\r\n                )}\r\n            </MDBTableBody>\r\n        </MDBTable>\r\n    )\r\n}\r\n\r\nconst LoanCalculatorTableRow: React.FC<ResultRow> = (x: ResultRow) => {\r\n    return (\r\n        <tr>\r\n            <th>{x.index}</th>\r\n            <td><DateView value={x.date} /></td>\r\n            <td><NumberView value={x.payment} /></td>\r\n            <td><NumberView value={x.principal} /></td>\r\n            <td><NumberView value={x.interest} /></td>\r\n            <td><NumberView value={x.balance} /></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst LoanCalculatorTableRowMemo = memo(LoanCalculatorTableRow);\r\n\r\ninterface LoanCalculatorSummaryParams {\r\n    result: Result,\r\n}\r\n\r\nconst LoanCalculatorSummary: React.FC<LoanCalculatorSummaryParams> = (props: LoanCalculatorSummaryParams) => {\r\n    return (\r\n        <MDBTable small>\r\n            <MDBTableBody>\r\n                <tr>\r\n                    <td className=\"h6\">Monthly Payments</td>\r\n                    <td className=\"h6\"><NumberView value={props.result.monthlyPayment} /></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"h6\">Total Principal Paid</td>\r\n                    <td className=\"h6\"><NumberView value={props.result.total.principal} /></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"h6\">Total Interest Paid</td>\r\n                    <td className=\"h6\"><NumberView value={props.result.total.interest} /></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"h6\">Total Payments</td>\r\n                    <td className=\"h6\"><NumberView value={props.result.total.payment} /></td>\r\n                </tr>\r\n            </MDBTableBody>\r\n        </MDBTable>\r\n    )\r\n}\r\n\r\ninterface ViewParams<T> {\r\n    value: T,\r\n}\r\n\r\nconst NumberView: React.FC<ViewParams<number>> = (props: ViewParams<number>) => {\r\n    const options: Intl.NumberFormatOptions = {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n    }\r\n    return <>{new Intl.NumberFormat(undefined, options).format(props.value)}</>;\r\n}\r\n\r\nconst DateView: React.FC<ViewParams<Date>> = (props: ViewParams<Date>) => {\r\n    const dateOptions: Intl.DateTimeFormatOptions = {\r\n        dateStyle: \"long\",\r\n    }\r\n    \r\n    const parts = new Intl.DateTimeFormat(\"en-us\", dateOptions).formatToParts(props.value);\r\n    const month = parts.find(x => x.type === \"month\")?.value;\r\n    const year = parts.find(x => x.type === \"year\")?.value;\r\n\r\n    return <>{month} {year}</>;\r\n}\r\n\r\ninterface EditParams<T> {\r\n    name: string,\r\n    value: T,\r\n    onChange: (name: string, value: T) => void,\r\n}\r\n\r\ninterface EditValue {\r\n    value: string,\r\n}\r\n\r\nconst NumberEdit: React.FC<EditParams<number>> = (props: EditParams<number>) => {\r\n    const [formValue, setFormValue] = useState<EditValue>({\r\n        value: props.value.toString(),\r\n    });\r\n\r\n    const onChange = (e: any) => {\r\n        const value = e.currentTarget.value as string;\r\n        setFormValue({ ...formValue, value });\r\n        props.onChange(props.name, parseFloat(value.replace(\",\", \".\")))\r\n    };\r\n  \r\n    return (\r\n        <MDBInputGroupElement \r\n            type=\"text\"\r\n            value={formValue.value}\r\n            name={props.name}\r\n            id={props.name}\r\n            onChange={onChange}\r\n        />\r\n    );\r\n}","export const Base64EncodeFileOrImageUtils = {\r\n    encode: (value: number[]): string => encodeBase64(value),\r\n}\r\n\r\nconst base64Keys = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n \r\nfunction encodeBase64(value: number[]): string {\r\n  let output = \"\";\r\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n  let i = 0;\r\n\r\n  while (i < value.length) {\r\n\r\n    chr1 = value[i++];\r\n    chr2 = value[i++];\r\n    chr3 = value[i++];\r\n\r\n    enc1 = chr1 >> 2;\r\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n    enc4 = chr3 & 63;\r\n\r\n    if (isNaN(chr2)) {\r\n      enc3 = enc4 = 64;\r\n    } else if (isNaN(chr3)) {\r\n      enc4 = 64;\r\n    }\r\n\r\n    output = output +\r\n      base64Keys.charAt(enc1) + base64Keys.charAt(enc2) +\r\n      base64Keys.charAt(enc3) + base64Keys.charAt(enc4);\r\n  }\r\n\r\n  return output;\r\n}","import { MDBBtn } from \"mdb-react-ui-kit\";\r\nimport { createRef, memo, useState } from \"react\";\r\nimport { Base64EncodeFileOrImageUtils } from \"./Base64EncodeFileOrImageUtils\";\r\n\r\ninterface FormValue {\r\n    encoded: string,\r\n}\r\n\r\nconst maxSizeMB = 5;\r\n\r\nexport const Base64EncodeFileOrImage: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        encoded: \"\",\r\n    });\r\n\r\n    const uploadFileRef: any = createRef();\r\n\r\n    const onUpload = (e: any) => {\r\n        if (e.target.files.length > 0) {\r\n            setFormValue({ encoded: \"Loading...\" });\r\n\r\n            const file = e.target.files[0] as File;\r\n            const fileSizeMB = file.size / 1024 / 1024;\r\n            if (fileSizeMB > maxSizeMB) {\r\n                setFormValue({ encoded: `File too large. Max file size ${maxSizeMB} MB. File size ${fileSizeMB.toFixed(1)} MB` });\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(new Blob([file]));\r\n            reader.onload = function() {\r\n                var arrayBuffer = reader.result;\r\n                var bytes = new Uint8Array(arrayBuffer as any);\r\n                setFormValue({ encoded: Base64EncodeFileOrImageUtils.encode(bytes as any) });\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChooseFile = () => {\r\n        uploadFileRef.current && uploadFileRef.current.click();\r\n    }\r\n\r\n    const onCopyToClipboard = () => {\r\n        navigator.clipboard.writeText(formValue.encoded);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Base64 Encode File Or Image</h1>\r\n            <div className=\"mb-3\">\r\n                <MDBBtn onClick={onChooseFile}>Choose file</MDBBtn>\r\n                <MDBBtn\r\n                    className=\"mx-3\"\r\n                    color=\"success\"\r\n                    disabled={!formValue.encoded}\r\n                    onClick={onCopyToClipboard} \r\n                >\r\n                    Copy to clipboard\r\n                </MDBBtn>\r\n                <input \r\n                    type=\"file\"\r\n                    style={{display: \"none\"}}\r\n                    onChange={onUpload}\r\n                    ref={uploadFileRef}\r\n                />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <Base64EncodeFileOrImageEncodedMemo value={formValue.encoded} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface Base64EncodeFileOrImageEncodedProps {\r\n    value: string,\r\n}\r\n\r\nconst Base64EncodeFileOrImageEncoded: React.FC<Base64EncodeFileOrImageEncodedProps> = (props: Base64EncodeFileOrImageEncodedProps) => {\r\n    return (\r\n        <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{height: 430}}>\r\n            <div dangerouslySetInnerHTML={{ __html: props.value }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Base64EncodeFileOrImageEncodedMemo = memo(Base64EncodeFileOrImageEncoded);","import { Switch, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Main } from \"./Main\";\r\nimport { \r\n    Base64EncodeDecodeRoute, \r\n    Base64EncodeFileOrImageRoute, \r\n    GuidGeneratorRoute, \r\n    HtmlEncodeDecodeRoute, \r\n    JsonFormatterRoute, \r\n    JsonViewerRoute, \r\n    LoanCalculatorRoute, \r\n    Md5GeneratorRoute, \r\n    Sha1GeneratorRoute, \r\n    Sha256GeneratorRoute, \r\n    TextDifferencesRoute, \r\n    TranslitFromRussianToEnglishRoute, \r\n    UnitConverterRoute, \r\n    UrlEncodeDecodeRoute \r\n} from \"./Routes\";\r\nimport { TranslitFromRussianToEnglish } from \"../tools/translit-from-russian-to-english/TranslitFromRussianToEnglish\";\r\nimport { GuidGenerator } from \"../tools/guid-generator/GuidGenerator\";\r\nimport { UrlEncodeDecode } from \"../tools/url-encode-decode/UrlEncodeDecode\";\r\nimport { HtmlEncodeDecode } from \"../tools/html-encode-decode/HtmlEncodeDecode\";\r\nimport { Base64EncodeDecode } from \"../tools/base64-encode-decode/Base64EncodeDecode\";\r\nimport { Sha256Generator } from \"../tools/sha256-generator/Sha256Generator\";\r\nimport { Sha1Generator } from \"../tools/sha1-generator/Sha1Generator\";\r\nimport { Md5Generator } from \"../tools/md5-generator/Md5Generator\";\r\nimport { TextDifferences } from \"../tools/text-differences/TextDifferences\";\r\nimport { JsonFormatter } from \"../tools/json-formatter/JsonFormatter\";\r\nimport { JsonViewer } from \"../tools/json-viewer/JsonViewer\";\r\nimport { UnitConverter } from \"../tools/unit-converter/UnitConverter\";\r\nimport { LoanCalculator } from \"../tools/loan-calculator/LoanCalculator\";\r\nimport { Base64EncodeFileOrImage } from \"../tools/base64-encode-file-or-image/Base64EncodeFileOrImage\";\r\n\r\nexport const Router: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Main} />\r\n            <Route path=\"/tools\" component={ToolsRouter} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst ToolsRouter: React.FC<RouteComponentProps> = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route path={`${props.match.url}/${JsonViewerRoute.url}`} component={JsonViewer} />\r\n            <Route path={`${props.match.url}/${JsonFormatterRoute.url}`} component={JsonFormatter} />\r\n            <Route path={`${props.match.url}/${TextDifferencesRoute.url}`} component={TextDifferences} />\r\n            <Route path={`${props.match.url}/${TranslitFromRussianToEnglishRoute.url}`} component={TranslitFromRussianToEnglish} />\r\n            <Route path={`${props.match.url}/${UnitConverterRoute.url}`} component={UnitConverter} />\r\n            <Route path={`${props.match.url}/${LoanCalculatorRoute.url}`} component={LoanCalculator} />\r\n            <Route path={`${props.match.url}/${GuidGeneratorRoute.url}`} component={GuidGenerator} />\r\n            <Route path={`${props.match.url}/${UrlEncodeDecodeRoute.url}`} component={UrlEncodeDecode} />\r\n            <Route path={`${props.match.url}/${HtmlEncodeDecodeRoute.url}`} component={HtmlEncodeDecode} />\r\n            <Route path={`${props.match.url}/${Base64EncodeDecodeRoute.url}`} component={Base64EncodeDecode} />\r\n            <Route path={`${props.match.url}/${Base64EncodeFileOrImageRoute.url}`} component={Base64EncodeFileOrImage} />\r\n            <Route path={`${props.match.url}/${Md5GeneratorRoute.url}`} component={Md5Generator} />\r\n            <Route path={`${props.match.url}/${Sha1GeneratorRoute.url}`} component={Sha1Generator} />\r\n            <Route path={`${props.match.url}/${Sha256GeneratorRoute.url}`} component={Sha256Generator} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Header } from \"./Header\";\r\nimport { Router } from \"./Router\";\r\nimport { MDBContainer } from \"mdb-react-ui-kit\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <MDBContainer fluid className=\"mt-3\">\r\n        <Router />\r\n      </MDBContainer>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}