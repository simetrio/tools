{"version":3,"sources":["tools/base64-encode-file-or-image/Base64EncodeFileOrImage.tsx","tools/guid-generator/GuidGeneratorUtils.ts","tools/guid-generator/GuidGenerator.tsx","tools/html-encode-decode/HtmlEncodeDecodeUtils.ts","tools/json-formatter/JsonFormatterUtils.ts","tools/json-formatter/JsonFormatter.tsx","tools/json-viewer/JsonViewerUtils.ts","tools/json-viewer/JsonViewer.tsx","tools/loan-calculator/LoanCalculatorUtils.ts","tools/loan-calculator/LoanCalculator.tsx","tools/md5-generator/Md5GeneratorUtils.ts","tools/md5-generator/Md5Generator.tsx","tools/sha1-generator/Sha1GeneratorUtils.ts","tools/sha1-generator/Sha1Generator.tsx","tools/sha256-generator/Sha256GeneratorUtils.ts","tools/sha256-generator/Sha256Generator.tsx","tools/text-differences/TextDifferencesUtils.ts","tools/translit-from-russian-to-english/TranslitFromRussianToEnglishUtils.ts","tools/unit-converter/UnitConverterUtils.ts","tools/unit-converter/UnitConverter.tsx","app/Routes.ts","tools/text-differences/TextDifferences.tsx","tools/translit-from-russian-to-english/TranslitFromRussianToEnglish.tsx","tools/url-encode-decode/UrlEncodeDecode.tsx","tools/html-encode-decode/HtmlEncodeDecode.tsx","tools/base64-encode-decode/Base64EncodeDecode.tsx","app/Header.tsx","app/Main.tsx","app/Router.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Base64EncodeFileOrImageEncoded","props","className","style","height","dangerouslySetInnerHTML","__html","value","Base64EncodeFileOrImageEncodedMemo","memo","GuidGeneratorUtils","guids","i","count","push","newGuid","guid","replace","c","r","Math","random","toString","uppercase","toUpperCase","braces","hypens","HtmlEncodeDecodeUtils","encodeHtml","decodeEntity","decodeHtml","code","charAt","HTML_ENTITIES","n","substring","length","parseInt","isNaN","String","fromCharCode","JsonFormatterUtils","formatValue","JSON","stringify","parse","parseJson","x","parseFloat","formatNumber","formatString","formatBoolean","_","formatNull","e","message","formatJson","JsonViewerUtils","getObject","parseJsonObject","values","getProperties","Object","keys","map","key","name","getValue","jsonValue","Array","isArray","type","expanded","LoanCalculatorUtils","amount","term","rate","monthlyRate","monthlyPayment","pow","months","month","balance","now","Date","date","setMonth","getMonth","interest","principal","payment","index","calculateMonths","total","reduce","current","next","calculateTotal","calculate","timeout","LoanCalculatorFrom","md","htmlFor","onChange","LoanCalculatorFromTerm","useState","termPeriod","formValue","setFormValue","newFormValue","calculateAndSendChange","LoanCalculatorFromDropDown","tag","onClick","LoanCalculatorTable","maxCount","useEffect","window","setTimeout","result","small","hover","scope","slice","LoanCalculatorTableRowMemo","LoanCalculatorTableRow","LoanCalculatorSummary","NumberView","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","format","DateView","parts","DateTimeFormat","dateStyle","formatToParts","find","year","NumberEdit","id","currentTarget","Md5GeneratorUtils","k","AA","BB","CC","DD","a","b","d","S11","S12","S13","S14","S21","S22","S23","S24","S31","S32","S33","S34","S41","S42","S43","S44","utftext","charCodeAt","utf8Encode","lWordCount","lMessageLength","lNumberOfWords_temp1","lNumberOfWords","lWordArray","lBytePosition","lByteCount","convertToWordArray","FF","GG","HH","II","addUnsigned","wordToHex","encodeMD5","rotateLeft","lValue","iShiftBits","lX","lY","lX4","lY4","lX8","lY8","lResult","s","ac","y","z","F","G","H","I","lCount","wordToHexValue","wordToHexValueTemp","substr","Sha1GeneratorUtils","blockstart","j","A","B","C","D","E","temp","W","H0","H1","H2","H3","H4","valueLength","words","convertHex","encodeSha1","str","Sha256GeneratorUtils","binarray","hex_tab","binb2hex","array","f","g","h","T1","T2","K","HASH","safeAdd","Gamma1256","Gamma0256","Sigma1256","Ch","Sigma0256","Maj","coreSha256","bin","mask","str2binb","encodeSha256","lsw","S","X","R","TextDifferencesUtils","before","after","TextDifferencer","findDifferencesBetweenStrings","insertElementAt","element","splice","insertElementsAt","elements","string0","string1","lengthOfShorterString","passagePairsMatchingAtExtremes","lengthOfMatchingSubstring","offsetForString0","offsetForString1","matchingSubstringAtExtreme","passagePairMatchingAtExtreme","TextPassagePair","TextPassage","passagePairsAll","passagePairsMatching","this","findPassagePairsMatchingBetweenStrings","insertPassagePairsDifferentBetweenMatching","TextDifferences","positionOffsets","longestCommonPassagePair","findLongestCommonPassagePair","lengthOfCommonPassage","passages","text","passage0","passage1","passagePairSetsMatchingBeforeAndAfter","position","returnValue","lengthOfString0","lengthOfString1","substringLengthsForRow","substringLengthsForRowPrev","lengthOfLongestCommonSubstringSoFar","cellValue","startIndex","longestCommonSubstringSoFar","passagePairsToInsertBetween","pMax","p","passagePairToInsertAfter","passagePairToInsertBefore","buildAndInsertPassagePairBetweenExisting","indexOfPassagePairFinal","passagePairFinal","doPassagesMatch","lengthOfPassageToInsertAfter","positionsForPassagePairDifferent","passageToInsert0","passageToInsert1","passagePairToInsert","passagePairs","escapeStringForHTML","stringToEscape","TranslitFromRussianToEnglishUtils","char","translitChar","translitChars","translit","Unit","UnitType","UnitConverterUtils","from","to","UnitValues","convertUnit","UnitGroups","DataStorage","bit","KB","MB","GB","TB","PB","EB","Time","tick","ms","m","M","UnitTypes","UnitConverterRow","params","units","onConvert","target","onChangeUnit","label","readonly","UnitConverterUnitsDropDown","group","AllRoutes","url","title","component","decoded","jsonObject","console","log","textarea","rows","encoded","formatValueHtml","differences","findDifferences","action","border","background","clearTimeout","generate","onChangeBoolean","checked","defaultChecked","join","encodeURIComponent","decodeURIComponent","href","rel","color","fab","icon","size","Base64","encodeText","decodeToText","uploadFileRef","createRef","click","disabled","navigator","clipboard","writeText","display","files","file","fileSizeMB","toFixed","reader","FileReader","readAsArrayBuffer","Blob","onload","arrayBuffer","bytes","Uint8Array","encodeByteArray","ref","Header","showBasic","setShowBasic","expand","dark","bgColor","fluid","fas","navbar","show","right","fullWidth","Main","search","routes","filter","value1","value2","toLocaleLowerCase","includes","Router","path","exact","ToolsRouter","match","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd62a4c2.chunk.js","sourcesContent":["import { MDBBtn, MDBIcon } from \"mdb-react-ui-kit\";\r\nimport { createRef, memo, useState } from \"react\";\r\nimport { Base64 } from \"base64-js-tools\";\r\n\r\ninterface FormValue {\r\n    encoded: string,\r\n}\r\n\r\nconst maxSizeMB = 5;\r\n\r\nexport const Base64EncodeFileOrImage: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        encoded: \"\",\r\n    });\r\n\r\n    const uploadFileRef: any = createRef();\r\n\r\n    const onUpload = (e: any) => {\r\n        if (e.target.files.length > 0) {\r\n            setFormValue({ encoded: \"Loading...\" });\r\n\r\n            const file = e.target.files[0] as File;\r\n            const fileSizeMB = file.size / 1024 / 1024;\r\n            if (fileSizeMB > maxSizeMB) {\r\n                setFormValue({ encoded: `File too large. Max file size ${maxSizeMB} MB. File size ${fileSizeMB.toFixed(1)} MB` });\r\n                return;\r\n            }\r\n\r\n            const reader = new FileReader();\r\n            reader.readAsArrayBuffer(new Blob([file]));\r\n            reader.onload = function() {\r\n                var arrayBuffer = reader.result;\r\n                var bytes = new Uint8Array(arrayBuffer as any);\r\n                setFormValue({ encoded: Base64.encodeByteArray(bytes as any) });\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChooseFile = () => {\r\n        uploadFileRef.current && uploadFileRef.current.click();\r\n    }\r\n\r\n    const onCopyToClipboard = () => {\r\n        navigator.clipboard.writeText(formValue.encoded);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"d-inline-block me-3\">Online Base64 Encode File Or Image</h1>\r\n            <a\r\n                href=\"https://github.com/simetrio/base64-js-tools\"\r\n                title=\"Code on Github\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n            >\r\n                <MDBIcon color=\"black\" fab icon=\"github-square\" size=\"2x\" />\r\n            </a>\r\n            <div className=\"mb-3\">\r\n                <MDBBtn onClick={onChooseFile}>Choose file</MDBBtn>\r\n                <MDBBtn\r\n                    className=\"mx-3\"\r\n                    color=\"success\"\r\n                    disabled={!formValue.encoded}\r\n                    onClick={onCopyToClipboard} \r\n                >\r\n                    Copy to clipboard\r\n                </MDBBtn>\r\n                <input \r\n                    type=\"file\"\r\n                    style={{display: \"none\"}}\r\n                    onChange={onUpload}\r\n                    ref={uploadFileRef}\r\n                />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <Base64EncodeFileOrImageEncodedMemo value={formValue.encoded} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface Base64EncodeFileOrImageEncodedProps {\r\n    value: string,\r\n}\r\n\r\nconst Base64EncodeFileOrImageEncoded: React.FC<Base64EncodeFileOrImageEncodedProps> = (props: Base64EncodeFileOrImageEncodedProps) => {\r\n    return (\r\n        <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{height: 430}}>\r\n            <div dangerouslySetInnerHTML={{ __html: props.value }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Base64EncodeFileOrImageEncodedMemo = memo(Base64EncodeFileOrImageEncoded);","interface Props {\r\n    count: number,\r\n    uppercase: boolean,\r\n    braces: boolean,\r\n    hypens: boolean,\r\n}\r\n\r\nexport const GuidGeneratorUtils = {\r\n    generate: (props: Props): string[] => {\r\n        const guids: string[] = [];\r\n        for(let i = 0; i < props.count; i++) {\r\n            guids.push(newGuid(props));\r\n        }\r\n        return guids;\r\n    }\r\n}\r\n\r\nfunction newGuid(props: Props): string {\r\n    let guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n        const r = Math.random() * 16 | 0;\r\n        const v = c === \"x\" ? r : (r && 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n\r\n    if (props.uppercase) {\r\n        guid = guid.toUpperCase();\r\n    }\r\n\r\n    if (props.braces) {\r\n        guid = `{${guid}}`;\r\n    }\r\n\r\n    if (!props.hypens) {\r\n        guid = guid.replace(/-/g, \"\");\r\n    }\r\n\r\n    return guid;\r\n}","import { MDBBtn, MDBCheckbox, MDBCol, MDBInput } from \"mdb-react-ui-kit\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { GuidGeneratorUtils } from \"./GuidGeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    count: number,\r\n    uppercase: boolean,\r\n    braces: boolean,\r\n    hypens: boolean,\r\n    value: string[],\r\n}\r\n\r\nexport const GuidGenerator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        count: 1,\r\n        uppercase: false,\r\n        braces: false,\r\n        hypens: true,\r\n        value: [],\r\n    });\r\n\r\n    const generate = (props: FormValue) => {\r\n        setFormValue({ ...props, value: GuidGeneratorUtils.generate(props) });\r\n    }\r\n\r\n    const onChange = (e: any) => {\r\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.value };\r\n        setFormValue(newFormValue);\r\n        generate(newFormValue);\r\n    };\r\n\r\n    const onChangeBoolean = (e: any) => {\r\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.checked };\r\n        setFormValue(newFormValue);\r\n        generate(newFormValue);\r\n    };\r\n\r\n    const onGenerate = () => {\r\n        generate(formValue);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => generate(formValue), []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Guid Generator</h1>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBInput\r\n                    value={formValue.count.toString()}\r\n                    name=\"count\"\r\n                    id=\"count\"\r\n                    label=\"How many?\"\r\n                    onChange={onChange}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"uppercase\" \r\n                    id=\"uppercase\" \r\n                    label=\"Uppercase\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.uppercase}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"braces\" \r\n                    id=\"braces\" \r\n                    label=\"Braces\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.braces}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBCheckbox\r\n                    name=\"hypens\"\r\n                    id=\"hypens\" \r\n                    label=\"Hypens\"\r\n                    onClick={onChangeBoolean}\r\n                    defaultChecked={formValue.hypens}\r\n                />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBBtn onClick={onGenerate}>Generate</MDBBtn>\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n                <MDBInput label=\"Generated Guids\" textarea rows={10} value={formValue.value.join(\"\\n\")} />\r\n            </MDBCol>\r\n        </>\r\n    )\r\n}","export const HtmlEncodeDecodeUtils = {\r\n    encode: (value: string): string => encodeHtml(value),\r\n\r\n    decode: (value: string): string => decodeHtml(value),\r\n}\r\n\r\nfunction encodeHtml(value: string): string {\r\n    return value\r\n        .replace(/&/g, \"&amp;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/'/g, \"&apos;\")\r\n        .replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\");\r\n}\r\n\r\nfunction decodeHtml(value: string): string {\r\n    return value.replace(/&#?\\w+;/g, decodeEntity);\r\n}\r\n\r\nfunction decodeEntity(code: string) {\r\n  // name type\r\n  if (code.charAt(1) !== \"#\") {\r\n    return HTML_ENTITIES[code] || code;\r\n  }\r\n\r\n  var n, c = code.charAt(2);\r\n  // hex number\r\n  if (c === \"x\" || c === \"X\") {\r\n    c = code.substring(3, code.length - 1);\r\n    n = parseInt(c, 16);\r\n  } else {\r\n    c = code.substring(2, code.length - 1);\r\n    n = parseInt(c);\r\n  }\r\n  return isNaN(n) ? code : String.fromCharCode(n);\r\n}\r\n\r\nconst HTML_ENTITIES: any = {\r\n  \"&nbsp;\" : \"\\u00A0\",\r\n  \"&iexcl;\" : \"\\u00A1\",\r\n  \"&cent;\" : \"\\u00A2\",\r\n  \"&pound;\" : \"\\u00A3\",\r\n  \"&curren;\" : \"\\u00A4\",\r\n  \"&yen;\" : \"\\u00A5\",\r\n  \"&brvbar;\" : \"\\u00A6\",\r\n  \"&sect;\" : \"\\u00A7\",\r\n  \"&uml;\" : \"\\u00A8\",\r\n  \"&copy;\" : \"\\u00A9\",\r\n  \"&ordf;\" : \"\\u00AA\",\r\n  \"&laquo;\" : \"\\u00AB\",\r\n  \"&not;\" : \"\\u00AC\",\r\n  \"&shy;\" : \"\\u00AD\",\r\n  \"&reg;\" : \"\\u00AE\",\r\n  \"&macr;\" : \"\\u00AF\",\r\n  \"&deg;\" : \"\\u00B0\",\r\n  \"&plusmn;\" : \"\\u00B1\",\r\n  \"&sup2;\" : \"\\u00B2\",\r\n  \"&sup3;\" : \"\\u00B3\",\r\n  \"&acute;\" : \"\\u00B4\",\r\n  \"&micro;\" : \"\\u00B5\",\r\n  \"&para;\" : \"\\u00B6\",\r\n  \"&middot;\" : \"\\u00B7\",\r\n  \"&cedil;\" : \"\\u00B8\",\r\n  \"&sup1;\" : \"\\u00B9\",\r\n  \"&ordm;\" : \"\\u00BA\",\r\n  \"&raquo;\" : \"\\u00BB\",\r\n  \"&frac14;\" : \"\\u00BC\",\r\n  \"&frac12;\" : \"\\u00BD\",\r\n  \"&frac34;\" : \"\\u00BE\",\r\n  \"&iquest;\" : \"\\u00BF\",\r\n  \"&Agrave;\" : \"\\u00C0\",\r\n  \"&Aacute;\" : \"\\u00C1\",\r\n  \"&Acirc;\" : \"\\u00C2\",\r\n  \"&Atilde;\" : \"\\u00C3\",\r\n  \"&Auml;\" : \"\\u00C4\",\r\n  \"&Aring;\" : \"\\u00C5\",\r\n  \"&AElig;\" : \"\\u00C6\",\r\n  \"&Ccedil;\" : \"\\u00C7\",\r\n  \"&Egrave;\" : \"\\u00C8\",\r\n  \"&Eacute;\" : \"\\u00C9\",\r\n  \"&Ecirc;\" : \"\\u00CA\",\r\n  \"&Euml;\" : \"\\u00CB\",\r\n  \"&Igrave;\" : \"\\u00CC\",\r\n  \"&Iacute;\" : \"\\u00CD\",\r\n  \"&Icirc;\" : \"\\u00CE\",\r\n  \"&Iuml;\" : \"\\u00CF\",\r\n  \"&ETH;\" : \"\\u00D0\",\r\n  \"&Ntilde;\" : \"\\u00D1\",\r\n  \"&Ograve;\" : \"\\u00D2\",\r\n  \"&Oacute;\" : \"\\u00D3\",\r\n  \"&Ocirc;\" : \"\\u00D4\",\r\n  \"&Otilde;\" : \"\\u00D5\",\r\n  \"&Ouml;\" : \"\\u00D6\",\r\n  \"&times;\" : \"\\u00D7\",\r\n  \"&Oslash;\" : \"\\u00D8\",\r\n  \"&Ugrave;\" : \"\\u00D9\",\r\n  \"&Uacute;\" : \"\\u00DA\",\r\n  \"&Ucirc;\" : \"\\u00DB\",\r\n  \"&Uuml;\" : \"\\u00DC\",\r\n  \"&Yacute;\" : \"\\u00DD\",\r\n  \"&THORN;\" : \"\\u00DE\",\r\n  \"&szlig;\" : \"\\u00DF\",\r\n  \"&agrave;\" : \"\\u00E0\",\r\n  \"&aacute;\" : \"\\u00E1\",\r\n  \"&acirc;\" : \"\\u00E2\",\r\n  \"&atilde;\" : \"\\u00E3\",\r\n  \"&auml;\" : \"\\u00E4\",\r\n  \"&aring;\" : \"\\u00E5\",\r\n  \"&aelig;\" : \"\\u00E6\",\r\n  \"&ccedil;\" : \"\\u00E7\",\r\n  \"&egrave;\" : \"\\u00E8\",\r\n  \"&eacute;\" : \"\\u00E9\",\r\n  \"&ecirc;\" : \"\\u00EA\",\r\n  \"&euml;\" : \"\\u00EB\",\r\n  \"&igrave;\" : \"\\u00EC\",\r\n  \"&iacute;\" : \"\\u00ED\",\r\n  \"&icirc;\" : \"\\u00EE\",\r\n  \"&iuml;\" : \"\\u00EF\",\r\n  \"&eth;\" : \"\\u00F0\",\r\n  \"&ntilde;\" : \"\\u00F1\",\r\n  \"&ograve;\" : \"\\u00F2\",\r\n  \"&oacute;\" : \"\\u00F3\",\r\n  \"&ocirc;\" : \"\\u00F4\",\r\n  \"&otilde;\" : \"\\u00F5\",\r\n  \"&ouml;\" : \"\\u00F6\",\r\n  \"&divide;\" : \"\\u00F7\",\r\n  \"&oslash;\" : \"\\u00F8\",\r\n  \"&ugrave;\" : \"\\u00F9\",\r\n  \"&uacute;\" : \"\\u00FA\",\r\n  \"&ucirc;\" : \"\\u00FB\",\r\n  \"&uuml;\" : \"\\u00FC\",\r\n  \"&yacute;\" : \"\\u00FD\",\r\n  \"&thorn;\" : \"\\u00FE\",\r\n  \"&yuml;\" : \"\\u00FF\",\r\n  \"&quot;\" : \"\\u0022\",\r\n  \"&amp;\" : \"\\u0026\",\r\n  \"&lt;\" : \"\\u003C\",\r\n  \"&gt;\" : \"\\u003E\",\r\n  \"&apos;\" : \"\\u0027\",\r\n  \"&OElig;\" : \"\\u0152\",\r\n  \"&oelig;\" : \"\\u0153\",\r\n  \"&Scaron;\" : \"\\u0160\",\r\n  \"&scaron;\" : \"\\u0161\",\r\n  \"&Yuml;\" : \"\\u0178\",\r\n  \"&circ;\" : \"\\u02C6\",\r\n  \"&tilde;\" : \"\\u02DC\",\r\n  \"&ensp;\" : \"\\u2002\",\r\n  \"&emsp;\" : \"\\u2003\",\r\n  \"&thinsp;\" : \"\\u2009\",\r\n  \"&zwnj;\" : \"\\u200C\",\r\n  \"&zwj;\" : \"\\u200D\",\r\n  \"&lrm;\" : \"\\u200E\",\r\n  \"&rlm;\" : \"\\u200F\",\r\n  \"&ndash;\" : \"\\u2013\",\r\n  \"&mdash;\" : \"\\u2014\",\r\n  \"&lsquo;\" : \"\\u2018\",\r\n  \"&rsquo;\" : \"\\u2019\",\r\n  \"&sbquo;\" : \"\\u201A\",\r\n  \"&ldquo;\" : \"\\u201C\",\r\n  \"&rdquo;\" : \"\\u201D\",\r\n  \"&bdquo;\" : \"\\u201E\",\r\n  \"&dagger;\" : \"\\u2020\",\r\n  \"&Dagger;\" : \"\\u2021\",\r\n  \"&permil;\" : \"\\u2030\",\r\n  \"&lsaquo;\" : \"\\u2039\",\r\n  \"&rsaquo;\" : \"\\u203A\",\r\n  \"&euro;\" : \"\\u20AC\",\r\n  \"&fnof;\" : \"\\u0192\",\r\n  \"&Alpha;\" : \"\\u0391\",\r\n  \"&Beta;\" : \"\\u0392\",\r\n  \"&Gamma;\" : \"\\u0393\",\r\n  \"&Delta;\" : \"\\u0394\",\r\n  \"&Epsilon;\" : \"\\u0395\",\r\n  \"&Zeta;\" : \"\\u0396\",\r\n  \"&Eta;\" : \"\\u0397\",\r\n  \"&Theta;\" : \"\\u0398\",\r\n  \"&Iota;\" : \"\\u0399\",\r\n  \"&Kappa;\" : \"\\u039A\",\r\n  \"&Lambda;\" : \"\\u039B\",\r\n  \"&Mu;\" : \"\\u039C\",\r\n  \"&Nu;\" : \"\\u039D\",\r\n  \"&Xi;\" : \"\\u039E\",\r\n  \"&Omicron;\" : \"\\u039F\",\r\n  \"&Pi;\" : \"\\u03A0\",\r\n  \"&Rho;\" : \"\\u03A1\",\r\n  \"&Sigma;\" : \"\\u03A3\",\r\n  \"&Tau;\" : \"\\u03A4\",\r\n  \"&Upsilon;\" : \"\\u03A5\",\r\n  \"&Phi;\" : \"\\u03A6\",\r\n  \"&Chi;\" : \"\\u03A7\",\r\n  \"&Psi;\" : \"\\u03A8\",\r\n  \"&Omega;\" : \"\\u03A9\",\r\n  \"&alpha;\" : \"\\u03B1\",\r\n  \"&beta;\" : \"\\u03B2\",\r\n  \"&gamma;\" : \"\\u03B3\",\r\n  \"&delta;\" : \"\\u03B4\",\r\n  \"&epsilon;\" : \"\\u03B5\",\r\n  \"&zeta;\" : \"\\u03B6\",\r\n  \"&eta;\" : \"\\u03B7\",\r\n  \"&theta;\" : \"\\u03B8\",\r\n  \"&iota;\" : \"\\u03B9\",\r\n  \"&kappa;\" : \"\\u03BA\",\r\n  \"&lambda;\" : \"\\u03BB\",\r\n  \"&mu;\" : \"\\u03BC\",\r\n  \"&nu;\" : \"\\u03BD\",\r\n  \"&xi;\" : \"\\u03BE\",\r\n  \"&omicron;\" : \"\\u03BF\",\r\n  \"&pi;\" : \"\\u03C0\",\r\n  \"&rho;\" : \"\\u03C1\",\r\n  \"&sigmaf;\" : \"\\u03C2\",\r\n  \"&sigma;\" : \"\\u03C3\",\r\n  \"&tau;\" : \"\\u03C4\",\r\n  \"&upsilon;\" : \"\\u03C5\",\r\n  \"&phi;\" : \"\\u03C6\",\r\n  \"&chi;\" : \"\\u03C7\",\r\n  \"&psi;\" : \"\\u03C8\",\r\n  \"&omega;\" : \"\\u03C9\",\r\n  \"&thetasym;\" : \"\\u03D1\",\r\n  \"&upsih;\" : \"\\u03D2\",\r\n  \"&piv;\" : \"\\u03D6\",\r\n  \"&bull;\" : \"\\u2022\",\r\n  \"&hellip;\" : \"\\u2026\",\r\n  \"&prime;\" : \"\\u2032\",\r\n  \"&Prime;\" : \"\\u2033\",\r\n  \"&oline;\" : \"\\u203E\",\r\n  \"&frasl;\" : \"\\u2044\",\r\n  \"&weierp;\" : \"\\u2118\",\r\n  \"&image;\" : \"\\u2111\",\r\n  \"&real;\" : \"\\u211C\",\r\n  \"&trade;\" : \"\\u2122\",\r\n  \"&alefsym;\" : \"\\u2135\",\r\n  \"&larr;\" : \"\\u2190\",\r\n  \"&uarr;\" : \"\\u2191\",\r\n  \"&rarr;\" : \"\\u2192\",\r\n  \"&darr;\" : \"\\u2193\",\r\n  \"&harr;\" : \"\\u2194\",\r\n  \"&crarr;\" : \"\\u21B5\",\r\n  \"&lArr;\" : \"\\u21D0\",\r\n  \"&uArr;\" : \"\\u21D1\",\r\n  \"&rArr;\" : \"\\u21D2\",\r\n  \"&dArr;\" : \"\\u21D3\",\r\n  \"&hArr;\" : \"\\u21D4\",\r\n  \"&forall;\" : \"\\u2200\",\r\n  \"&part;\" : \"\\u2202\",\r\n  \"&exist;\" : \"\\u2203\",\r\n  \"&empty;\" : \"\\u2205\",\r\n  \"&nabla;\" : \"\\u2207\",\r\n  \"&isin;\" : \"\\u2208\",\r\n  \"&notin;\" : \"\\u2209\",\r\n  \"&ni;\" : \"\\u220B\",\r\n  \"&prod;\" : \"\\u220F\",\r\n  \"&sum;\" : \"\\u2211\",\r\n  \"&minus;\" : \"\\u2212\",\r\n  \"&lowast;\" : \"\\u2217\",\r\n  \"&radic;\" : \"\\u221A\",\r\n  \"&prop;\" : \"\\u221D\",\r\n  \"&infin;\" : \"\\u221E\",\r\n  \"&ang;\" : \"\\u2220\",\r\n  \"&and;\" : \"\\u2227\",\r\n  \"&or;\" : \"\\u2228\",\r\n  \"&cap;\" : \"\\u2229\",\r\n  \"&cup;\" : \"\\u222A\",\r\n  \"&int;\" : \"\\u222B\",\r\n  \"&there4;\" : \"\\u2234\",\r\n  \"&sim;\" : \"\\u223C\",\r\n  \"&cong;\" : \"\\u2245\",\r\n  \"&asymp;\" : \"\\u2248\",\r\n  \"&ne;\" : \"\\u2260\",\r\n  \"&equiv;\" : \"\\u2261\",\r\n  \"&le;\" : \"\\u2264\",\r\n  \"&ge;\" : \"\\u2265\",\r\n  \"&sub;\" : \"\\u2282\",\r\n  \"&sup;\" : \"\\u2283\",\r\n  \"&nsub;\" : \"\\u2284\",\r\n  \"&sube;\" : \"\\u2286\",\r\n  \"&supe;\" : \"\\u2287\",\r\n  \"&oplus;\" : \"\\u2295\",\r\n  \"&otimes;\" : \"\\u2297\",\r\n  \"&perp;\" : \"\\u22A5\",\r\n  \"&sdot;\" : \"\\u22C5\",\r\n  \"&lceil;\" : \"\\u2308\",\r\n  \"&rceil;\" : \"\\u2309\",\r\n  \"&lfloor;\" : \"\\u230A\",\r\n  \"&rfloor;\" : \"\\u230B\",\r\n  \"&lang;\" : \"\\u2329\",\r\n  \"&rang;\" : \"\\u232A\",\r\n  \"&loz;\" : \"\\u25CA\",\r\n  \"&spades;\" : \"\\u2660\",\r\n  \"&clubs;\" : \"\\u2663\",\r\n  \"&hearts;\" : \"\\u2665\",\r\n  \"&diams;\" : \"\\u2666\"\r\n};","export const JsonFormatterUtils = {\r\n    format: (value: string, formatValue: (value: string | number | boolean | null) => string): string => formatJson(value, formatValue),\r\n}\r\n\r\nfunction formatJson(value: string, formatValue: (value: string | number | boolean | null) => string) {\r\n  if(!value) {\r\n    return \"\";\r\n  }\r\n\r\n  try {\r\n    return JSON.stringify(parseJson(value), null, 4)\r\n      .replace(/\": [\\d.]+[,\\n]/g, (x) => formatNumber(x, formatValue))\r\n      .replace(/\": \".+\\n/g, (x) => formatString(x, formatValue))\r\n      .replace(/\": true/g, (x) => formatBoolean(x, formatValue))\r\n      .replace(/\": false/g, (x) => formatBoolean(x, formatValue))\r\n      .replace(/\": null/g, (x) => formatNull(x, formatValue))\r\n      ;\r\n  } catch(e: any) {\r\n    return (e as Error).message;\r\n  }\r\n}\r\n\r\nfunction parseJson(value: string): any {\r\n  return JSON.parse(value.replace(/\\n/g, \"\"));\r\n}\r\n\r\nfunction formatNumber(value: string, formatValue: (value: number) => string): string {\r\n  return value.replace(/[\\d.]+/, (x) => formatValue(parseFloat(x)));\r\n}\r\n\r\nfunction formatString(value: string, formatValue: (value: string) => string): string {\r\n  return value.replace(/ \".+\"/, formatValue);\r\n}\r\n\r\nfunction formatBoolean(value: string, formatValue: (value: boolean) => string): string {\r\n  return value.replace(/true/, (_) => formatValue(true)).replace(/false/, (_) => formatValue(false));\r\n}\r\n\r\nfunction formatNull(value: string, formatValue: (value: any) => string): string {\r\n  return value.replace(/null/, (_) => formatValue(null));\r\n}\r\n\r\n","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { JsonFormatterUtils } from \"./JsonFormatterUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const JsonFormatter: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const formatValueHtml = (value: string | number | boolean, className: \"text-danger\" | \"text-success\"): string => {\r\n        return `<span class=${className}>${value}</span>`;\r\n    };\r\n\r\n    const formatValue = (value: string | number | boolean | null): string => {\r\n        if (value === null) {\r\n            return formatValueHtml(\"null\", \"text-danger\");\r\n        }\r\n\r\n        const type = typeof value === \"number\" || typeof value === \"boolean\"\r\n            ? \"text-danger\" \r\n            : \"text-success\";\r\n        return formatValueHtml(value, type);\r\n    };\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: JsonFormatterUtils.format(value, formatValue) });\r\n    }\r\n\r\n    const formatHtml = (value: string) => value.replace(/\\n/g, \"<br/>\").replace(/\\s\\s/g, \"&nbsp;&nbsp;\");\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Json Formatter</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Json\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{height: 385}}>\r\n                        <div dangerouslySetInnerHTML={{ __html: formatHtml(formValue.encoded) }} />\r\n                    </div>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const JsonViewerUtils = {\r\n    parse: (value: string): JsonObject | null => parseJsonObject(value),\r\n}\r\n\r\nexport type JsonValueType = \"null\" | \"value\" | \"array\" | \"object\";\r\n\r\ninterface JsonValue {\r\n  value: any,\r\n  type: JsonValueType,\r\n  expanded: boolean,\r\n}\r\n\r\ninterface JsonProperty {\r\n  name: string,\r\n  value: JsonValue,\r\n}\r\n\r\nexport interface JsonObject {\r\n  values: JsonProperty[],\r\n}\r\n\r\nfunction parseJsonObject(value: string): JsonObject | null {\r\n  if (!value) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    return getObject(parseJson(value));\r\n  } catch(e: any) {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction parseJson(value: string): any {\r\n  return JSON.parse(value.replace(/\\n/g, \"\"));\r\n}\r\n\r\nfunction getObject(value: any): JsonObject {\r\n  return {\r\n    values: getProperties(value),\r\n  }\r\n}\r\n\r\nfunction getProperties(value: any): JsonProperty[] {\r\n  return Object.keys(value).map(key => ({\r\n    name: key,\r\n    value: getValue(value[key]),\r\n  }))\r\n}\r\n\r\nfunction getValue(value: any): JsonValue {\r\n  if (value === null) {\r\n    return jsonValue(null, \"null\");\r\n  }\r\n  if (Array.isArray(value)) {\r\n    return jsonValue((value as []).map(getValue), \"array\");\r\n  }\r\n  const type = typeof value;\r\n  if (type === \"string\" || type === \"number\" || type === \"bigint\" || type === \"boolean\") {\r\n    return jsonValue(value, \"value\");\r\n  }\r\n  return jsonValue(getObject(value), \"object\");\r\n}\r\n\r\nfunction jsonValue(value: any, type: JsonValueType): JsonValue {\r\n  return {\r\n    value,\r\n    type,\r\n    expanded: false,\r\n  }\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { JsonObject, JsonViewerUtils } from \"./JsonViewerUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    jsonObject: JsonObject | null,\r\n}\r\n\r\nexport const JsonViewer: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        jsonObject: null,\r\n    });\r\n\r\n    const onViewJson = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, jsonObject: JsonViewerUtils.parse(value) });\r\n    }\r\n\r\n    console.log(formValue.jsonObject);\r\n    return (\r\n        <>\r\n            <h1>Online Json Viewer</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Json\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onViewJson} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{height: 385}}>\r\n                        \r\n                    </div>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","interface Props {\r\n    amount: number,\r\n    term: number,\r\n    rate: number,\r\n}\r\n\r\nexport interface Result {\r\n    amount: number,\r\n    term: number,\r\n    rate: number,\r\n    monthlyPayment: number,\r\n    months: ResultRow[],\r\n    total: ResultRow,\r\n}\r\n\r\nexport interface ResultRow {\r\n    index: number,\r\n    date: Date,\r\n    payment: number,\r\n    principal: number,\r\n    interest: number,\r\n    balance: number,\r\n}\r\n\r\nexport const LoanCalculatorUtils = {\r\n    calculate: (props: Props): Result | null => calculate(props),\r\n}\r\n\r\nfunction calculate(props: Props): Result | null {\r\n    if (!props.amount || !props.term || !props.rate) {\r\n        return null;\r\n    }\r\n\r\n    const monthlyRate = props.rate / 12 / 100;\r\n    const monthlyPayment = props.amount * (monthlyRate + monthlyRate / (Math.pow(1 + monthlyRate, props.term) - 1));\r\n    const months = calculateMonths(monthlyRate, props.amount, props.term, monthlyPayment);\r\n    const total = calculateTotal(months);\r\n    \r\n    return {\r\n        amount: props.amount,\r\n        term: props.term,\r\n        rate: props.rate,\r\n        monthlyPayment,\r\n        months,\r\n        total\r\n    }\r\n}\r\n\r\nfunction calculateMonths(monthlyRate: number, amount: number, term: number, monthlyPayment: number): ResultRow[] {\r\n    const month: ResultRow[] = [];\r\n    let balance = amount;\r\n\r\n    for (let i = 1; i <= term; i++) {\r\n        const now = new Date();\r\n        const date = new Date(now.setMonth(now.getMonth() + i));\r\n        const interest = balance * monthlyRate;\r\n        const principal = balance > monthlyPayment - interest ? monthlyPayment - interest : balance;\r\n        const payment = principal + interest;\r\n        balance -= principal;\r\n\r\n        month.push({\r\n            index: i,\r\n            date,\r\n            payment,\r\n            principal,\r\n            interest,\r\n            balance,\r\n        })\r\n    }\r\n\r\n    return month;\r\n}\r\n\r\nfunction calculateTotal(months: ResultRow[]): ResultRow {\r\n    return months.reduce((current, next) => ({\r\n        ...current,\r\n        payment: current.payment + next.payment,\r\n        principal: current.principal + next.principal,\r\n        interest: current.interest + next.interest,\r\n    }));\r\n}","import { MDBCol, MDBDropdown, MDBDropdownItem, MDBDropdownLink, MDBDropdownMenu, MDBDropdownToggle, MDBInputGroup, MDBInputGroupElement, MDBInputGroupText, MDBRow, MDBTable, MDBTableBody, MDBTableHead } from \"mdb-react-ui-kit\";\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport { LoanCalculatorUtils, Result, ResultRow } from \"./LoanCalculatorUtils\";\r\n\r\ninterface FormValue {\r\n    amount: number,\r\n    term: number,\r\n    rate: number,\r\n    result: Result | null,\r\n}\r\n\r\nlet timeout = 0;\r\n\r\nexport const LoanCalculator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        amount: 5000,\r\n        term: 60,\r\n        rate: 4.5,\r\n        result: null,\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => calculate(formValue), []);\r\n\r\n    const executeAsync = (action: () => void) => {\r\n        if (timeout) {\r\n            window.clearTimeout(timeout);\r\n        }\r\n        timeout = window.setTimeout(action, 1000);\r\n    }\r\n\r\n    const calculate = (formValue: FormValue) => {\r\n        const result = LoanCalculatorUtils.calculate({...formValue});\r\n        setFormValue({ ...formValue, result });\r\n    };\r\n\r\n    const onChange = (name: string, value: any) => {\r\n        const newFormValue = { ...formValue, [name]: value };\r\n        setFormValue({ ...newFormValue });\r\n        executeAsync(() => calculate(newFormValue));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Loan Calculator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <LoanCalculatorFrom\r\n                        amount={formValue.amount}\r\n                        term={formValue.term}\r\n                        rate={formValue.rate}\r\n                        onChange={onChange}\r\n                    />\r\n                </MDBCol>\r\n                {formValue.result && (\r\n                    <MDBCol md=\"6\">\r\n                        <LoanCalculatorSummary result={formValue.result} />\r\n                    </MDBCol>\r\n                )}\r\n            </MDBRow>\r\n            {formValue.result && (\r\n                <MDBRow>\r\n                    <MDBCol md=\"12\">\r\n                        <LoanCalculatorTable result={formValue.result} />\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\ninterface LoanCalculatorFromProps {\r\n    amount: number,\r\n    term: number,\r\n    rate: number,\r\n    onChange: (name: string, value: number) => void,\r\n}\r\n\r\nconst LoanCalculatorFrom: React.FC<LoanCalculatorFromProps> = (props: LoanCalculatorFromProps) => {\r\n    return (\r\n        <>\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n                <label htmlFor=\"amount\" className=\"form-label\">\r\n                    Loan amount\r\n                </label>\r\n                <MDBInputGroup>\r\n                    <NumberEdit\r\n                        value={props.amount}\r\n                        name=\"amount\"\r\n                        onChange={props.onChange}\r\n                    />\r\n                </MDBInputGroup>\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n                <LoanCalculatorFromTerm name=\"term\" value={props.term} onChange={props.onChange} />\r\n            </MDBCol>\r\n\r\n            <MDBCol md=\"12\" className=\"mb-3\">\r\n                <label htmlFor=\"amount\" className=\"form-label\">\r\n                    Interest rate per year\r\n                </label>\r\n                <MDBInputGroup>\r\n                    <NumberEdit \r\n                        value={props.rate}\r\n                        name=\"rate\"\r\n                        onChange={props.onChange}\r\n                    />\r\n                    <MDBInputGroupText>%</MDBInputGroupText>\r\n                </MDBInputGroup>\r\n            </MDBCol>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface LoanCalculatorFromTermProps {\r\n    name: string,\r\n    value: number,\r\n    onChange: (name: string, value: number) => void,\r\n}\r\n\r\ninterface LoanCalculatorFromTermValue {\r\n    term: number,\r\n    termPeriod: string,\r\n}\r\n\r\nconst LoanCalculatorFromTerm: React.FC<LoanCalculatorFromTermProps> = (props: LoanCalculatorFromTermProps) => {\r\n    const [formValue, setFormValue] = useState<LoanCalculatorFromTermValue>({\r\n        term: props.value / 12,\r\n        termPeriod: \"years\",\r\n    });\r\n\r\n    const calculateAndSendChange = (term: number, termPeriod: string) => {\r\n        const value = termPeriod === \"years\" ? term * 12 : term;\r\n        props.onChange(props.name, value);\r\n    }\r\n    \r\n    const onChange = (name: string, value: any) => {\r\n        const newFormValue = { ...formValue, [name]: value };\r\n        setFormValue({ ...newFormValue });\r\n        calculateAndSendChange(newFormValue.term, newFormValue.termPeriod)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor=\"term\" className=\"form-label\">\r\n                Loan term\r\n            </label>\r\n            <MDBInputGroup>\r\n                <NumberEdit\r\n                    value={formValue.term}\r\n                    name=\"term\"\r\n                    onChange={onChange}\r\n                />\r\n                <LoanCalculatorFromDropDown \r\n                    name=\"termPeriod\"\r\n                    values={[\"years\", \"months\"]}\r\n                    className=\"group-drop-down-right\"\r\n                    onChange={onChange}\r\n                />\r\n            </MDBInputGroup>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface DropDownValue {\r\n    value: string,\r\n}\r\n\r\ninterface LoanCalculatorFromDropDownParams {\r\n    name: string,\r\n    values: string[],\r\n    className?: string,\r\n    onChange: (name: string, value: any) => void,\r\n}\r\n\r\nconst LoanCalculatorFromDropDown: React.FC<LoanCalculatorFromDropDownParams> = (props: LoanCalculatorFromDropDownParams) => {\r\n    const [formValue, setFormValue] = useState<DropDownValue>({\r\n        value: props.values[0],\r\n    });\r\n\r\n    const onChange = (value: string) => {\r\n        setFormValue({ ...formValue, value });\r\n        props.onChange(props.name, value);\r\n    }\r\n\r\n    return (\r\n        <MDBDropdown>\r\n            <MDBDropdownToggle className={props.className}>{formValue.value}</MDBDropdownToggle>\r\n            <MDBDropdownMenu>\r\n                <MDBDropdownItem>\r\n                    <MDBDropdownLink tag=\"button\" type=\"button\" className=\"bg-light p-0 m-0\"></MDBDropdownLink>\r\n                </MDBDropdownItem>\r\n                {props.values.map(x => (\r\n                    <MDBDropdownItem key={x}>\r\n                        <MDBDropdownLink \r\n                            tag=\"button\" \r\n                            type=\"button\" \r\n                            onClick={() => onChange(x)}\r\n                            className={formValue.value === x ? \"active\" : \"\"}\r\n                            aria-current={formValue.value === x ? \"true\" : \"\"}\r\n                        >\r\n                            {x}\r\n                        </MDBDropdownLink>\r\n                    </MDBDropdownItem>\r\n                ))}\r\n            </MDBDropdownMenu>\r\n        </MDBDropdown>\r\n    )\r\n}\r\n\r\ninterface LoanCalculatorTableValue {\r\n    maxCount: number,\r\n}\r\n\r\ninterface LoanCalculatorTableParams {\r\n    result: Result,\r\n}\r\n\r\nconst maxCountStep = 300;\r\n\r\nconst LoanCalculatorTable: React.FC<LoanCalculatorTableParams> = (props: LoanCalculatorTableParams) => {\r\n    const [formValue, setFormValue] = useState<LoanCalculatorTableValue>({\r\n        maxCount: maxCountStep,\r\n    });\r\n    \r\n    useEffect(() => {\r\n        window.setTimeout(() => {\r\n        if (props.result.months.length > formValue.maxCount) {\r\n                setFormValue({ ...formValue, maxCount: formValue.maxCount + maxCountStep });\r\n            }\r\n        }, 1000);\r\n    // eslint-disable-next-line\r\n    }, [formValue])\r\n\r\n    useEffect(() => {\r\n        setFormValue({ ...formValue, maxCount: maxCountStep });\r\n    // eslint-disable-next-line\r\n    }, [props.result])\r\n\r\n    return (\r\n        <MDBTable small hover>\r\n            <MDBTableHead>\r\n                <tr>\r\n                    <th scope=\"col\"></th>\r\n                    <th scope=\"col\">Date</th>\r\n                    <th scope=\"col\">Payment</th>\r\n                    <th scope=\"col\">Principal</th>\r\n                    <th scope=\"col\">Interest</th>\r\n                    <th scope=\"col\">Balance</th>\r\n                </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n                <tr>\r\n                    <td></td>\r\n                    <td><DateView value={new Date()} /></td>\r\n                    <td>&ndash;</td>\r\n                    <td>&ndash;</td>\r\n                    <td>&ndash;</td>\r\n                    <td><NumberView value={props.result.amount} /></td>\r\n                </tr>\r\n                {props.result.months.slice(0, formValue.maxCount).map(x => (\r\n                    <LoanCalculatorTableRowMemo key={x.date.toString()} {...x} />\r\n                ))}\r\n                {props.result.months.length <= formValue.maxCount && (\r\n                    <tr className=\"table-success\">\r\n                        <td></td>\r\n                        <td></td>\r\n                        <th><NumberView value={props.result.total.payment} /></th>\r\n                        <th><NumberView value={props.result.total.principal} /></th>\r\n                        <th><NumberView value={props.result.total.interest} /></th>\r\n                        <td></td>\r\n                    </tr>\r\n                )}\r\n            </MDBTableBody>\r\n        </MDBTable>\r\n    )\r\n}\r\n\r\nconst LoanCalculatorTableRow: React.FC<ResultRow> = (x: ResultRow) => {\r\n    return (\r\n        <tr>\r\n            <th>{x.index}</th>\r\n            <td><DateView value={x.date} /></td>\r\n            <td><NumberView value={x.payment} /></td>\r\n            <td><NumberView value={x.principal} /></td>\r\n            <td><NumberView value={x.interest} /></td>\r\n            <td><NumberView value={x.balance} /></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst LoanCalculatorTableRowMemo = memo(LoanCalculatorTableRow);\r\n\r\ninterface LoanCalculatorSummaryParams {\r\n    result: Result,\r\n}\r\n\r\nconst LoanCalculatorSummary: React.FC<LoanCalculatorSummaryParams> = (props: LoanCalculatorSummaryParams) => {\r\n    return (\r\n        <MDBTable small>\r\n            <MDBTableBody>\r\n                <tr>\r\n                    <td className=\"h6\">Monthly Payments</td>\r\n                    <td className=\"h6\"><NumberView value={props.result.monthlyPayment} /></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"h6\">Total Principal Paid</td>\r\n                    <td className=\"h6\"><NumberView value={props.result.total.principal} /></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"h6\">Total Interest Paid</td>\r\n                    <td className=\"h6\"><NumberView value={props.result.total.interest} /></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"h6\">Total Payments</td>\r\n                    <td className=\"h6\"><NumberView value={props.result.total.payment} /></td>\r\n                </tr>\r\n            </MDBTableBody>\r\n        </MDBTable>\r\n    )\r\n}\r\n\r\ninterface ViewParams<T> {\r\n    value: T,\r\n}\r\n\r\nconst NumberView: React.FC<ViewParams<number>> = (props: ViewParams<number>) => {\r\n    const options: Intl.NumberFormatOptions = {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n    }\r\n    return <>{new Intl.NumberFormat(undefined, options).format(props.value)}</>;\r\n}\r\n\r\nconst DateView: React.FC<ViewParams<Date>> = (props: ViewParams<Date>) => {\r\n    const dateOptions: Intl.DateTimeFormatOptions = {\r\n        dateStyle: \"long\",\r\n    }\r\n    \r\n    const parts = new Intl.DateTimeFormat(\"en-us\", dateOptions).formatToParts(props.value);\r\n    const month = parts.find(x => x.type === \"month\")?.value;\r\n    const year = parts.find(x => x.type === \"year\")?.value;\r\n\r\n    return <>{month} {year}</>;\r\n}\r\n\r\ninterface EditParams<T> {\r\n    name: string,\r\n    value: T,\r\n    onChange: (name: string, value: T) => void,\r\n}\r\n\r\ninterface EditValue {\r\n    value: string,\r\n}\r\n\r\nconst NumberEdit: React.FC<EditParams<number>> = (props: EditParams<number>) => {\r\n    const [formValue, setFormValue] = useState<EditValue>({\r\n        value: props.value.toString(),\r\n    });\r\n\r\n    const onChange = (e: any) => {\r\n        const value = e.currentTarget.value as string;\r\n        setFormValue({ ...formValue, value });\r\n        props.onChange(props.name, parseFloat(value.replace(\",\", \".\")))\r\n    };\r\n  \r\n    return (\r\n        <MDBInputGroupElement \r\n            type=\"text\"\r\n            value={formValue.value}\r\n            name={props.name}\r\n            id={props.name}\r\n            onChange={onChange}\r\n        />\r\n    );\r\n}","export const Md5GeneratorUtils = {\r\n    encode: (value: string): string => encodeMD5(value),\r\n}\r\n\r\nfunction encodeMD5(value: string): string {\r\n\tlet x: number[] = [];\r\n\tlet k,AA,BB,CC,DD,a,b,c,d;\r\n\tlet S11=7, S12=12, S13=17, S14=22;\r\n\tlet S21=5, S22=9 , S23=14, S24=20;\r\n\tlet S31=4, S32=11, S33=16, S34=23;\r\n\tlet S41=6, S42=10, S43=15, S44=21;\r\n \r\n\tvalue = utf8Encode(value);\r\n \r\n\tx = convertToWordArray(value);\r\n \r\n\ta = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\r\n \r\n\tfor (k=0;k<x.length;k+=16) {\r\n\t\tAA=a; BB=b; CC=c; DD=d;\r\n\t\ta=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\r\n\t\td=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\r\n\t\tc=FF(c,d,a,b,x[k+2], S13,0x242070DB);\r\n\t\tb=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\r\n\t\ta=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\r\n\t\td=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\r\n\t\tc=FF(c,d,a,b,x[k+6], S13,0xA8304613);\r\n\t\tb=FF(b,c,d,a,x[k+7], S14,0xFD469501);\r\n\t\ta=FF(a,b,c,d,x[k+8], S11,0x698098D8);\r\n\t\td=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\r\n\t\tc=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\r\n\t\tb=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\r\n\t\ta=FF(a,b,c,d,x[k+12],S11,0x6B901122);\r\n\t\td=FF(d,a,b,c,x[k+13],S12,0xFD987193);\r\n\t\tc=FF(c,d,a,b,x[k+14],S13,0xA679438E);\r\n\t\tb=FF(b,c,d,a,x[k+15],S14,0x49B40821);\r\n\t\ta=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\r\n\t\td=GG(d,a,b,c,x[k+6], S22,0xC040B340);\r\n\t\tc=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\r\n\t\tb=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\r\n\t\ta=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\r\n\t\td=GG(d,a,b,c,x[k+10],S22,0x2441453);\r\n\t\tc=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\r\n\t\tb=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\r\n\t\ta=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\r\n\t\td=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\r\n\t\tc=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\r\n\t\tb=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\r\n\t\ta=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\r\n\t\td=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\r\n\t\tc=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\r\n\t\tb=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\r\n\t\ta=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\r\n\t\td=HH(d,a,b,c,x[k+8], S32,0x8771F681);\r\n\t\tc=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\r\n\t\tb=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\r\n\t\ta=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\r\n\t\td=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\r\n\t\tc=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\r\n\t\tb=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\r\n\t\ta=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\r\n\t\td=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\r\n\t\tc=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\r\n\t\tb=HH(b,c,d,a,x[k+6], S34,0x4881D05);\r\n\t\ta=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\r\n\t\td=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\r\n\t\tc=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\r\n\t\tb=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\r\n\t\ta=II(a,b,c,d,x[k+0], S41,0xF4292244);\r\n\t\td=II(d,a,b,c,x[k+7], S42,0x432AFF97);\r\n\t\tc=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\r\n\t\tb=II(b,c,d,a,x[k+5], S44,0xFC93A039);\r\n\t\ta=II(a,b,c,d,x[k+12],S41,0x655B59C3);\r\n\t\td=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\r\n\t\tc=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\r\n\t\tb=II(b,c,d,a,x[k+1], S44,0x85845DD1);\r\n\t\ta=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\r\n\t\td=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\r\n\t\tc=II(c,d,a,b,x[k+6], S43,0xA3014314);\r\n\t\tb=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\r\n\t\ta=II(a,b,c,d,x[k+4], S41,0xF7537E82);\r\n\t\td=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\r\n\t\tc=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\r\n\t\tb=II(b,c,d,a,x[k+9], S44,0xEB86D391);\r\n\t\ta=addUnsigned(a,AA);\r\n\t\tb=addUnsigned(b,BB);\r\n\t\tc=addUnsigned(c,CC);\r\n\t\td=addUnsigned(d,DD);\r\n\t}\r\n \r\n\treturn wordToHex(a)+wordToHex(b)+wordToHex(c)+wordToHex(d);\r\n}\r\n\r\nfunction rotateLeft(lValue: number, iShiftBits: number): number {\r\n  return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\r\n}\r\n\r\nfunction addUnsigned(lX: number, lY: number): number {\r\n  let lX4,lY4,lX8,lY8,lResult;\r\n  lX8 = (lX & 0x80000000);\r\n  lY8 = (lY & 0x80000000);\r\n  lX4 = (lX & 0x40000000);\r\n  lY4 = (lY & 0x40000000);\r\n  lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\r\n  if (lX4 & lY4) {\r\n    return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\r\n  }\r\n  if (lX4 | lY4) {\r\n    if (lResult & 0x40000000) {\r\n      return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\r\n    } else {\r\n      return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\r\n    }\r\n  } else {\r\n    return (lResult ^ lX8 ^ lY8);\r\n  }\r\n }\r\n\r\nfunction F(x: number, y: number, z: number): number { return (x & y) | ((~x) & z); }\r\nfunction G(x: number, y: number, z: number): number { return (x & z) | (y & (~z)); }\r\nfunction H(x: number, y: number, z: number): number { return (x ^ y ^ z); }\r\nfunction I(x: number, y: number, z: number): number { return (y ^ (x | (~z))); }\r\n\r\nfunction FF(a: number, b: number, c: number, d: number, x: number, s: number, ac: number): number {\r\n  a = addUnsigned(a, addUnsigned(addUnsigned(F(b, c, d), x), ac));\r\n  return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nfunction GG(a: number, b: number, c: number, d: number, x: number, s: number, ac: number): number {\r\n  a = addUnsigned(a, addUnsigned(addUnsigned(G(b, c, d), x), ac));\r\n  return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nfunction HH(a: number, b: number, c: number, d: number, x: number, s: number, ac: number): number {\r\n  a = addUnsigned(a, addUnsigned(addUnsigned(H(b, c, d), x), ac));\r\n  return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nfunction II(a: number, b: number, c: number, d: number, x: number, s: number, ac: number): number {\r\n  a = addUnsigned(a, addUnsigned(addUnsigned(I(b, c, d), x), ac));\r\n  return addUnsigned(rotateLeft(a, s), b);\r\n};\r\n\r\nfunction convertToWordArray(value: string): number[] {\r\n  let lWordCount;\r\n  const lMessageLength = value.length;\r\n  const lNumberOfWords_temp1=lMessageLength + 8;\r\n  const lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\r\n  const lNumberOfWords = (lNumberOfWords_temp2+1)*16;\r\n  const lWordArray: number[] = Array(lNumberOfWords-1);\r\n  let lBytePosition = 0;\r\n  let lByteCount = 0;\r\n  while (lByteCount < lMessageLength) {\r\n    lWordCount = (lByteCount-(lByteCount % 4))/4;\r\n    lBytePosition = (lByteCount % 4)*8;\r\n    lWordArray[lWordCount] = (lWordArray[lWordCount] | (value.charCodeAt(lByteCount)<<lBytePosition));\r\n    lByteCount++;\r\n  }\r\n  lWordCount = (lByteCount-(lByteCount % 4))/4;\r\n  lBytePosition = (lByteCount % 4)*8;\r\n  lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\r\n  lWordArray[lNumberOfWords-2] = lMessageLength<<3;\r\n  lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\r\n  return lWordArray;\r\n};\r\n\r\nfunction wordToHex(lValue: number): string {\r\n  let wordToHexValue = \"\", wordToHexValueTemp = \"\", lByte, lCount;\r\n  for (lCount = 0;lCount<=3;lCount++) {\r\n    lByte = (lValue>>>(lCount*8)) & 255;\r\n    wordToHexValueTemp = \"0\" + lByte.toString(16);\r\n    wordToHexValue = wordToHexValue + wordToHexValueTemp.substr(wordToHexValueTemp.length-2,2);\r\n  }\r\n  return wordToHexValue;\r\n};\r\n\r\nfunction utf8Encode(value: string): string {\r\n  value = value.replace(/\\r\\n/g,\"\\n\");\r\n  let utftext = \"\";\r\n\r\n  for (let n = 0; n < value.length; n++) {\r\n\r\n    const c = value.charCodeAt(n);\r\n\r\n    if (c < 128) {\r\n      utftext += String.fromCharCode(c);\r\n    }\r\n    else if((c > 127) && (c < 2048)) {\r\n      utftext += String.fromCharCode((c >> 6) | 192);\r\n      utftext += String.fromCharCode((c & 63) | 128);\r\n    }\r\n    else {\r\n      utftext += String.fromCharCode((c >> 12) | 224);\r\n      utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n      utftext += String.fromCharCode((c & 63) | 128);\r\n    }\r\n\r\n  }\r\n\r\n  return utftext;\r\n};","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Md5GeneratorUtils } from \"./Md5GeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Md5Generator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Md5GeneratorUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online MD5 Generator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"MD5\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const Sha1GeneratorUtils = {\r\n    encode: (value: string): string => encodeSha1(value),\r\n}\r\n\r\nfunction encodeSha1(value: string): string {\r\n \tlet blockstart;\r\n\tlet i, j;\r\n\tlet W = new Array(80);\r\n\tlet H0 = 0x67452301;\r\n\tlet H1 = 0xEFCDAB89;\r\n\tlet H2 = 0x98BADCFE;\r\n\tlet H3 = 0x10325476;\r\n\tlet H4 = 0xC3D2E1F0;\r\n\tlet A, B, C, D, E;\r\n\tlet temp;\r\n \r\n\tvalue = utf8Encode(value);\r\n \r\n\tconst valueLength = value.length;\r\n \r\n\tconst words: number[] = [];\r\n\tfor(i = 0; i < valueLength - 3; i += 4) {\r\n\t\tj = (value.charCodeAt(i)<<24) | (value.charCodeAt(i+1)<<16) |\r\n\t\t(value.charCodeAt(i+2)<<8) | (value.charCodeAt(i+3));\r\n\t\twords.push(j);\r\n\t}\r\n \r\n\tswitch(valueLength % 4) {\r\n\t\tcase 0:\r\n\t\t\ti = 0x080000000;\r\n\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\ti = (value.charCodeAt(valueLength-1)<<24) | 0x0800000;\r\n\t\tbreak;\r\n \r\n\t\tcase 2:\r\n\t\t\ti = (value.charCodeAt(valueLength-2)<<24) | (value.charCodeAt(valueLength-1)<<16) | 0x08000;\r\n\t\tbreak;\r\n \r\n\t\tcase 3:\r\n\t\t\ti = (value.charCodeAt(valueLength-3)<<24) | (value.charCodeAt(valueLength-2)<<16) | (value.charCodeAt(valueLength-1)<<8) | 0x80;\r\n\t\tbreak;\r\n\t}\r\n \r\n\twords.push(i);\r\n \r\n\twhile((words.length % 16) !== 14) words.push( 0 );\r\n \r\n\twords.push(valueLength>>>29);\r\n\twords.push((valueLength<<3)&0x0ffffffff);\r\n \r\n\tfor (blockstart=0; blockstart<words.length; blockstart+=16) {\r\n \r\n\t\tfor(i=0; i<16; i++) W[i] = words[blockstart+i];\r\n\t\tfor(i=16; i<=79; i++) W[i] = rotateLeft(W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16], 1);\r\n \r\n\t\tA = H0;\r\n\t\tB = H1;\r\n\t\tC = H2;\r\n\t\tD = H3;\r\n\t\tE = H4;\r\n \r\n\t\tfor(i= 0; i<=19; i++) {\r\n\t\t\ttemp = (rotateLeft(A,5) + ((B&C) | (~B&D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotateLeft(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n \r\n\t\tfor(i=20; i<=39; i++) {\r\n\t\t\ttemp = (rotateLeft(A,5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotateLeft(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n \r\n\t\tfor(i=40; i<=59; i++) {\r\n\t\t\ttemp = (rotateLeft(A,5) + ((B&C) | (B&D) | (C&D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotateLeft(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n \r\n\t\tfor(i=60; i<=79; i++) {\r\n\t\t\ttemp = (rotateLeft(A,5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\r\n\t\t\tE = D;\r\n\t\t\tD = C;\r\n\t\t\tC = rotateLeft(B,30);\r\n\t\t\tB = A;\r\n\t\t\tA = temp;\r\n\t\t}\r\n \r\n\t\tH0 = (H0 + A) & 0x0ffffffff;\r\n\t\tH1 = (H1 + B) & 0x0ffffffff;\r\n\t\tH2 = (H2 + C) & 0x0ffffffff;\r\n\t\tH3 = (H3 + D) & 0x0ffffffff;\r\n\t\tH4 = (H4 + E) & 0x0ffffffff;\r\n \r\n\t}\r\n \r\n\treturn convertHex(H0) + convertHex(H1) + convertHex(H2) + convertHex(H3) + convertHex(H4);\r\n}\r\n\r\nfunction rotateLeft(n: number, s: number): number {\r\n  return ( n<<s ) | (n>>>(32-s));\r\n};\r\n\r\nfunction convertHex(value: number): string {\r\n  let str=\"\";\r\n  let i;\r\n  let v;\r\n\r\n  for(i=7; i>=0; i--) {\r\n    v = (value>>>(i*4))&0x0f;\r\n    str += v.toString(16);\r\n  }\r\n  return str;\r\n};\r\n\r\n\r\nfunction utf8Encode(value: string) {\r\n  value = value.replace(/\\r\\n/g,\"\\n\");\r\n  let utftext = \"\";\r\n\r\n  for (let n = 0; n < value.length; n++) {\r\n    const c = value.charCodeAt(n);\r\n\r\n    if (c < 128) {\r\n      utftext += String.fromCharCode(c);\r\n    }\r\n    else if((c > 127) && (c < 2048)) {\r\n      utftext += String.fromCharCode((c >> 6) | 192);\r\n      utftext += String.fromCharCode((c & 63) | 128);\r\n    }\r\n    else {\r\n      utftext += String.fromCharCode((c >> 12) | 224);\r\n      utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n      utftext += String.fromCharCode((c & 63) | 128);\r\n    }\r\n  }\r\n\r\n  return utftext;\r\n};","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Sha1GeneratorUtils } from \"./Sha1GeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Sha1Generator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Sha1GeneratorUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online SHA1 Generator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"SHA1\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const Sha256GeneratorUtils = {\r\n    encode: (value: string): string => encodeSha256(value),\r\n}\r\n\r\nconst hexcase = 0;\r\nconst charSize   = 8;\r\n \r\nfunction encodeSha256(value: string): string {\r\n\tvalue = utf8Encode(value);\r\n\treturn binb2hex(coreSha256(str2binb(value), value.length * charSize));\r\n}\r\n \r\nfunction safeAdd (x: number, y: number): number {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n\r\nfunction S (X: number, n: number): number { return ( X >>> n ) | (X << (32 - n)); }\r\nfunction R (X: number, n: number): number { return ( X >>> n ); }\r\nfunction Ch(x: number, y: number, z: number): number { return ((x & y) ^ ((~x) & z)); }\r\nfunction Maj(x: number, y: number, z: number): number { return ((x & y) ^ (x & z) ^ (y & z)); }\r\nfunction Sigma0256(x: number): number { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }\r\nfunction Sigma1256(x: number): number { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }\r\nfunction Gamma0256(x: number): number { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }\r\nfunction Gamma1256(x: number): number { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }\r\n\r\nfunction coreSha256 (array: number[], length: number): number[] {\r\n    let K: number[] = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];\r\n    let HASH: number[] = [0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19];\r\n    let W: number[] = new Array(64);\r\n    let a, b, c, d, e, f, g, h;\r\n    let T1, T2;\r\n\r\n    array[length >> 5] |= 0x80 << (24 - length % 32);\r\n    array[((length + 64 >> 9) << 4) + 15] = length;\r\n\r\n    for (let i = 0; i<array.length; i+=16) {\r\n      a = HASH[0];\r\n      b = HASH[1];\r\n      c = HASH[2];\r\n      d = HASH[3];\r\n      e = HASH[4];\r\n      f = HASH[5];\r\n      g = HASH[6];\r\n      h = HASH[7];\r\n\r\n      for (let j = 0; j<64; j++) {\r\n        if (j < 16) W[j] = array[j + i];\r\n        else W[j] = safeAdd(safeAdd(safeAdd(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\r\n\r\n        T1 = safeAdd(safeAdd(safeAdd(safeAdd(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\r\n        T2 = safeAdd(Sigma0256(a), Maj(a, b, c));\r\n\r\n        h = g;\r\n        g = f;\r\n        f = e;\r\n        e = safeAdd(d, T1);\r\n        d = c;\r\n        c = b;\r\n        b = a;\r\n        a = safeAdd(T1, T2);\r\n      }\r\n\r\n      HASH[0] = safeAdd(a, HASH[0]);\r\n      HASH[1] = safeAdd(b, HASH[1]);\r\n      HASH[2] = safeAdd(c, HASH[2]);\r\n      HASH[3] = safeAdd(d, HASH[3]);\r\n      HASH[4] = safeAdd(e, HASH[4]);\r\n      HASH[5] = safeAdd(f, HASH[5]);\r\n      HASH[6] = safeAdd(g, HASH[6]);\r\n      HASH[7] = safeAdd(h, HASH[7]);\r\n    }\r\n    return HASH;\r\n}\r\n\r\nfunction str2binb(value: string): number[] {\r\n    const bin: number[] = [];\r\n    const mask = (1 << charSize) - 1;\r\n    for(let i = 0; i < value.length * charSize; i += charSize) {\r\n      bin[i>>5] |= (value.charCodeAt(i / charSize) & mask) << (24 - i%32);\r\n    }\r\n    return bin;\r\n}\r\n\r\nfunction utf8Encode(value: string): string {\r\n    value = value.replace(/\\r\\n/g,\"\\n\");\r\n    let utftext = \"\";\r\n\r\n    for (let n = 0; n < value.length; n++) {\r\n\r\n      const c = value.charCodeAt(n);\r\n\r\n      if (c < 128) {\r\n        utftext += String.fromCharCode(c);\r\n      }\r\n      else if((c > 127) && (c < 2048)) {\r\n        utftext += String.fromCharCode((c >> 6) | 192);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n      else {\r\n        utftext += String.fromCharCode((c >> 12) | 224);\r\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n        utftext += String.fromCharCode((c & 63) | 128);\r\n      }\r\n\r\n    }\r\n\r\n    return utftext;\r\n}\r\n\r\nfunction binb2hex(binarray: number[]): string {\r\n    const hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n    let str = \"\";\r\n    for(var i = 0; i < binarray.length * 4; i++) {\r\n      str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\r\n      hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\r\n    }\r\n    return str;\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Sha256GeneratorUtils } from \"./Sha256GeneratorUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Sha256Generator: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Sha256GeneratorUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online SHA256 Generator</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"SHA256\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","export const TextDifferencesUtils = {\r\n    findDifferences: (before: string, after: string): string => {\r\n\t\tif(!before || !after) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n        if(before === after) {\r\n            return before;\r\n        }\r\n\t\treturn new TextDifferencer().findDifferencesBetweenStrings(before, after).toString();\r\n\t},\r\n}\r\n\r\nfunction insertElementAt<T>(array: T[], element: T, index: number): void {\r\n\tarray.splice(index, 0, element);\r\n}\r\n\r\nfunction insertElementsAt<T>(array: T[], elements: T[], index: number) {\r\n\tfor (let i = 0; i < elements.length; i++)\r\n\t{\r\n\t\tarray.splice(index + i, 0, elements[i]);\r\n\t}\r\n}\r\n\r\nfunction removeAt<T>(array: T[], index: number) {\r\n\tarray.splice(index, 1);\r\n}\r\n\r\nclass TextDifferencer {\r\n    public findDifferencesBetweenStrings(string0: string, string1: string): TextDifferences {\r\n        let lengthOfShorterString: number = \r\n            (string0.length <= string1.length ? string0.length : string1.length);\r\n \r\n\t\tlet numberOfExtremes = 2;   \r\n\t\tlet passagePairsMatchingAtExtremes: TextPassagePair[] = [];\r\n     \r\n        for (let e = 0; e < numberOfExtremes; e++)\r\n        {\r\n            let lengthOfMatchingSubstring = 0;\r\n     \r\n            for (let i = 0; i < lengthOfShorterString; i++)\r\n            {\r\n                let offsetForString0 = (e === 0 ? i : string0.length - i - 1); \r\n                let offsetForString1 = (e === 0 ? i : string1.length - i - 1);\r\n \r\n                let charFromString0 = string0[offsetForString0];\r\n                let charFromString1 = string1[offsetForString1];\r\n     \r\n                if (charFromString0 !== charFromString1)\r\n                {\r\n                    lengthOfMatchingSubstring = i;\r\n                    break;          \r\n                }   \r\n            }\r\n     \r\n            let matchingSubstringAtExtreme: string;\r\n \r\n            if (e === 0)\r\n            {\r\n                matchingSubstringAtExtreme = string0.substr(0, lengthOfMatchingSubstring);\r\n                string0 = string0.substr(lengthOfMatchingSubstring);\r\n                string1 = string1.substr(lengthOfMatchingSubstring);\r\n            } else // if (e === 1)\r\n            {\r\n                matchingSubstringAtExtreme = string0.substr(string0.length - lengthOfMatchingSubstring);\r\n                string0 = string0.substr(0, string0.length - lengthOfMatchingSubstring);\r\n                string1 = string1.substr(0, string1.length - lengthOfMatchingSubstring);                \r\n            }\r\n \r\n            let passagePairMatchingAtExtreme = new TextPassagePair\r\n            (\r\n                true, // doPassagesMatch\r\n                [\r\n                    new TextPassage(matchingSubstringAtExtreme),\r\n                    new TextPassage(matchingSubstringAtExtreme),\r\n                ]\r\n            );\r\n \r\n            passagePairsMatchingAtExtremes.push\r\n            (\r\n                passagePairMatchingAtExtreme\r\n            );\r\n        }\r\n \r\n        let passagePairsAll: TextPassagePair[] = [];\r\n  \r\n        var passagePairsMatching = this.findPassagePairsMatchingBetweenStrings\r\n        (\r\n            string0, string1, [ 0, 0 ]\r\n        );\r\n  \r\n        this.insertPassagePairsDifferentBetweenMatching\r\n        (\r\n            string0,\r\n            string1,\r\n            passagePairsMatching,\r\n            passagePairsAll\r\n        );\r\n \r\n        for (var e = 0; e < passagePairsMatchingAtExtremes.length; e++)\r\n        {\r\n            var passagePairMatchingAtExtreme = passagePairsMatchingAtExtremes[e];\r\n            insertElementAt\r\n            (\r\n\t\t\t\tpassagePairsAll,\r\n                passagePairMatchingAtExtreme, \r\n                (e === 0 ? 0 : passagePairsAll.length)\r\n            );\r\n        }\r\n          \r\n        var returnValue = new TextDifferences(passagePairsAll);\r\n  \r\n        return returnValue;\r\n    }\r\n  \r\n    private findPassagePairsMatchingBetweenStrings(string0: string, string1: string, positionOffsets: number[]): TextPassagePair[] {\r\n        var passagePairsMatching: TextPassagePair[] = [];\r\n  \r\n        var longestCommonPassagePair = this.findLongestCommonPassagePair\r\n        (\r\n            string0, \r\n            string1\r\n        );\r\n  \r\n        var longestCommonPassageText = longestCommonPassagePair.passages[0].text;\r\n        var lengthOfCommonPassage = longestCommonPassageText.length;\r\n  \r\n        if (lengthOfCommonPassage === 0)\r\n        {\r\n            return passagePairsMatching;    \r\n        }\r\n  \r\n        passagePairsMatching.push(longestCommonPassagePair);\r\n  \r\n        var passages = longestCommonPassagePair.passages;\r\n        var passage0 = passages[0];\r\n        var passage1 = passages[1];\r\n  \r\n        var passagePairsMatchingBeforeCommon = this.findPassagePairsMatchingBetweenStrings\r\n        (\r\n            string0.substr(0, passage0.position),\r\n            string1.substr(0, passage1.position),\r\n            [\r\n                positionOffsets[0], \r\n                positionOffsets[1]\r\n            ]\r\n        );\r\n  \r\n        var passagePairsMatchingAfterCommon = this.findPassagePairsMatchingBetweenStrings\r\n        (\r\n            string0.substr\r\n            (\r\n                passage0.position + lengthOfCommonPassage\r\n            ),\r\n            string1.substr\r\n            (\r\n                passage1.position + lengthOfCommonPassage\r\n            ),\r\n            [\r\n                positionOffsets[0] \r\n                    + passage0.position \r\n                    + lengthOfCommonPassage,\r\n  \r\n                positionOffsets[1] \r\n                    + passage1.position \r\n                    + lengthOfCommonPassage\r\n            ]\r\n        );\r\n  \r\n        var passagePairSetsMatchingBeforeAndAfter = \r\n        [\r\n            passagePairsMatchingBeforeCommon,\r\n            passagePairsMatchingAfterCommon\r\n        ];\r\n  \r\n        for (var i = 0; i < passagePairSetsMatchingBeforeAndAfter.length; i++)\r\n        {\r\n            var passagePairsToInsert = passagePairSetsMatchingBeforeAndAfter[i];\r\n            insertElementsAt\r\n            (          \r\n\t\t\t\tpassagePairsMatching,\r\n                passagePairsToInsert,\r\n                (i === 0 ? 0 : passagePairsMatching.length)\r\n            );\r\n        }\r\n  \r\n        for (i = 0; i < longestCommonPassagePair.passages.length; i++)\r\n        {\r\n            var passage = longestCommonPassagePair.passages[i];\r\n            passage.position += positionOffsets[i];\r\n        }\r\n  \r\n        return passagePairsMatching;\r\n    }\r\n  \r\n    private findLongestCommonPassagePair(string0: string, string1: string): TextPassagePair {\r\n        var passage0 = new TextPassage(\"\", 0);\r\n        var passage1 = new TextPassage(\"\", 0);\r\n  \r\n        var returnValue = new TextPassagePair\r\n        (\r\n            true, // doPassagesMatch\r\n            [\r\n                passage0, passage1\r\n            ]\r\n        );\r\n  \r\n        var lengthOfString0 = string0.length;\r\n        var lengthOfString1 = string1.length;\r\n  \r\n        var substringLengthsForRow: number[] = [];\r\n        var substringLengthsForRowPrev: number[] = [];\r\n  \r\n        var lengthOfLongestCommonSubstringSoFar = 0;\r\n  \r\n        // Build a table whose y-axis is chars from string0,\r\n        // and whose x-axis is chars from string1.\r\n        // Put length of the longest substring in each cell.\r\n  \r\n        for (var i = 0; i < lengthOfString0; i++)\r\n        {\r\n            substringLengthsForRowPrev = substringLengthsForRow;\r\n            substringLengthsForRow = [];\r\n  \r\n            for (var j = 0; j < lengthOfString1; j++)\r\n            {\r\n                if (string0[i] !== string1[j])\r\n                {\r\n                    substringLengthsForRow[j] = 0;\r\n                }\r\n                else \r\n                {\r\n                    var cellValue;\r\n  \r\n                    if (i === 0 || j === 0)\r\n                    {\r\n                        // first row or column\r\n                        cellValue = 1;\r\n                    }\r\n                    else\r\n                    {\r\n                        // Copy cell to upper left, add 1.\r\n                        cellValue = substringLengthsForRowPrev[j - 1] + 1;\r\n                    }\r\n  \r\n                    substringLengthsForRow[j] = cellValue;\r\n  \r\n                    if (cellValue > lengthOfLongestCommonSubstringSoFar)\r\n                    {\r\n                        lengthOfLongestCommonSubstringSoFar = cellValue;\r\n                        var startIndex = i - lengthOfLongestCommonSubstringSoFar + 1;\r\n                        var longestCommonSubstringSoFar = string0.substring // not \"substr\"!\r\n                        (\r\n                            startIndex, \r\n                            i + 1\r\n                        );\r\n  \r\n                        passage0.text = longestCommonSubstringSoFar;\r\n                        passage0.position = startIndex;\r\n  \r\n                        passage1.text = longestCommonSubstringSoFar;\r\n                        passage1.position = j - lengthOfLongestCommonSubstringSoFar + 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n  \r\n        return returnValue;\r\n    }\r\n  \r\n    private insertPassagePairsDifferentBetweenMatching(\r\n        string0: string,\r\n        string1: string,\r\n        passagePairsToInsertBetween: TextPassagePair[],\r\n        passagePairsAll: TextPassagePair[]\r\n    )\r\n    {   \r\n        insertElementAt\r\n        (\r\n\t\t\tpassagePairsToInsertBetween,\r\n            new TextPassagePair\r\n            (\r\n                true, // doPassagesMatch\r\n                [\r\n                    new TextPassage(\"\", 0),\r\n                    new TextPassage(\"\", 0)\r\n                ]\r\n            ),\r\n            0\r\n        );\r\n  \r\n        passagePairsToInsertBetween.push\r\n        (\r\n            new TextPassagePair\r\n            (\r\n                true, // doPassagesMatch\r\n                [\r\n                    new TextPassage(\"\", string0.length),\r\n                    new TextPassage(\"\", string1.length)\r\n                ]\r\n            )\r\n        );\r\n  \r\n        var pMax = passagePairsToInsertBetween.length - 1;\r\n  \r\n        for (var p = 0; p < pMax; p++)\r\n        {\r\n            let passagePairToInsertAfter = passagePairsToInsertBetween[p];\r\n            let passagePairToInsertBefore = passagePairsToInsertBetween[p + 1];\r\n  \r\n            this.buildAndInsertPassagePairBetweenExisting\r\n            (\r\n                string0,\r\n                string1,\r\n                passagePairToInsertBefore,\r\n                passagePairToInsertAfter,\r\n                passagePairsAll\r\n            );\r\n  \r\n            passagePairsAll.push(passagePairToInsertBefore);\r\n        }\r\n  \r\n        var indexOfPassagePairFinal = passagePairsAll.length - 1;\r\n  \r\n        var passagePairFinal = passagePairsAll[indexOfPassagePairFinal];\r\n  \r\n        if \r\n        (\r\n            passagePairFinal.doPassagesMatch === true \r\n            && passagePairFinal.passages[0].text.length === 0\r\n        )\r\n        {\r\n            removeAt(passagePairsAll, indexOfPassagePairFinal);\r\n        }\r\n    }\r\n  \r\n    private buildAndInsertPassagePairBetweenExisting(\r\n        string0: string, \r\n        string1: string, \r\n        passagePairToInsertBefore: TextPassagePair, \r\n        passagePairToInsertAfter: TextPassagePair,\r\n        passagePairsAll: TextPassagePair[]\r\n    )\r\n    {\r\n        var lengthOfPassageToInsertAfter = passagePairToInsertAfter.passages[0].text.length;\r\n  \r\n        var positionsForPassagePairDifferent = \r\n        [\r\n            [\r\n                passagePairToInsertAfter.passages[0].position \r\n                    + lengthOfPassageToInsertAfter,\r\n  \r\n                passagePairToInsertAfter.passages[1].position \r\n                    + lengthOfPassageToInsertAfter\r\n            ],        \r\n            [\r\n                passagePairToInsertBefore.passages[0].position,\r\n                passagePairToInsertBefore.passages[1].position\r\n            ]          \r\n        ];\r\n  \r\n        var passageToInsert0 =  new TextPassage\r\n        (\r\n            string0.substring // not \"substr\"!\r\n            (\r\n                positionsForPassagePairDifferent[0][0], \r\n                positionsForPassagePairDifferent[1][0]\r\n            ),\r\n            positionsForPassagePairDifferent[0][0]\r\n        );\r\n  \r\n        var passageToInsert1 = new TextPassage\r\n        (\r\n            string1.substring  // not \"substr\"!\r\n            (\r\n                positionsForPassagePairDifferent[0][1], \r\n                positionsForPassagePairDifferent[1][1]\r\n            ),\r\n            positionsForPassagePairDifferent[0][1]\r\n        );\r\n  \r\n        var passagePairToInsert = new TextPassagePair\r\n        (\r\n            false, // doPassagesMatch\r\n            [\r\n                passageToInsert0,\r\n                passageToInsert1\r\n            ]\r\n        );\r\n  \r\n        if \r\n        (\r\n            passagePairToInsert.passages[0].text.length > 0\r\n            || passagePairToInsert.passages[1].text.length > 0\r\n        )\r\n        {\r\n            passagePairsAll.push(passagePairToInsert);\r\n        }\r\n    } \r\n}\r\n\r\nclass TextDifferences {\r\n\tconstructor(passagePairs: any)\r\n\t{\r\n\t\tthis.passagePairs = passagePairs;\r\n\t}\r\n\r\n\tpublic passagePairs: any;\r\n\r\n    // instance methods\r\n  \r\n    public toString() {\r\n        var returnValue = \"\";\r\n  \r\n        for (var p = 0; p < this.passagePairs.length; p++)\r\n        {\r\n            var passagePair = this.passagePairs[p];\r\n            var passagePairAsString = passagePair.toString();\r\n  \r\n            returnValue += passagePairAsString;\r\n        }\r\n  \r\n        return returnValue; \r\n    }   \r\n}\r\n\r\nclass TextPassage\r\n{\r\n\tconstructor(text: string, position: number = 0) {\r\n\t\tthis.text = text;\r\n\t\tthis.position = position;\r\n\t}\r\n    \r\n\tpublic text: string;\r\n\tpublic position: number;\r\n}\r\n  \r\nclass TextPassagePair\r\n{\r\n\tconstructor(doPassagesMatch: any, passages: any) {\r\n\t\tthis.doPassagesMatch = doPassagesMatch;\r\n\t\tthis.passages = passages;   \r\n\t}\r\n\r\n\tpublic doPassagesMatch: any;\r\n\tpublic passages: any;\r\n\r\n\tpublic toString() {\r\n        var returnValue = \"\";\r\n  \r\n        if (this.doPassagesMatch === true)\r\n        {\r\n            returnValue = this.passages[0].text;\r\n            returnValue = this.escapeStringForHTML(returnValue);\r\n        }\r\n        else\r\n        {\r\n\t\t\treturnValue += \"<mark class='bg-danger px-0'>\";\r\n\t\t\treturnValue += this.escapeStringForHTML(this.passages[0].text);\r\n\t\t\treturnValue += \"</mark><mark class='bg-success px-0'>\";\r\n\t\t\treturnValue += this.escapeStringForHTML(this.passages[1].text);\r\n\t\t\treturnValue += \"</mark>\"; \r\n        }\r\n  \r\n        return returnValue;\r\n    }\r\n\r\n\tpublic escapeStringForHTML(stringToEscape: string) {\r\n        var returnValue = stringToEscape.replace\r\n        (\r\n            \"&\", \"&amp;\"\r\n        ).replace\r\n        (\r\n            \"<\", \"&lt;\"\r\n        ).replace\r\n        (\r\n            \">\", \"&gt;\"\r\n        ).replace\r\n        (\r\n            \"\\n\", \"<br />\"\r\n        );\r\n \r\n        return returnValue;\r\n    }\r\n}","export const TranslitFromRussianToEnglishUtils = {\r\n    encode: (value: string): string => translit(value),\r\n}\r\n\r\nfunction translit(value: string): string {\r\n  let result: string = \"\";\r\n  \r\n  for(let i = 0; i < value.length; i++) {\r\n    const char = value.charAt(i);\r\n    const translitChar = translitChars[char];\r\n    result += translitChar !== undefined ? translitChar : char;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst translitChars: any = {\r\n  \"а\": \"a\",\r\n  \"б\": \"b\",\r\n  \"в\": \"v\",\r\n  \"г\": \"g\",\r\n  \"д\": \"d\",\r\n  \"е\": \"e\",\r\n  \"ё\": \"jo\",\r\n  \"ж\": \"zh\",\r\n  \"з\": \"z\",\r\n  \"и\": \"i\",\r\n  \"й\": \"j\",\r\n  \"к\": \"k\",\r\n  \"л\": \"l\",\r\n  \"м\": \"m\",\r\n  \"н\": \"n\",\r\n  \"о\": \"o\",\r\n  \"п\": \"p\",\r\n  \"р\": \"r\",\r\n  \"с\": \"s\",\r\n  \"т\": \"t\",\r\n  \"у\": \"u\",\r\n  \"ф\": \"f\",\r\n  \"х\": \"h\",\r\n  \"ц\": \"c\",\r\n  \"ч\": \"ch\",\r\n  \"ш\": \"sh\",\r\n  \"щ\": \"shh\",\r\n  \"ъ\": \"\",\r\n  \"ы\": \"y\",\r\n  \"ь\": \"\",\r\n  \"э\": \"je\",\r\n  \"ю\": \"yu\",\r\n  \"я\": \"ya\",\r\n\r\n  \"А\": \"A\",\r\n  \"Б\": \"B\",\r\n  \"В\": \"V\",\r\n  \"Г\": \"G\",\r\n  \"Д\": \"D\",\r\n  \"Е\": \"E\",\r\n  \"Ё\": \"Jo\",\r\n  \"Ж\": \"Zh\",\r\n  \"З\": \"Z\",\r\n  \"И\": \"I\",\r\n  \"Й\": \"J\",\r\n  \"К\": \"K\",\r\n  \"Л\": \"L\",\r\n  \"М\": \"M\",\r\n  \"Н\": \"N\",\r\n  \"О\": \"O\",\r\n  \"П\": \"P\",\r\n  \"Р\": \"R\",\r\n  \"С\": \"S\",\r\n  \"Т\": \"T\",\r\n  \"У\": \"U\",\r\n  \"Ф\": \"F\",\r\n  \"Х\": \"H\",\r\n  \"Ц\": \"C\",\r\n  \"Ч\": \"Ch\",\r\n  \"Ш\": \"Sh\",\r\n  \"Щ\": \"Shh\",\r\n  \"Ъ\": \"\",\r\n  \"Ы\": \"Y\",\r\n  \"Ь\": \"\",\r\n  \"Э\": \"Je\",\r\n  \"Ю\": \"Yu\",\r\n  \"Я\": \"Ya\",\r\n}","export const UnitConverterUtils = {\r\n    convert: (value: number, from: Unit, to: Unit): number => convertUnit(value, from, to),\r\n}\r\n\r\nfunction convertUnit(value: number, from: Unit, to: Unit): number {\r\n\tif (isNaN(value)) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn value * UnitValues[from] / UnitValues[to];\r\n}\r\n\r\nexport enum Unit {\r\n\t// Data storage\r\n\tbit = \"Bit (b)\",\r\n\tb = \"Byte (B)\",\r\n\tKB = \"Kilobyte (KB)\",\r\n\tMB = \"Megabyte (MB)\",\r\n\tGB = \"Gigabyte (MB)\",\r\n\tTB = \"Terabyte (MB)\",\r\n\tPB = \"Petabyte (MB)\",\r\n\tEB = \"Exabyte (MB)\",\r\n\r\n\t// Time\r\n\ttick = \"Tick (t)\",\r\n\tms = \"Milissecond (ms)\",\r\n\ts = \"Second (s)\",\r\n\tm = \"Minute (m)\",\r\n\th = \"Hour (h)\",\r\n\td = \"Day (d)\",\r\n\tM = \"Month (M)\",\r\n\ty = \"Year (y)\",\r\n}\r\n\r\nexport enum UnitType {\r\n\tDataStorage = \"Data Storage\",\r\n\tTime = \"Time\",\r\n}\r\n\r\nexport const UnitGroups: { [unitType: string]: Unit[] } = {\r\n\t[UnitType.DataStorage]: [Unit.bit, Unit.b, Unit.KB, Unit.MB, Unit.GB, Unit.TB, Unit.PB, Unit.EB,],\r\n\t[UnitType.Time]: [Unit.tick, Unit.ms, Unit.s, Unit.m, Unit.h, Unit.d, Unit.M, Unit.y,],\r\n\t// [UnitType.]: [Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit., Unit.,],\r\n}\r\n\r\nexport const UnitTypes = Object.keys(UnitGroups);\r\n\r\nconst UnitValues: { [unit: string]: number } = {\r\n\t// Data storage\r\n\t[Unit.bit]: 1,\r\n\t[Unit.b]: 8,\r\n\t[Unit.KB]: 8 * 1024,\r\n\t[Unit.MB]: 8 * 1024 * 1024,\r\n\t[Unit.GB]: 8 * 1024 * 1024 * 1024,\r\n\t[Unit.TB]: 8 * 1024 * 1024 * 1024 * 1024,\r\n\t[Unit.PB]: 8 * 1024 * 1024 * 1024 * 1024 * 1024,\r\n\t[Unit.EB]: 8 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024,\r\n\r\n\t// Time\r\n\t[Unit.tick]: 1,\r\n\t[Unit.ms]: 100,\r\n\t[Unit.s]: 100 * 1000,\r\n\t[Unit.m]: 100 * 1000 * 60,\r\n\t[Unit.h]: 100 * 1000 * 60 * 60,\r\n\t[Unit.d]: 100 * 1000 * 60 * 60 * 24,\r\n\t[Unit.M]: 100 * 1000 * 60 * 60 * 24 * 30.43,\r\n\t[Unit.y]: 100 * 1000 * 60 * 60 * 24 * 30.43 * 12,\r\n\r\n\t// ****\r\n\t// [Unit.]: 1,\r\n\t// [Unit.]: 1000,\r\n\t// [Unit.]: 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\r\n\t// [Unit.]: 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000,\r\n}","import { MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBDropdown, MDBDropdownItem, MDBDropdownLink, MDBDropdownMenu, MDBDropdownToggle, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Unit, UnitConverterUtils, UnitGroups, UnitTypes } from \"./UnitConverterUtils\";\r\n\r\nexport const UnitConverter: React.FC = () => {\r\n    return (\r\n        <>\r\n            <h1>Online Unit Converter</h1>\r\n            {UnitTypes.map(x => (\r\n                <MDBCard border=\"primary\" className=\"mb-3\">\r\n                    <MDBCardHeader background=\"primary\" className=\"text-white\">{x}</MDBCardHeader>\r\n                    <MDBCardBody className=\"pb-2\">\r\n                        <UnitConverterRow units={UnitGroups[x]} />\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\ninterface FormValue {\r\n    value: number,\r\n    from: Unit,\r\n    to: Unit,\r\n    result: number,\r\n}\r\n\r\ninterface UnitConverterRowParams {\r\n    units: Unit[],\r\n}\r\n\r\nconst UnitConverterRow: React.FC<UnitConverterRowParams> = (params: UnitConverterRowParams) => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        value: 0,\r\n        from: params.units[0],\r\n        to: params.units[0],\r\n        result: 0,\r\n    });\r\n\r\n    const onConvert = (e: any) => {\r\n        const newFormValue = { ...formValue, [e.target.name]: e.currentTarget.value };\r\n        setFormValue({ ...newFormValue, result: UnitConverterUtils.convert(newFormValue.value, newFormValue.from, newFormValue.to) });\r\n    }\r\n\r\n    const onChangeUnit = (name: string, value: Unit) => {\r\n        onConvert({\r\n            target: {name},\r\n            currentTarget: {value},\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MDBRow>\r\n                <MDBCol md=\"3\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        name=\"value\"\r\n                        label=\"Value\" \r\n                        value={formValue.value.toString()}\r\n                        onChange={onConvert} \r\n                        type=\"number\"\r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"3\" className=\"mb-3\">\r\n                    <UnitConverterUnitsDropDown \r\n                        name=\"from\"\r\n                        units={params.units}\r\n                        onChange={onChangeUnit} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"3\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        name=\"result\"\r\n                        label=\"Result\" \r\n                        value={formValue.result.toString()}\r\n                        type=\"number\"\r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"3\" className=\"mb-3\">\r\n                    <UnitConverterUnitsDropDown \r\n                        name=\"to\"\r\n                        units={params.units}\r\n                        onChange={onChangeUnit} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface DropDownValue {\r\n    value: Unit,\r\n}\r\n\r\ninterface UnitConverterUnitsDropDownParams {\r\n    name: string,\r\n    units: Unit[],\r\n    onChange: (name: string, unit: Unit) => void,\r\n}\r\n\r\nconst UnitConverterUnitsDropDown: React.FC<UnitConverterUnitsDropDownParams> = (params: UnitConverterUnitsDropDownParams) => {\r\n    const [formValue, setFormValue] = useState<DropDownValue>({\r\n        value: params.units[0],\r\n    });\r\n\r\n    const onChange = (value: Unit) => {\r\n        setFormValue({ ...formValue, value });\r\n        params.onChange(params.name, value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MDBDropdown group className=\"w-100\">\r\n                <MDBDropdownToggle>{formValue.value}</MDBDropdownToggle>\r\n                <MDBDropdownMenu>\r\n                    <MDBDropdownItem>\r\n                        <MDBDropdownLink tag=\"button\" type=\"button\" className=\"bg-light p-0 m-0\"></MDBDropdownLink>\r\n                    </MDBDropdownItem>\r\n                    {params.units.map(x => (\r\n                        <MDBDropdownItem>\r\n                            <MDBDropdownLink \r\n                                tag=\"button\" \r\n                                type=\"button\" \r\n                                onClick={() => onChange(x)}\r\n                                className={formValue.value === x ? \"active\" : \"\"}\r\n                                aria-current={formValue.value === x ? \"true\" : \"\"}\r\n                            >\r\n                                {x}\r\n                            </MDBDropdownLink>\r\n                        </MDBDropdownItem>\r\n                    ))}\r\n                </MDBDropdownMenu>\r\n            </MDBDropdown>\r\n        </>\r\n    )\r\n}","import { RouteComponentProps } from \"react-router\"\r\nimport { Base64EncodeDecode } from \"../tools/base64-encode-decode/Base64EncodeDecode\"\r\nimport { Base64EncodeFileOrImage } from \"../tools/base64-encode-file-or-image/Base64EncodeFileOrImage\"\r\nimport { GuidGenerator } from \"../tools/guid-generator/GuidGenerator\"\r\nimport { HtmlEncodeDecode } from \"../tools/html-encode-decode/HtmlEncodeDecode\"\r\nimport { JsonFormatter } from \"../tools/json-formatter/JsonFormatter\"\r\nimport { JsonViewer } from \"../tools/json-viewer/JsonViewer\"\r\nimport { LoanCalculator } from \"../tools/loan-calculator/LoanCalculator\"\r\nimport { Md5Generator } from \"../tools/md5-generator/Md5Generator\"\r\nimport { Sha1Generator } from \"../tools/sha1-generator/Sha1Generator\"\r\nimport { Sha256Generator } from \"../tools/sha256-generator/Sha256Generator\"\r\nimport { TextDifferences } from \"../tools/text-differences/TextDifferences\"\r\nimport { TranslitFromRussianToEnglish } from \"../tools/translit-from-russian-to-english/TranslitFromRussianToEnglish\"\r\nimport { UnitConverter } from \"../tools/unit-converter/UnitConverter\"\r\nimport { UrlEncodeDecode } from \"../tools/url-encode-decode/UrlEncodeDecode\"\r\n\r\nexport interface Route {\r\n    url: string,\r\n    name: string,\r\n    title: string,\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any> | undefined;\r\n}\r\n\r\nexport const AllRoutes: Route[] = [\r\n    { \r\n        url: \"json-viewer\", \r\n        name: \"Json Viewer\",\r\n        title: \"Online Json Viewer - Olrix Tools\",\r\n        component: JsonViewer,\r\n    },\r\n    { \r\n        url: \"json-formatter\", \r\n        name: \"Json Formatter\", \r\n        title: \"Online Json Formatter - Olrix Tools\",\r\n        component: JsonFormatter,\r\n    },\r\n    { \r\n        url: \"text-differences\", \r\n        name: \"Differences Between Texts\", \r\n        title: \"Online Finding Differences Between Texts - Olrix Tools\",\r\n        component: TextDifferences,\r\n    },\r\n    { \r\n        url: \"translit-from-russian-to-english\", \r\n        name: \"Translit From Russian\", \r\n        title: \"Online Translint From Russian To English - Olrix Tools\",\r\n        component: TranslitFromRussianToEnglish,\r\n    },\r\n    { \r\n        url: \"unit-converter\", \r\n        name: \"Unit Converter\", \r\n        title: \"Online Unit Converter - Olrix Tools\",\r\n        component: UnitConverter,\r\n    },\r\n    { \r\n        url: \"loan-calculator\", \r\n        name: \"Loan Calculator\", \r\n        title: \"Online Loan Calculator - Olrix Tools\",\r\n        component: LoanCalculator,\r\n    },\r\n    { \r\n        url: \"guid-generator\", \r\n        name: \"Guid Generator\", \r\n        title: \"Online Guid Generator - Olrix Tools\",\r\n        component: GuidGenerator,\r\n    },\r\n    { \r\n        url: \"url-encode-decode\", \r\n        name: \"Url Encode/Decode\", \r\n        title: \"Online Url Encode/Decode - Olrix Tools\",\r\n        component: UrlEncodeDecode,\r\n    },\r\n    { \r\n        url: \"html-encode-decode\", \r\n        name: \"Html Encode/Decode\", \r\n        title: \"Online Html Encode/Decode - Olrix Tools\",\r\n        component: HtmlEncodeDecode,\r\n    },\r\n    { \r\n        url: \"base64-encode-decode\", \r\n        name: \"Base64 Encode/Decode Text\", \r\n        title: \"Online Base64 Encode/Decode Text - Olrix Tools\",\r\n        component: Base64EncodeDecode,\r\n    },\r\n    { \r\n        url: \"base64-encode-file-or-image\", \r\n        name: \"Base64 Encode File Or Image\", \r\n        title: \"Online Base64 Encode File Or Image - Olrix Tools\",\r\n        component: Base64EncodeFileOrImage,\r\n    },\r\n    { \r\n        url: \"md5-generator\", \r\n        name: \"MD5 Generator\", \r\n        title: \"Online MD5 Generator - Olrix Tools\",\r\n        component: Md5Generator,\r\n    },\r\n    { \r\n        url: \"sha1-generator\", \r\n        name: \"SHA1 Generator\", \r\n        title: \"Online SHA1 Generator - Olrix Tools\",\r\n        component: Sha1Generator,\r\n    },\r\n    { \r\n        url: \"sha256-generator\", \r\n        name: \"SHA256 Generator\", \r\n        title: \"Online SHA256 Generator - Olrix Tools\",\r\n        component: Sha256Generator,\r\n    },\r\n]","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { TextDifferencesUtils } from \"./TextDifferencesUtils\";\r\n\r\ninterface FormValue {\r\n    before: string,\r\n    after: string,\r\n    differences: string,\r\n}\r\n\r\nexport const TextDifferences: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        before: '',\r\n        after: '',\r\n        differences: '',\r\n    });\r\n\r\n    const executeAsync = (action: () => void): void => {\r\n        window.setTimeout(action, 1);\r\n    }\r\n\r\n    const findDifferences = (before: string, after: string): void => {\r\n        setFormValue({ \r\n            ...formValue, \r\n            before,\r\n            after,\r\n            differences: \"loading...\" \r\n        });\r\n        executeAsync(() => {\r\n            setFormValue({ \r\n                ...formValue, \r\n                before,\r\n                after,\r\n                differences: TextDifferencesUtils.findDifferences(before, after) \r\n            })\r\n        });\r\n    }\r\n\r\n    const onChangeBefore = (e: any) => {\r\n        findDifferences(e.currentTarget.value || \"\", formValue.after);\r\n    }\r\n\r\n    const onChangeAfter = (e: any) => {\r\n        findDifferences(formValue.before, e.currentTarget.value || \"\");\r\n    }\r\n\r\n    const formatHtml = (value: string) => value.replace(/\\n/g, \"<br/>\").replace(/\\s\\s/g, \"&nbsp;&nbsp;\");\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Finding Differences Between Texts</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text Before\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.before}\r\n                        onChange={onChangeBefore} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Text After\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.after}\r\n                        onChange={onChangeAfter}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <h3>Differences</h3>\r\n            <MDBRow>\r\n                <MDBCol md=\"12\" className=\"mb-3\">\r\n                    <div className=\"square border-gray rounded wordwrap px-2 py-1\" style={{height: 385}}>\r\n                        <div dangerouslySetInnerHTML={{ __html: formatHtml(formValue.differences) }} />\r\n                    </div>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { TranslitFromRussianToEnglishUtils } from \"./TranslitFromRussianToEnglishUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const TranslitFromRussianToEnglish: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: TranslitFromRussianToEnglishUtils.encode(value) });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Translint From Russian To English</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Russian text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Translit to English text\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        readonly={true}\r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const UrlEncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: encodeURIComponent(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: decodeURIComponent(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Url Encode/Decode</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Url\" \r\n                        textarea \r\n                        rows={10} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Url\" \r\n                        textarea \r\n                        rows={10} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","import { MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { HtmlEncodeDecodeUtils } from \"./HtmlEncodeDecodeUtils\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const HtmlEncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: HtmlEncodeDecodeUtils.encode(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: HtmlEncodeDecodeUtils.decode(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Online Html Encode/Decode</h1>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Html\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Html\" \r\n                        textarea \r\n                        rows={15} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","import { MDBCol, MDBIcon, MDBInput, MDBRow } from \"mdb-react-ui-kit\";\r\nimport { useState } from \"react\";\r\nimport { Base64 } from \"base64-js-tools\";\r\n\r\ninterface FormValue {\r\n    decoded: string,\r\n    encoded: string,\r\n}\r\n\r\nexport const Base64EncodeDecode: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        decoded: '',\r\n        encoded: '',\r\n    });\r\n\r\n    const onEncode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: value, encoded: Base64.encodeText(value) });\r\n    }\r\n\r\n    const onDecode = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, decoded: Base64.decodeToText(value), encoded: value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"d-inline-block me-3\">Online Base64 Encode/Decode Text</h1>\r\n            <a\r\n                href=\"https://github.com/simetrio/base64-js-tools\"\r\n                title=\"Code on Github\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n            >\r\n                <MDBIcon color=\"black\" fab icon=\"github-square\" size=\"2x\" />\r\n            </a>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Decoded Base64\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.decoded}\r\n                        onChange={onEncode} \r\n                    />\r\n                </MDBCol>\r\n\r\n                <MDBCol md=\"6\" className=\"mb-3\">\r\n                    <MDBInput \r\n                        label=\"Encoded Base64\" \r\n                        textarea \r\n                        rows={20} \r\n                        value={formValue.encoded} \r\n                        onChange={onDecode} \r\n                    />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { AllRoutes } from \"./Routes\";\r\nimport {\r\n    MDBNavbar,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarToggler,\r\n    MDBNavbarBrand,\r\n    MDBCollapse,\r\n    MDBDropdown,\r\n    MDBDropdownToggle,\r\n    MDBDropdownMenu,\r\n    MDBDropdownItem,\r\n    MDBDropdownLink\r\n  } from \"mdb-react-ui-kit\";\r\n\r\nexport const Header: React.FC = () => {\r\n    const [showBasic, setShowBasic] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <MDBNavbar expand=\"lg\" dark bgColor=\"primary\">\r\n                <MDBContainer fluid>\r\n                    <MDBNavbarBrand href=\"/\">\r\n                        <MDBIcon className=\"mx-2 fa-1-5x\" icon=\"envelope\" />\r\n                        Olrix Tools\r\n                    </MDBNavbarBrand>\r\n\r\n                    <MDBNavbarToggler\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                        onClick={() => setShowBasic(!showBasic)}\r\n                    >\r\n                        <MDBIcon icon=\"bars\" fas />\r\n                    </MDBNavbarToggler>\r\n\r\n                    <MDBCollapse navbar show={showBasic}>\r\n                        <MDBNavbarNav right fullWidth={false} className=\"mb-2 mb-lg-0\">\r\n                            <MDBNavbarItem>\r\n                                <MDBDropdown>\r\n                                    <MDBDropdownToggle tag=\"a\" className=\"nav-link\">\r\n                                        Choose tools\r\n                                    </MDBDropdownToggle>\r\n                                    <MDBDropdownMenu>\r\n                                        {AllRoutes.map(x => (\r\n                                            <MDBDropdownItem key={x.url}>\r\n                                                <MDBDropdownLink href={`/tools/${x.url}/`}>{x.name}</MDBDropdownLink>\r\n                                            </MDBDropdownItem>\r\n                                        ))}\r\n                                    </MDBDropdownMenu>\r\n                                </MDBDropdown>\r\n                            </MDBNavbarItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </>\r\n    )\r\n}","import { MDBBtn, MDBCol, MDBInput, MDBRow } from \"mdb-react-ui-kit\"\r\nimport { useState } from \"react\";\r\nimport { AllRoutes } from \"./Routes\"\r\n\r\ninterface FormValue {\r\n    search: string,\r\n}\r\n\r\nexport const Main: React.FC = () => {\r\n    const [formValue, setFormValue] = useState<FormValue>({\r\n        search: \"\",\r\n    });\r\n\r\n    const onSearch = (e: any) => {\r\n        const value = e.currentTarget.value || \"\";\r\n        setFormValue({ ...formValue, search: value });\r\n    }\r\n\r\n    const contains = (value1: string, value2: string) => {\r\n        return value1.toLocaleLowerCase().includes(value2.toLocaleLowerCase());\r\n    }\r\n\r\n    const routes = formValue.search\r\n        ? AllRoutes.filter(x => contains(x.name, formValue.search))\r\n        : AllRoutes;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"m-4\">\r\n            <MDBInput\r\n                label=\"Search\" \r\n                value={formValue.search}\r\n                onChange={onSearch} \r\n            />\r\n            </div>\r\n            <MDBRow>\r\n                {routes.map(x => (\r\n                    <MDBCol md=\"3\" className=\"text-center my-2\">\r\n                        <MDBBtn href={`/tools/${x.url}/`} tag=\"a\">{x.name}</MDBBtn>\r\n                    </MDBCol>\r\n                ))}\r\n            </MDBRow>\r\n        </>\r\n    )\r\n}","import { Switch, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\r\nimport { Main } from \"./Main\";\r\nimport { AllRoutes } from \"./Routes\";\r\n\r\nexport const Router: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Main} />\r\n            <Route path=\"/tools\" component={ToolsRouter} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nconst ToolsRouter: React.FC<RouteComponentProps> = (props) => {\r\n    return (\r\n        <Switch>\r\n            {AllRoutes.map(x => (\r\n                <Route key={x.url} path={`${props.match.url}/${x.url}`} component={x.component} />\r\n            ))}\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Header } from \"./Header\";\r\nimport { Router } from \"./Router\";\r\nimport { MDBContainer } from \"mdb-react-ui-kit\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <MDBContainer fluid className=\"mt-3\">\r\n        <Router />\r\n      </MDBContainer>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}